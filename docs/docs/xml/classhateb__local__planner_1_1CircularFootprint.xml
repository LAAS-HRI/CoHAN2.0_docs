<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classhateb__local__planner_1_1CircularFootprint" kind="class" language="C++" prot="public">
    <compoundname>hateb_local_planner::CircularFootprint</compoundname>
    <basecompoundref refid="classhateb__local__planner_1_1BaseFootprintModel" prot="public" virt="non-virtual">hateb_local_planner::BaseFootprintModel</basecompoundref>
    <includes refid="footprint__model_8h" local="no">footprint_model.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classhateb__local__planner_1_1CircularFootprint_1a3f3b9e8d4b7c30b7c1154d688adc7a9d" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double hateb_local_planner::CircularFootprint::radius_</definition>
        <argsstring></argsstring>
        <name>radius_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hateb_local_planner/include/hateb_local_planner/footprint_model.h" line="293" column="10" bodyfile="hateb_local_planner/include/hateb_local_planner/footprint_model.h" bodystart="293" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classhateb__local__planner_1_1CircularFootprint_1a582b92b18b3c23e3144c33c20a931936" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>hateb_local_planner::CircularFootprint::CircularFootprint</definition>
        <argsstring>()=default</argsstring>
        <name>CircularFootprint</name>
        <briefdescription>
<para>Default constructor of the abstract obstacle class. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>radius</parametername>
</parameternamelist>
<parameterdescription>
<para>radius of the robot/human </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hateb_local_planner/include/hateb_local_planner/footprint_model.h" line="232" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classhateb__local__planner_1_1CircularFootprint_1a13c3918fe5d9abc5f6400bd26e30ad2f" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>hateb_local_planner::CircularFootprint::CircularFootprint</definition>
        <argsstring>(double radius)</argsstring>
        <name>CircularFootprint</name>
        <param>
          <type>double</type>
          <declname>radius</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hateb_local_planner/include/hateb_local_planner/footprint_model.h" line="233" column="12" bodyfile="hateb_local_planner/include/hateb_local_planner/footprint_model.h" bodystart="233" bodyend="233"/>
      </memberdef>
      <memberdef kind="function" id="classhateb__local__planner_1_1CircularFootprint_1a1142ce145fa274a7ad7aa1ffdfc25d87" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>hateb_local_planner::CircularFootprint::~CircularFootprint</definition>
        <argsstring>() override=default</argsstring>
        <name>~CircularFootprint</name>
        <briefdescription>
<para>Virtual destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hateb_local_planner/include/hateb_local_planner/footprint_model.h" line="238" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classhateb__local__planner_1_1CircularFootprint_1adbcc838f0afb3626fd4349157cc8f420" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void hateb_local_planner::CircularFootprint::setRadius</definition>
        <argsstring>(double radius)</argsstring>
        <name>setRadius</name>
        <param>
          <type>double</type>
          <declname>radius</declname>
        </param>
        <briefdescription>
<para>Set radius of the circular robot/human. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>radius</parametername>
</parameternamelist>
<parameterdescription>
<para>radius of the robot/human </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hateb_local_planner/include/hateb_local_planner/footprint_model.h" line="244" column="8" bodyfile="hateb_local_planner/include/hateb_local_planner/footprint_model.h" bodystart="244" bodyend="244"/>
      </memberdef>
      <memberdef kind="function" id="classhateb__local__planner_1_1CircularFootprint_1ad4b70e4c164ca53b89cee335a535d113" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>double</type>
        <definition>double hateb_local_planner::CircularFootprint::calculateDistance</definition>
        <argsstring>(const PoseSE2 &amp;current_pose, const Obstacle *obstacle) const override</argsstring>
        <name>calculateDistance</name>
        <reimplements refid="classhateb__local__planner_1_1BaseFootprintModel_1a72b681ecb2473cef98a42bebd4472945">calculateDistance</reimplements>
        <param>
          <type>const <ref refid="classhateb__local__planner_1_1PoseSE2" kindref="compound">PoseSE2</ref> &amp;</type>
          <declname>current_pose</declname>
        </param>
        <param>
          <type>const <ref refid="classhateb__local__planner_1_1Obstacle" kindref="compound">Obstacle</ref> *</type>
          <declname>obstacle</declname>
        </param>
        <briefdescription>
<para>Calculate the distance between the robot/human and an obstacle. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>current_pose</parametername>
</parameternamelist>
<parameterdescription>
<para>Current robot/human pose </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>obstacle</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the obstacle </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Euclidean distance to the robot/human </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hateb_local_planner/include/hateb_local_planner/footprint_model.h" line="252" column="10" bodyfile="hateb_local_planner/include/hateb_local_planner/footprint_model.h" bodystart="252" bodyend="252"/>
      </memberdef>
      <memberdef kind="function" id="classhateb__local__planner_1_1CircularFootprint_1a3ed2b580fc92bc83532a6686dd018dc4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>double</type>
        <definition>double hateb_local_planner::CircularFootprint::estimateSpatioTemporalDistance</definition>
        <argsstring>(const PoseSE2 &amp;current_pose, const Obstacle *obstacle, double t) const override</argsstring>
        <name>estimateSpatioTemporalDistance</name>
        <reimplements refid="classhateb__local__planner_1_1BaseFootprintModel_1ae162fde4a89a0101cca339a3704e27f1">estimateSpatioTemporalDistance</reimplements>
        <param>
          <type>const <ref refid="classhateb__local__planner_1_1PoseSE2" kindref="compound">PoseSE2</ref> &amp;</type>
          <declname>current_pose</declname>
        </param>
        <param>
          <type>const <ref refid="classhateb__local__planner_1_1Obstacle" kindref="compound">Obstacle</ref> *</type>
          <declname>obstacle</declname>
        </param>
        <param>
          <type>double</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>Estimate the distance between the robot/human and the predicted location of an obstacle at time t. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>current_pose</parametername>
</parameternamelist>
<parameterdescription>
<para>robot/human pose, from which the distance to the obstacle is estimated </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>obstacle</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the dynamic obstacle (constant velocity model is assumed) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>time, for which the predicted distance to the obstacle is calculated </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Euclidean distance to the robot/human </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hateb_local_planner/include/hateb_local_planner/footprint_model.h" line="261" column="10" bodyfile="hateb_local_planner/include/hateb_local_planner/footprint_model.h" bodystart="261" bodyend="263"/>
      </memberdef>
      <memberdef kind="function" id="classhateb__local__planner_1_1CircularFootprint_1a3a8237233b58ea88aa322f39254e81a7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void hateb_local_planner::CircularFootprint::visualizeModel</definition>
        <argsstring>(const PoseSE2 &amp;current_pose, std::vector&lt; visualization_msgs::Marker &gt; &amp;markers, const std_msgs::ColorRGBA &amp;color) const override</argsstring>
        <name>visualizeModel</name>
        <reimplements refid="classhateb__local__planner_1_1BaseFootprintModel_1adeeb5abf2f50393ed531239758518d5e">visualizeModel</reimplements>
        <param>
          <type>const <ref refid="classhateb__local__planner_1_1PoseSE2" kindref="compound">PoseSE2</ref> &amp;</type>
          <declname>current_pose</declname>
        </param>
        <param>
          <type>std::vector&lt; visualization_msgs::Marker &gt; &amp;</type>
          <declname>markers</declname>
        </param>
        <param>
          <type>const std_msgs::ColorRGBA &amp;</type>
          <declname>color</declname>
        </param>
        <briefdescription>
<para>Visualize the robot/human using a markers. </para>
        </briefdescription>
        <detaileddescription>
<para>Fill a marker message with all necessary information (type, pose, scale and color). The header, namespace, id and marker lifetime will be overwritten. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>current_pose</parametername>
</parameternamelist>
<parameterdescription>
<para>Current robot/human pose </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">markers</parametername>
</parameternamelist>
<parameterdescription>
<para>container of marker messages describing the robot/human shape </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>color</parametername>
</parameternamelist>
<parameterdescription>
<para>Color of the footprint </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hateb_local_planner/include/hateb_local_planner/footprint_model.h" line="274" column="8" bodyfile="hateb_local_planner/include/hateb_local_planner/footprint_model.h" bodystart="274" bodyend="282"/>
      </memberdef>
      <memberdef kind="function" id="classhateb__local__planner_1_1CircularFootprint_1aef9298fb380d871f9a489b40e89734f9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>double</type>
        <definition>double hateb_local_planner::CircularFootprint::getInscribedRadius</definition>
        <argsstring>() override</argsstring>
        <name>getInscribedRadius</name>
        <reimplements refid="classhateb__local__planner_1_1BaseFootprintModel_1a805f1e7b919244211f1deb4f884e06de">getInscribedRadius</reimplements>
        <briefdescription>
<para>Compute the inscribed radius of the footprint model. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>inscribed radius </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hateb_local_planner/include/hateb_local_planner/footprint_model.h" line="288" column="10" bodyfile="hateb_local_planner/include/hateb_local_planner/footprint_model.h" bodystart="288" bodyend="288"/>
      </memberdef>
      <memberdef kind="function" id="classhateb__local__planner_1_1CircularFootprint_1a9531970c9a3c0aa35376ba56081bb7da" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>double</type>
        <definition>double hateb_local_planner::CircularFootprint::getCircumscribedRadius</definition>
        <argsstring>() const override</argsstring>
        <name>getCircumscribedRadius</name>
        <reimplements refid="classhateb__local__planner_1_1BaseFootprintModel_1af6f9b6e83795e0ccf558d15c69e50e12">getCircumscribedRadius</reimplements>
        <briefdescription>
<para>Compute the circumscribed radius of the footprint model. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>circumscribed radius </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hateb_local_planner/include/hateb_local_planner/footprint_model.h" line="290" column="10" bodyfile="hateb_local_planner/include/hateb_local_planner/footprint_model.h" bodystart="290" bodyend="290"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Class that defines the a robot/human of circular shape. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>hateb_local_planner::CircularFootprint</label>
        <link refid="classhateb__local__planner_1_1CircularFootprint"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>hateb_local_planner::BaseFootprintModel</label>
        <link refid="classhateb__local__planner_1_1BaseFootprintModel"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>hateb_local_planner::CircularFootprint</label>
        <link refid="classhateb__local__planner_1_1CircularFootprint"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>hateb_local_planner::BaseFootprintModel</label>
        <link refid="classhateb__local__planner_1_1BaseFootprintModel"/>
      </node>
    </collaborationgraph>
    <location file="hateb_local_planner/include/hateb_local_planner/footprint_model.h" line="226" column="1" bodyfile="hateb_local_planner/include/hateb_local_planner/footprint_model.h" bodystart="226" bodyend="294"/>
    <listofallmembers>
      <member refid="classhateb__local__planner_1_1BaseFootprintModel_1a23994e2593de8cedf5f839058407d8ec" prot="public" virt="non-virtual"><scope>hateb_local_planner::CircularFootprint</scope><name>BaseFootprintModel</name></member>
      <member refid="classhateb__local__planner_1_1CircularFootprint_1ad4b70e4c164ca53b89cee335a535d113" prot="public" virt="virtual"><scope>hateb_local_planner::CircularFootprint</scope><name>calculateDistance</name></member>
      <member refid="classhateb__local__planner_1_1CircularFootprint_1a582b92b18b3c23e3144c33c20a931936" prot="public" virt="non-virtual"><scope>hateb_local_planner::CircularFootprint</scope><name>CircularFootprint</name></member>
      <member refid="classhateb__local__planner_1_1CircularFootprint_1a13c3918fe5d9abc5f6400bd26e30ad2f" prot="public" virt="non-virtual"><scope>hateb_local_planner::CircularFootprint</scope><name>CircularFootprint</name></member>
      <member refid="classhateb__local__planner_1_1CircularFootprint_1a3ed2b580fc92bc83532a6686dd018dc4" prot="public" virt="virtual"><scope>hateb_local_planner::CircularFootprint</scope><name>estimateSpatioTemporalDistance</name></member>
      <member refid="classhateb__local__planner_1_1CircularFootprint_1a9531970c9a3c0aa35376ba56081bb7da" prot="public" virt="virtual"><scope>hateb_local_planner::CircularFootprint</scope><name>getCircumscribedRadius</name></member>
      <member refid="classhateb__local__planner_1_1CircularFootprint_1aef9298fb380d871f9a489b40e89734f9" prot="public" virt="virtual"><scope>hateb_local_planner::CircularFootprint</scope><name>getInscribedRadius</name></member>
      <member refid="classhateb__local__planner_1_1CircularFootprint_1a3f3b9e8d4b7c30b7c1154d688adc7a9d" prot="private" virt="non-virtual"><scope>hateb_local_planner::CircularFootprint</scope><name>radius_</name></member>
      <member refid="classhateb__local__planner_1_1CircularFootprint_1adbcc838f0afb3626fd4349157cc8f420" prot="public" virt="non-virtual"><scope>hateb_local_planner::CircularFootprint</scope><name>setRadius</name></member>
      <member refid="classhateb__local__planner_1_1CircularFootprint_1a3a8237233b58ea88aa322f39254e81a7" prot="public" virt="virtual"><scope>hateb_local_planner::CircularFootprint</scope><name>visualizeModel</name></member>
      <member refid="classhateb__local__planner_1_1BaseFootprintModel_1a011c4b6ecc51affad4f90b37330f52ee" prot="public" virt="virtual"><scope>hateb_local_planner::CircularFootprint</scope><name>~BaseFootprintModel</name></member>
      <member refid="classhateb__local__planner_1_1CircularFootprint_1a1142ce145fa274a7ad7aa1ffdfc25d87" prot="public" virt="non-virtual"><scope>hateb_local_planner::CircularFootprint</scope><name>~CircularFootprint</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
