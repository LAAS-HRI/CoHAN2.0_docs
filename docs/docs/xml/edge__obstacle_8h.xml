<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="edge__obstacle_8h" kind="file" language="C++">
    <compoundname>edge_obstacle.h</compoundname>
    <includes local="no">cohan_msgs/AgentType.h</includes>
    <includes refid="footprint__model_8h" local="no">hateb_local_planner/footprint_model.h</includes>
    <includes refid="base__teb__edges_8h" local="no">hateb_local_planner/g2o_types/base_teb_edges.h</includes>
    <includes refid="penalties_8h" local="no">hateb_local_planner/g2o_types/penalties.h</includes>
    <includes refid="vertex__pose_8h" local="no">hateb_local_planner/g2o_types/vertex_pose.h</includes>
    <includes refid="hateb__config_8h" local="no">hateb_local_planner/hateb_config.h</includes>
    <includes refid="obstacles_8h" local="no">hateb_local_planner/obstacles.h</includes>
    <includedby refid="optimal__planner_8h" local="no">/home/ptsingaman/ros_ws/CoHAN2.0/src/hateb_local_planner/include/hateb_local_planner/optimal_planner.h</includedby>
    <incdepgraph>
      <node id="18">
        <label>boost/pointer_cast.hpp</label>
      </node>
      <node id="19">
        <label>boost/shared_ptr.hpp</label>
      </node>
      <node id="2">
        <label>cohan_msgs/AgentType.h</label>
      </node>
      <node id="16">
        <label>Eigen/Geometry</label>
      </node>
      <node id="36">
        <label>cmath</label>
      </node>
      <node id="40">
        <label>g2o/core/hyper_graph_action.h</label>
      </node>
      <node id="10">
        <label>Eigen/Core</label>
      </node>
      <node id="33">
        <label>ros/console.h</label>
      </node>
      <node id="29">
        <label>g2o/core/base_multi_edge.h</label>
      </node>
      <node id="4">
        <label>hateb_local_planner/obstacles.h</label>
        <link refid="obstacles_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>tf/tf.h</label>
      </node>
      <node id="1">
        <label>/home/ptsingaman/ros_ws/CoHAN2.0/src/hateb_local_planner/include/hateb_local_planner/g2o_types/edge_obstacle.h</label>
        <link refid="edge__obstacle_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>g2o/core/base_vertex.h</label>
      </node>
      <node id="38">
        <label>g2o/config.h</label>
      </node>
      <node id="17">
        <label>Eigen/StdVector</label>
      </node>
      <node id="26">
        <label>visualization_msgs/Marker.h</label>
      </node>
      <node id="27">
        <label>hateb_local_planner/g2o_types/base_teb_edges.h</label>
        <link refid="base__teb__edges_8h"/>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>hateb_local_planner/HATebLocalPlannerReconfigureConfig.h</label>
      </node>
      <node id="25">
        <label>tf/transform_datatypes.h</label>
      </node>
      <node id="3">
        <label>hateb_local_planner/footprint_model.h</label>
        <link refid="footprint__model_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>hateb_local_planner/g2o_types/penalties.h</label>
        <link refid="penalties_8h"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>geometry_msgs/QuaternionStamped.h</label>
      </node>
      <node id="13">
        <label>vector</label>
      </node>
      <node id="5">
        <label>geometry_msgs/Polygon.h</label>
      </node>
      <node id="21">
        <label>utility</label>
      </node>
      <node id="28">
        <label>g2o/core/base_binary_edge.h</label>
      </node>
      <node id="30">
        <label>g2o/core/base_unary_edge.h</label>
      </node>
      <node id="12">
        <label>boost/utility.hpp</label>
      </node>
      <node id="24">
        <label>geometry_msgs/Pose.h</label>
      </node>
      <node id="34">
        <label>ros/ros.h</label>
      </node>
      <node id="31">
        <label>hateb_local_planner/hateb_config.h</label>
        <link refid="hateb__config_8h"/>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>hateb_local_planner/distance_calculations.h</label>
        <link refid="distance__calculations_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>geometry_msgs/TwistWithCovariance.h</label>
      </node>
      <node id="23">
        <label>g2o/stuff/misc.h</label>
      </node>
      <node id="37">
        <label>hateb_local_planner/g2o_types/vertex_pose.h</label>
        <link refid="vertex__pose_8h"/>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>hateb_local_planner/pose_se2.h</label>
        <link refid="pose__se2_8h"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>hateb_local_planner/misc.h</label>
        <link refid="misc_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>complex</label>
      </node>
      <node id="14">
        <label>algorithm</label>
      </node>
      <node id="11">
        <label>boost/type_traits.hpp</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="5">
        <label>/home/ptsingaman/ros_ws/CoHAN2.0/src/hateb_local_planner/src/optimal_planner.cpp</label>
        <link refid="optimal__planner_8cpp"/>
      </node>
      <node id="2">
        <label>/home/ptsingaman/ros_ws/CoHAN2.0/src/hateb_local_planner/include/hateb_local_planner/optimal_planner.h</label>
        <link refid="optimal__planner_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/ptsingaman/ros_ws/CoHAN2.0/src/hateb_local_planner/include/hateb_local_planner/g2o_types/edge_obstacle.h</label>
        <link refid="edge__obstacle_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>/home/ptsingaman/ros_ws/CoHAN2.0/src/hateb_local_planner/src/visualization.cpp</label>
        <link refid="visualization_8cpp"/>
      </node>
      <node id="4">
        <label>/home/ptsingaman/ros_ws/CoHAN2.0/src/hateb_local_planner/src/hateb_local_planner_ros.cpp</label>
        <link refid="hateb__local__planner__ros_8cpp"/>
      </node>
      <node id="3">
        <label>/home/ptsingaman/ros_ws/CoHAN2.0/src/hateb_local_planner/include/hateb_local_planner/hateb_local_planner_ros.h</label>
        <link refid="hateb__local__planner__ros_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classhateb__local__planner_1_1EdgeObstacle" prot="public">hateb_local_planner::EdgeObstacle</innerclass>
    <innerclass refid="classhateb__local__planner_1_1EdgeInflatedObstacle" prot="public">hateb_local_planner::EdgeInflatedObstacle</innerclass>
    <innernamespace refid="namespacehateb__local__planner">hateb_local_planner</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*********************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Software<sp/>License<sp/>Agreement<sp/>(BSD<sp/>License)</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/><sp/>Copyright<sp/>(c)<sp/>2016,</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/><sp/>TU<sp/>Dortmund<sp/>-<sp/>Institute<sp/>of<sp/>Control<sp/>Theory<sp/>and<sp/>Systems<sp/>Engineering.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/><sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/><sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/><sp/>*<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/><sp/>*<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>copyright<sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>disclaimer<sp/>in<sp/>the<sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/><sp/><sp/>*<sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>the<sp/>institute<sp/>nor<sp/>the<sp/>names<sp/>of<sp/>its</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>from<sp/>this<sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/><sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/><sp/>&quot;AS<sp/>IS&quot;<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/><sp/>LIMITED<sp/>TO,<sp/>THE<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/><sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/><sp/>COPYRIGHT<sp/>OWNER<sp/>OR<sp/>CONTRIBUTORS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/><sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/><sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/><sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/><sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/><sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING<sp/>IN</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*<sp/><sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/><sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*<sp/>Notes:</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*<sp/>The<sp/>following<sp/>class<sp/>is<sp/>derived<sp/>from<sp/>a<sp/>class<sp/>defined<sp/>by<sp/>the</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*<sp/>g2o-framework.<sp/>g2o<sp/>is<sp/>licensed<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>BSD<sp/>License.</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*<sp/>Refer<sp/>to<sp/>the<sp/>base<sp/>class<sp/>source<sp/>for<sp/>detailed<sp/>licensing<sp/>information.</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/>*<sp/>Author:<sp/>Christoph<sp/>Rösmann</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/>*********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>EDGE_OBSTACLE_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EDGE_OBSTACLE_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cohan_msgs/AgentType.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="footprint__model_8h" kindref="compound">hateb_local_planner/footprint_model.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="base__teb__edges_8h" kindref="compound">hateb_local_planner/g2o_types/base_teb_edges.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="penalties_8h" kindref="compound">hateb_local_planner/g2o_types/penalties.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="vertex__pose_8h" kindref="compound">hateb_local_planner/g2o_types/vertex_pose.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="hateb__config_8h" kindref="compound">hateb_local_planner/hateb_config.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="obstacles_8h" kindref="compound">hateb_local_planner/obstacles.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacehateb__local__planner" kindref="compound">hateb_local_planner</ref><sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="classhateb__local__planner_1_1EdgeObstacle" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classhateb__local__planner_1_1EdgeObstacle" kindref="compound">EdgeObstacle</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classhateb__local__planner_1_1BaseTebUnaryEdge" kindref="compound">BaseTebUnaryEdge</ref>&lt;1,<sp/>const<sp/>Obstacle*,<sp/>VertexPose&gt;<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="73" refid="classhateb__local__planner_1_1EdgeObstacle_1a32a0bcfeb80139d626eedcc5d9205b2f" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classhateb__local__planner_1_1EdgeObstacle_1a32a0bcfeb80139d626eedcc5d9205b2f" kindref="member">EdgeObstacle</ref>()<sp/>{<sp/>_measurement<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="78" refid="classhateb__local__planner_1_1EdgeObstacle_1a2f7e984297faa3ae9bcb0d7904ffd8f2" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classhateb__local__planner_1_1EdgeObstacle_1a2f7e984297faa3ae9bcb0d7904ffd8f2" kindref="member">computeError</ref>()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>ROS_ASSERT_MSG(<ref refid="classhateb__local__planner_1_1BaseTebUnaryEdge_1aa1485afb0fdfc42fc331165a7d5c8b30" kindref="member">cfg_</ref><sp/>&amp;&amp;<sp/>_measurement,<sp/></highlight><highlight class="stringliteral">&quot;You<sp/>must<sp/>call<sp/>setHATebConfig()<sp/>on<sp/>EdgeObstacle()&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">*<sp/>bandpt<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal"><ref refid="classhateb__local__planner_1_1VertexPose" kindref="compound">VertexPose</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(_vertices[0]);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dist<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classhateb__local__planner_1_1EdgeObstacle_1ad47367156ac9c077fde513466c14261d" kindref="member">type_</ref><sp/>==<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(cohan_msgs::AgentType::ROBOT))<sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dist<sp/>=<sp/><ref refid="classhateb__local__planner_1_1BaseTebUnaryEdge_1aa1485afb0fdfc42fc331165a7d5c8b30" kindref="member">cfg_</ref>-&gt;<ref refid="classhateb__local__planner_1_1HATebConfig_1a4852da2319b1e625f751dc771e35313a" kindref="member">robot_model</ref>-&gt;calculateDistance(bandpt-&gt;pose(),<sp/>_measurement);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classhateb__local__planner_1_1EdgeObstacle_1ad47367156ac9c077fde513466c14261d" kindref="member">type_</ref><sp/>==<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(cohan_msgs::AgentType::HUMAN))<sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dist<sp/>=<sp/><ref refid="classhateb__local__planner_1_1BaseTebUnaryEdge_1aa1485afb0fdfc42fc331165a7d5c8b30" kindref="member">cfg_</ref>-&gt;<ref refid="classhateb__local__planner_1_1HATebConfig_1a1e83960102cc75c1876b830b69a97076" kindref="member">human_model</ref>-&gt;calculateDistance(bandpt-&gt;pose(),<sp/>_measurement);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Original<sp/>obstacle<sp/>cost.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>_error[0]<sp/>=<sp/><ref refid="namespacehateb__local__planner_1ab0d8f17ad8f685bedc4aaf2ea24a47f1" kindref="member">penaltyBoundFromBelow</ref>(dist,<sp/><ref refid="classhateb__local__planner_1_1BaseTebUnaryEdge_1aa1485afb0fdfc42fc331165a7d5c8b30" kindref="member">cfg_</ref>-&gt;<ref refid="classhateb__local__planner_1_1HATebConfig_1a8c6e938912d08245988e7e9e822bb781" kindref="member">obstacles</ref>.<ref refid="structhateb__local__planner_1_1HATebConfig_1_1Obstacles_1a9aedd93b32031e773eb90363eb1850c4" kindref="member">min_obstacle_dist</ref>,<sp/><ref refid="classhateb__local__planner_1_1BaseTebUnaryEdge_1aa1485afb0fdfc42fc331165a7d5c8b30" kindref="member">cfg_</ref>-&gt;<ref refid="classhateb__local__planner_1_1HATebConfig_1a162e554b1458c4a47c8f5d93c8285589" kindref="member">optim</ref>.<ref refid="structhateb__local__planner_1_1HATebConfig_1_1Optimization_1a6884f612df14f6f652ca3c7fc2d9b40c" kindref="member">penalty_epsilon</ref>);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;_error[0]<sp/>obstacle<sp/>cost:<sp/>&quot;&lt;&lt;_error[0]<sp/>&lt;&lt;<sp/>&apos;\n&apos;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classhateb__local__planner_1_1BaseTebUnaryEdge_1aa1485afb0fdfc42fc331165a7d5c8b30" kindref="member">cfg_</ref>-&gt;<ref refid="classhateb__local__planner_1_1HATebConfig_1a162e554b1458c4a47c8f5d93c8285589" kindref="member">optim</ref>.<ref refid="structhateb__local__planner_1_1HATebConfig_1_1Optimization_1a82801bb44af7ba1b51c7a3e00b2a1657" kindref="member">obstacle_cost_exponent</ref><sp/>!=<sp/>1.0<sp/>&amp;&amp;<sp/><ref refid="classhateb__local__planner_1_1BaseTebUnaryEdge_1aa1485afb0fdfc42fc331165a7d5c8b30" kindref="member">cfg_</ref>-&gt;<ref refid="classhateb__local__planner_1_1HATebConfig_1a8c6e938912d08245988e7e9e822bb781" kindref="member">obstacles</ref>.<ref refid="structhateb__local__planner_1_1HATebConfig_1_1Obstacles_1a9aedd93b32031e773eb90363eb1850c4" kindref="member">min_obstacle_dist</ref><sp/>&gt;<sp/>0.0)<sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Optional<sp/>non-linear<sp/>cost.<sp/>Note<sp/>the<sp/>max<sp/>cost<sp/>(before<sp/>weighting)<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>same<sp/>as<sp/>the<sp/>straight<sp/>line<sp/>version<sp/>and<sp/>that<sp/>all<sp/>other<sp/>costs<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>below<sp/>the<sp/>straight<sp/>line<sp/>(for<sp/>positive<sp/>exponent),<sp/>so<sp/>it<sp/>may<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>necessary<sp/>to<sp/>increase<sp/>weight_obstacle<sp/>and/or<sp/>the<sp/>inflation_weight</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>when<sp/>using<sp/>larger<sp/>exponents.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_error[0]<sp/>=<sp/><ref refid="classhateb__local__planner_1_1BaseTebUnaryEdge_1aa1485afb0fdfc42fc331165a7d5c8b30" kindref="member">cfg_</ref>-&gt;<ref refid="classhateb__local__planner_1_1HATebConfig_1a8c6e938912d08245988e7e9e822bb781" kindref="member">obstacles</ref>.<ref refid="structhateb__local__planner_1_1HATebConfig_1_1Obstacles_1a9aedd93b32031e773eb90363eb1850c4" kindref="member">min_obstacle_dist</ref><sp/>*<sp/>std::pow(_error[0]<sp/>/<sp/><ref refid="classhateb__local__planner_1_1BaseTebUnaryEdge_1aa1485afb0fdfc42fc331165a7d5c8b30" kindref="member">cfg_</ref>-&gt;<ref refid="classhateb__local__planner_1_1HATebConfig_1a8c6e938912d08245988e7e9e822bb781" kindref="member">obstacles</ref>.<ref refid="structhateb__local__planner_1_1HATebConfig_1_1Obstacles_1a9aedd93b32031e773eb90363eb1850c4" kindref="member">min_obstacle_dist</ref>,<sp/><ref refid="classhateb__local__planner_1_1BaseTebUnaryEdge_1aa1485afb0fdfc42fc331165a7d5c8b30" kindref="member">cfg_</ref>-&gt;<ref refid="classhateb__local__planner_1_1HATebConfig_1a162e554b1458c4a47c8f5d93c8285589" kindref="member">optim</ref>.<ref refid="structhateb__local__planner_1_1HATebConfig_1_1Optimization_1a82801bb44af7ba1b51c7a3e00b2a1657" kindref="member">obstacle_cost_exponent</ref>);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>_error[0]<sp/>=<sp/>penaltyBoundFromBelowExp(dist,<sp/>cfg_-&gt;obstacles.min_obstacle_dist,<sp/>cfg_-&gt;optim.penalty_epsilon,cfg_-&gt;obstacles.obstacle_cost_mult);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>ROS_ASSERT_MSG(std::isfinite(_error[0]),<sp/></highlight><highlight class="stringliteral">&quot;EdgeObstacle::computeError()<sp/>_error[0]=%f\n&quot;</highlight><highlight class="normal">,<sp/>_error[0]);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USE_ANALYTIC_JACOBI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>linearizeOplus()<sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>ROS_ASSERT_MSG(<ref refid="classhateb__local__planner_1_1BaseTebUnaryEdge_1aa1485afb0fdfc42fc331165a7d5c8b30" kindref="member">cfg_</ref>,<sp/></highlight><highlight class="stringliteral">&quot;You<sp/>must<sp/>call<sp/>setHATebConfig<sp/>on<sp/>EdgePointObstacle()&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classhateb__local__planner_1_1VertexPose" kindref="compound">VertexPose</ref>*<sp/>bandpt<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal"><ref refid="classhateb__local__planner_1_1VertexPose" kindref="compound">VertexPose</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(_vertices[0]);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector2d<sp/>deltaS<sp/>=<sp/>*_measurement<sp/>-<sp/>bandpt-&gt;<ref refid="classhateb__local__planner_1_1VertexPose_1a2a7cd5148c462bb89fe82f56cef2d174" kindref="member">position</ref>();</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>angdiff<sp/>=<sp/>atan2(deltaS[1],<sp/>deltaS[0])<sp/>-<sp/>bandpt-&gt;<ref refid="classhateb__local__planner_1_1VertexPose_1af47bc2c186c2e14fff2f4f13376a59b2" kindref="member">theta</ref>();</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dist_squared<sp/>=<sp/>deltaS.squaredNorm();</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dist<sp/>=<sp/>sqrt(dist_squared);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>aux0<sp/>=<sp/>sin(angdiff);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dev_left_border<sp/>=<sp/><ref refid="namespacehateb__local__planner_1a0bba69036c01261cfb3a0a0a4901ff5c" kindref="member">penaltyBoundFromBelowDerivative</ref>(dist<sp/>*<sp/>fabs(aux0),<sp/><ref refid="classhateb__local__planner_1_1BaseTebUnaryEdge_1aa1485afb0fdfc42fc331165a7d5c8b30" kindref="member">cfg_</ref>-&gt;<ref refid="classhateb__local__planner_1_1HATebConfig_1a8c6e938912d08245988e7e9e822bb781" kindref="member">obstacles</ref>.<ref refid="structhateb__local__planner_1_1HATebConfig_1_1Obstacles_1a9aedd93b32031e773eb90363eb1850c4" kindref="member">min_obstacle_dist</ref>,<sp/><ref refid="classhateb__local__planner_1_1BaseTebUnaryEdge_1aa1485afb0fdfc42fc331165a7d5c8b30" kindref="member">cfg_</ref>-&gt;<ref refid="classhateb__local__planner_1_1HATebConfig_1a162e554b1458c4a47c8f5d93c8285589" kindref="member">optim</ref>.<ref refid="structhateb__local__planner_1_1HATebConfig_1_1Optimization_1a6884f612df14f6f652ca3c7fc2d9b40c" kindref="member">penalty_epsilon</ref>);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dev_left_border<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_jacobianOplusXi(0,<sp/>0)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_jacobianOplusXi(0,<sp/>1)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_jacobianOplusXi(0,<sp/>2)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>aux1<sp/>=<sp/>-fabs(aux0)<sp/>/<sp/>dist;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dev_norm_x<sp/>=<sp/>deltaS[0]<sp/>*<sp/>aux1;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dev_norm_y<sp/>=<sp/>deltaS[1]<sp/>*<sp/>aux1;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>aux2<sp/>=<sp/>cos(angdiff)<sp/>*<sp/>g2o::sign(aux0);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>aux3<sp/>=<sp/>aux2<sp/>/<sp/>dist_squared;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dev_proj_x<sp/>=<sp/>aux3<sp/>*<sp/>deltaS[1]<sp/>*<sp/>dist;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dev_proj_y<sp/>=<sp/>-aux3<sp/>*<sp/>deltaS[0]<sp/>*<sp/>dist;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dev_proj_angle<sp/>=<sp/>-aux2;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>_jacobianOplusXi(0,<sp/>0)<sp/>=<sp/>dev_left_border<sp/>*<sp/>(dev_norm_x<sp/>+<sp/>dev_proj_x);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>_jacobianOplusXi(0,<sp/>1)<sp/>=<sp/>dev_left_border<sp/>*<sp/>(dev_norm_y<sp/>+<sp/>dev_proj_y);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>_jacobianOplusXi(0,<sp/>2)<sp/>=<sp/>dev_left_border<sp/>*<sp/>dev_proj_angle;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="157" refid="classhateb__local__planner_1_1EdgeObstacle_1a8c66eea558a3e1282d5e19b414891c60" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classhateb__local__planner_1_1EdgeObstacle_1a8c66eea558a3e1282d5e19b414891c60" kindref="member">setParameters</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classhateb__local__planner_1_1HATebConfig" kindref="compound">HATebConfig</ref>&amp;<sp/>cfg,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classhateb__local__planner_1_1Obstacle" kindref="compound">Obstacle</ref>*<sp/>obstacle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type)<sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classhateb__local__planner_1_1BaseTebUnaryEdge_1aa1485afb0fdfc42fc331165a7d5c8b30" kindref="member">cfg_</ref><sp/>=<sp/>&amp;cfg;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>_measurement<sp/>=<sp/>obstacle;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classhateb__local__planner_1_1EdgeObstacle_1ad47367156ac9c077fde513466c14261d" kindref="member">type_</ref><sp/>=<sp/>type;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="164" refid="classhateb__local__planner_1_1EdgeObstacle_1ad47367156ac9c077fde513466c14261d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classhateb__local__planner_1_1EdgeObstacle_1ad47367156ac9c077fde513466c14261d" kindref="member">type_</ref>;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/>EIGEN_MAKE_ALIGNED_OPERATOR_NEW</highlight></codeline>
<codeline lineno="168"><highlight class="normal">};</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="184" refid="classhateb__local__planner_1_1EdgeInflatedObstacle" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classhateb__local__planner_1_1EdgeInflatedObstacle" kindref="compound">EdgeInflatedObstacle</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classhateb__local__planner_1_1BaseTebUnaryEdge" kindref="compound">BaseTebUnaryEdge</ref>&lt;2,<sp/>const<sp/>Obstacle*,<sp/>VertexPose&gt;<sp/>{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="189" refid="classhateb__local__planner_1_1EdgeInflatedObstacle_1a6faaa1c2612b546133c4a97401719f0f" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classhateb__local__planner_1_1EdgeInflatedObstacle_1a6faaa1c2612b546133c4a97401719f0f" kindref="member">EdgeInflatedObstacle</ref>()<sp/>{<sp/>_measurement<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="194" refid="classhateb__local__planner_1_1EdgeInflatedObstacle_1a473358a97a208f52e2f7c5d99f940908" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classhateb__local__planner_1_1EdgeInflatedObstacle_1a473358a97a208f52e2f7c5d99f940908" kindref="member">computeError</ref>()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>ROS_ASSERT_MSG(<ref refid="classhateb__local__planner_1_1BaseTebUnaryEdge_1aa1485afb0fdfc42fc331165a7d5c8b30" kindref="member">cfg_</ref><sp/>&amp;&amp;<sp/>_measurement,<sp/></highlight><highlight class="stringliteral">&quot;You<sp/>must<sp/>call<sp/>setHATebConfig()<sp/>on<sp/>EdgeInflatedObstacle()&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">*<sp/>bandpt<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal"><ref refid="classhateb__local__planner_1_1VertexPose" kindref="compound">VertexPose</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(_vertices[0]);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dist<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classhateb__local__planner_1_1EdgeInflatedObstacle_1a4e8cfc994fcce56f217f546bd6c10ff4" kindref="member">type_</ref><sp/>==<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(cohan_msgs::AgentType::ROBOT))<sp/>{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dist<sp/>=<sp/><ref refid="classhateb__local__planner_1_1BaseTebUnaryEdge_1aa1485afb0fdfc42fc331165a7d5c8b30" kindref="member">cfg_</ref>-&gt;<ref refid="classhateb__local__planner_1_1HATebConfig_1a4852da2319b1e625f751dc771e35313a" kindref="member">robot_model</ref>-&gt;calculateDistance(bandpt-&gt;<ref refid="classhateb__local__planner_1_1VertexPose_1ac2479e5a8f47def9b9ce2539a02572d6" kindref="member">pose</ref>(),<sp/>_measurement);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classhateb__local__planner_1_1EdgeInflatedObstacle_1a4e8cfc994fcce56f217f546bd6c10ff4" kindref="member">type_</ref><sp/>==<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(cohan_msgs::AgentType::HUMAN))<sp/>{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dist<sp/>=<sp/><ref refid="classhateb__local__planner_1_1BaseTebUnaryEdge_1aa1485afb0fdfc42fc331165a7d5c8b30" kindref="member">cfg_</ref>-&gt;<ref refid="classhateb__local__planner_1_1HATebConfig_1a1e83960102cc75c1876b830b69a97076" kindref="member">human_model</ref>-&gt;calculateDistance(bandpt-&gt;<ref refid="classhateb__local__planner_1_1VertexPose_1ac2479e5a8f47def9b9ce2539a02572d6" kindref="member">pose</ref>(),<sp/>_measurement);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Original<sp/>&quot;straight<sp/>line&quot;<sp/>obstacle<sp/>cost.<sp/>The<sp/>max<sp/>possible<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>before<sp/>weighting<sp/>is<sp/>min_obstacle_dist</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>_error[0]<sp/>=<sp/><ref refid="namespacehateb__local__planner_1ab0d8f17ad8f685bedc4aaf2ea24a47f1" kindref="member">penaltyBoundFromBelow</ref>(dist,<sp/><ref refid="classhateb__local__planner_1_1BaseTebUnaryEdge_1aa1485afb0fdfc42fc331165a7d5c8b30" kindref="member">cfg_</ref>-&gt;<ref refid="classhateb__local__planner_1_1HATebConfig_1a8c6e938912d08245988e7e9e822bb781" kindref="member">obstacles</ref>.<ref refid="structhateb__local__planner_1_1HATebConfig_1_1Obstacles_1a9aedd93b32031e773eb90363eb1850c4" kindref="member">min_obstacle_dist</ref>,<sp/><ref refid="classhateb__local__planner_1_1BaseTebUnaryEdge_1aa1485afb0fdfc42fc331165a7d5c8b30" kindref="member">cfg_</ref>-&gt;<ref refid="classhateb__local__planner_1_1HATebConfig_1a162e554b1458c4a47c8f5d93c8285589" kindref="member">optim</ref>.<ref refid="structhateb__local__planner_1_1HATebConfig_1_1Optimization_1a6884f612df14f6f652ca3c7fc2d9b40c" kindref="member">penalty_epsilon</ref>);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;_error[0]<sp/>inflated<sp/>obstacle<sp/>cost:<sp/>&quot;&lt;&lt;_error[0]<sp/>&lt;&lt;<sp/>&apos;\n&apos;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classhateb__local__planner_1_1BaseTebUnaryEdge_1aa1485afb0fdfc42fc331165a7d5c8b30" kindref="member">cfg_</ref>-&gt;<ref refid="classhateb__local__planner_1_1HATebConfig_1a162e554b1458c4a47c8f5d93c8285589" kindref="member">optim</ref>.<ref refid="structhateb__local__planner_1_1HATebConfig_1_1Optimization_1a82801bb44af7ba1b51c7a3e00b2a1657" kindref="member">obstacle_cost_exponent</ref><sp/>!=<sp/>1.0<sp/>&amp;&amp;<sp/><ref refid="classhateb__local__planner_1_1BaseTebUnaryEdge_1aa1485afb0fdfc42fc331165a7d5c8b30" kindref="member">cfg_</ref>-&gt;<ref refid="classhateb__local__planner_1_1HATebConfig_1a8c6e938912d08245988e7e9e822bb781" kindref="member">obstacles</ref>.<ref refid="structhateb__local__planner_1_1HATebConfig_1_1Obstacles_1a9aedd93b32031e773eb90363eb1850c4" kindref="member">min_obstacle_dist</ref><sp/>&gt;<sp/>0.0)<sp/>{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Optional<sp/>non-linear<sp/>cost.<sp/>Note<sp/>the<sp/>max<sp/>cost<sp/>(before<sp/>weighting)<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>same<sp/>as<sp/>the<sp/>straight<sp/>line<sp/>version<sp/>and<sp/>that<sp/>all<sp/>other<sp/>costs<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>below<sp/>the<sp/>straight<sp/>line<sp/>(for<sp/>positive<sp/>exponent),<sp/>so<sp/>it<sp/>may<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>necessary<sp/>to<sp/>increase<sp/>weight_obstacle<sp/>and/or<sp/>the<sp/>inflation_weight</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>when<sp/>using<sp/>larger<sp/>exponents.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_error[0]<sp/>=<sp/><ref refid="classhateb__local__planner_1_1BaseTebUnaryEdge_1aa1485afb0fdfc42fc331165a7d5c8b30" kindref="member">cfg_</ref>-&gt;<ref refid="classhateb__local__planner_1_1HATebConfig_1a8c6e938912d08245988e7e9e822bb781" kindref="member">obstacles</ref>.<ref refid="structhateb__local__planner_1_1HATebConfig_1_1Obstacles_1a9aedd93b32031e773eb90363eb1850c4" kindref="member">min_obstacle_dist</ref><sp/>*<sp/>std::pow(_error[0]<sp/>/<sp/><ref refid="classhateb__local__planner_1_1BaseTebUnaryEdge_1aa1485afb0fdfc42fc331165a7d5c8b30" kindref="member">cfg_</ref>-&gt;<ref refid="classhateb__local__planner_1_1HATebConfig_1a8c6e938912d08245988e7e9e822bb781" kindref="member">obstacles</ref>.<ref refid="structhateb__local__planner_1_1HATebConfig_1_1Obstacles_1a9aedd93b32031e773eb90363eb1850c4" kindref="member">min_obstacle_dist</ref>,<sp/><ref refid="classhateb__local__planner_1_1BaseTebUnaryEdge_1aa1485afb0fdfc42fc331165a7d5c8b30" kindref="member">cfg_</ref>-&gt;<ref refid="classhateb__local__planner_1_1HATebConfig_1a162e554b1458c4a47c8f5d93c8285589" kindref="member">optim</ref>.<ref refid="structhateb__local__planner_1_1HATebConfig_1_1Optimization_1a82801bb44af7ba1b51c7a3e00b2a1657" kindref="member">obstacle_cost_exponent</ref>);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Additional<sp/>linear<sp/>inflation<sp/>cost</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>_error[1]<sp/>=<sp/><ref refid="namespacehateb__local__planner_1ab0d8f17ad8f685bedc4aaf2ea24a47f1" kindref="member">penaltyBoundFromBelow</ref>(dist,<sp/><ref refid="classhateb__local__planner_1_1BaseTebUnaryEdge_1aa1485afb0fdfc42fc331165a7d5c8b30" kindref="member">cfg_</ref>-&gt;<ref refid="classhateb__local__planner_1_1HATebConfig_1a8c6e938912d08245988e7e9e822bb781" kindref="member">obstacles</ref>.<ref refid="structhateb__local__planner_1_1HATebConfig_1_1Obstacles_1a5b0f10420f4f81eed5ee696006c6dc7f" kindref="member">inflation_dist</ref>,<sp/>0.0);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>ROS_ASSERT_MSG(std::isfinite(_error[0])<sp/>&amp;&amp;<sp/>std::isfinite(_error[1]),<sp/></highlight><highlight class="stringliteral">&quot;EdgeInflatedObstacle::computeError()<sp/>_error[0]=%f,<sp/>_error[1]=%f\n&quot;</highlight><highlight class="normal">,<sp/>_error[0],<sp/>_error[1]);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="234" refid="classhateb__local__planner_1_1EdgeInflatedObstacle_1a4295d5f7713853ad3b81439491ea44e4" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classhateb__local__planner_1_1EdgeInflatedObstacle_1a4295d5f7713853ad3b81439491ea44e4" kindref="member">setParameters</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classhateb__local__planner_1_1HATebConfig" kindref="compound">HATebConfig</ref>&amp;<sp/>cfg,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classhateb__local__planner_1_1Obstacle" kindref="compound">Obstacle</ref>*<sp/>obstacle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type)<sp/>{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classhateb__local__planner_1_1BaseTebUnaryEdge_1aa1485afb0fdfc42fc331165a7d5c8b30" kindref="member">cfg_</ref><sp/>=<sp/>&amp;cfg;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>_measurement<sp/>=<sp/>obstacle;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classhateb__local__planner_1_1EdgeInflatedObstacle_1a4e8cfc994fcce56f217f546bd6c10ff4" kindref="member">type_</ref><sp/>=<sp/>type;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="241" refid="classhateb__local__planner_1_1EdgeInflatedObstacle_1a4e8cfc994fcce56f217f546bd6c10ff4" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classhateb__local__planner_1_1EdgeInflatedObstacle_1a4e8cfc994fcce56f217f546bd6c10ff4" kindref="member">type_</ref>;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/>EIGEN_MAKE_ALIGNED_OPERATOR_NEW</highlight></codeline>
<codeline lineno="245"><highlight class="normal">};</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>hateb_local_planner</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/ptsingaman/ros_ws/CoHAN2.0/src/hateb_local_planner/include/hateb_local_planner/g2o_types/edge_obstacle.h"/>
  </compounddef>
</doxygen>
