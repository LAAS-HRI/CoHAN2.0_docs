<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="visualization_8cpp" kind="file" language="C++">
    <compoundname>visualization.cpp</compoundname>
    <includes local="no">cohan_msgs/TrackedAgents.h</includes>
    <includes local="no">cohan_msgs/TrackedSegmentType.h</includes>
    <includes local="no">hateb_local_planner/FeedbackMsg.h</includes>
    <includes refid="optimal__planner_8h" local="no">hateb_local_planner/optimal_planner.h</includes>
    <includes refid="visualization_8h" local="no">hateb_local_planner/visualization.h</includes>
    <incdepgraph>
      <node id="44">
        <label>ros/assert.h</label>
      </node>
      <node id="22">
        <label>boost/pointer_cast.hpp</label>
      </node>
      <node id="57">
        <label>cohan_msgs/AgentPathArray.h</label>
      </node>
      <node id="94">
        <label>base_local_planner/BaseLocalPlannerConfig.h</label>
      </node>
      <node id="23">
        <label>boost/shared_ptr.hpp</label>
      </node>
      <node id="90">
        <label>hateb_local_planner/g2o_types/edge_kinematics.h</label>
        <link refid="edge__kinematics_8h"/>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>geometry_msgs/PoseArray.h</label>
      </node>
      <node id="5">
        <label>hateb_local_planner/optimal_planner.h</label>
        <link refid="optimal__planner_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
        <childnode refid="97" relation="include">
        </childnode>
        <childnode refid="99" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="100" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>tf/transform_listener.h</label>
      </node>
      <node id="69">
        <label>g2o/core/block_solver.h</label>
      </node>
      <node id="88">
        <label>cohan_msgs/AgentType.h</label>
      </node>
      <node id="86">
        <label>hateb_local_planner/g2o_types/edge_agent_robot_visibility.h</label>
        <link refid="edge__agent__robot__visibility_8h"/>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>ros/publisher.h</label>
      </node>
      <node id="67">
        <label>visualization_msgs/MarkerArray.h</label>
      </node>
      <node id="59">
        <label>cohan_msgs/AgentTimeToGoalArray.h</label>
      </node>
      <node id="58">
        <label>cohan_msgs/AgentTimeToGoal.h</label>
      </node>
      <node id="20">
        <label>Eigen/Geometry</label>
      </node>
      <node id="3">
        <label>cohan_msgs/TrackedSegmentType.h</label>
      </node>
      <node id="93">
        <label>hateb_local_planner/g2o_types/edge_shortest_path.h</label>
        <link refid="edge__shortest__path_8h"/>
        <childnode refid="94" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="75">
        <label>g2o/solvers/csparse/linear_solver_csparse.h</label>
      </node>
      <node id="2">
        <label>cohan_msgs/TrackedAgents.h</label>
      </node>
      <node id="6">
        <label>cmath</label>
      </node>
      <node id="76">
        <label>hateb_local_planner/g2o_types/edge_acceleration.h</label>
        <link refid="edge__acceleration_8h"/>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>g2o/core/hyper_graph_action.h</label>
      </node>
      <node id="63">
        <label>nav_msgs/Odometry.h</label>
      </node>
      <node id="14">
        <label>Eigen/Core</label>
      </node>
      <node id="87">
        <label>hateb_local_planner/g2o_types/edge_dynamic_obstacle.h</label>
        <link refid="edge__dynamic__obstacle_8h"/>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>ros/console.h</label>
      </node>
      <node id="65">
        <label>std_msgs/ColorRGBA.h</label>
      </node>
      <node id="80">
        <label>g2o/core/base_multi_edge.h</label>
      </node>
      <node id="8">
        <label>hateb_local_planner/obstacles.h</label>
        <link refid="obstacles_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>tf/tf.h</label>
      </node>
      <node id="49">
        <label>hateb_local_planner/g2o_types/vertex_timediff.h</label>
        <link refid="vertex__timediff_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
      </node>
      <node id="91">
        <label>hateb_local_planner/g2o_types/edge_obstacle.h</label>
        <link refid="edge__obstacle_8h"/>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>cohan_msgs/Trajectory.h</label>
      </node>
      <node id="36">
        <label>base_local_planner/costmap_model.h</label>
      </node>
      <node id="56">
        <label>boost/graph/graph_traits.hpp</label>
      </node>
      <node id="47">
        <label>g2o/core/base_vertex.h</label>
      </node>
      <node id="52">
        <label>base_local_planner/goal_functions.h</label>
      </node>
      <node id="1">
        <label>/home/ptsingaman/ros_ws/CoHAN2.0/src/hateb_local_planner/src/visualization.cpp</label>
        <link refid="visualization_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>g2o/config.h</label>
      </node>
      <node id="21">
        <label>Eigen/StdVector</label>
      </node>
      <node id="96">
        <label>hateb_local_planner/g2o_types/edge_time_optimal.h</label>
        <link refid="edge__time__optimal_8h"/>
        <childnode refid="94" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>visualization_msgs/Marker.h</label>
      </node>
      <node id="78">
        <label>hateb_local_planner/g2o_types/base_teb_edges.h</label>
        <link refid="base__teb__edges_8h"/>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>hateb_local_planner/HATebLocalPlannerReconfigureConfig.h</label>
      </node>
      <node id="73">
        <label>g2o/core/sparse_optimizer.h</label>
      </node>
      <node id="29">
        <label>tf/transform_datatypes.h</label>
      </node>
      <node id="40">
        <label>geometry_msgs/PoseStamped.h</label>
      </node>
      <node id="7">
        <label>hateb_local_planner/footprint_model.h</label>
        <link refid="footprint__model_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="82">
        <label>hateb_local_planner/g2o_types/penalties.h</label>
        <link refid="penalties_8h"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>hateb_local_planner/timed_elastic_band.hpp</label>
        <link refid="timed__elastic__band_8hpp"/>
        <childnode refid="43" relation="include">
        </childnode>
      </node>
      <node id="77">
        <label>geometry_msgs/Twist.h</label>
      </node>
      <node id="10">
        <label>geometry_msgs/QuaternionStamped.h</label>
      </node>
      <node id="4">
        <label>hateb_local_planner/FeedbackMsg.h</label>
      </node>
      <node id="17">
        <label>vector</label>
      </node>
      <node id="61">
        <label>cohan_msgs/TrajectoryPoint.h</label>
      </node>
      <node id="72">
        <label>g2o/core/optimization_algorithm_levenberg.h</label>
      </node>
      <node id="74">
        <label>g2o/solvers/cholmod/linear_solver_cholmod.h</label>
      </node>
      <node id="64">
        <label>nav_msgs/Path.h</label>
      </node>
      <node id="9">
        <label>geometry_msgs/Polygon.h</label>
      </node>
      <node id="25">
        <label>utility</label>
      </node>
      <node id="79">
        <label>g2o/core/base_binary_edge.h</label>
      </node>
      <node id="81">
        <label>g2o/core/base_unary_edge.h</label>
      </node>
      <node id="95">
        <label>hateb_local_planner/g2o_types/edge_static_agent_visibility.h</label>
        <link refid="edge__static__agent__visibility_8h"/>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>boost/utility.hpp</label>
      </node>
      <node id="28">
        <label>geometry_msgs/Pose.h</label>
      </node>
      <node id="83">
        <label>hateb_local_planner/g2o_types/edge_agent_agent_safety.h</label>
        <link refid="edge__agent__agent__safety_8h"/>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>hateb_local_planner/OptimizationCostArray.h</label>
      </node>
      <node id="34">
        <label>ros/ros.h</label>
      </node>
      <node id="92">
        <label>hateb_local_planner/g2o_types/edge_prefer_rotdir.h</label>
        <link refid="edge__prefer__rotdir_8h"/>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>hateb_local_planner/hateb_config.h</label>
        <link refid="hateb__config_8h"/>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="98">
        <label>iostream</label>
      </node>
      <node id="35">
        <label>hateb_local_planner/planner_interface.h</label>
        <link refid="planner__interface_8h"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
      </node>
      <node id="85">
        <label>hateb_local_planner/g2o_types/edge_agent_robot_safety.h</label>
        <link refid="edge__agent__robot__safety_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="62">
        <label>cohan_msgs/TrajectoryStamped.h</label>
      </node>
      <node id="100">
        <label>climits</label>
      </node>
      <node id="71">
        <label>g2o/core/optimization_algorithm_gauss_newton.h</label>
      </node>
      <node id="66">
        <label>std_msgs/Float32.h</label>
      </node>
      <node id="51">
        <label>hateb_local_planner/visualization.h</label>
        <link refid="visualization_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>hateb_local_planner/timed_elastic_band.h</label>
        <link refid="timed__elastic__band_8h"/>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
      </node>
      <node id="84">
        <label>hateb_local_planner/g2o_types/edge_agent_robot_rel_velocity.h</label>
        <link refid="edge__agent__robot__rel__velocity_8h"/>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>hateb_local_planner/distance_calculations.h</label>
        <link refid="distance__calculations_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>geometry_msgs/TwistWithCovariance.h</label>
      </node>
      <node id="27">
        <label>g2o/stuff/misc.h</label>
      </node>
      <node id="45">
        <label>hateb_local_planner/g2o_types/vertex_pose.h</label>
        <link refid="vertex__pose_8h"/>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="55">
        <label>boost/graph/adjacency_list.hpp</label>
      </node>
      <node id="97">
        <label>hateb_local_planner/g2o_types/edge_velocity.h</label>
        <link refid="edge__velocity_8h"/>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="98" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>hateb_local_planner/pose_se2.h</label>
        <link refid="pose__se2_8h"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="89">
        <label>hateb_local_planner/g2o_types/edge_invisible_human.h</label>
        <link refid="edge__invisible__human_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>hateb_local_planner/misc.h</label>
        <link refid="misc_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>complex</label>
      </node>
      <node id="18">
        <label>algorithm</label>
      </node>
      <node id="60">
        <label>cohan_msgs/AgentTrajectoryArray.h</label>
      </node>
      <node id="68">
        <label>hateb_local_planner/visualization.hpp</label>
        <link refid="visualization_8hpp"/>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>geometry_msgs/TwistStamped.h</label>
      </node>
      <node id="99">
        <label>hateb_local_planner/g2o_types/edge_via_point.h</label>
        <link refid="edge__via__point_8h"/>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>boost/type_traits.hpp</label>
      </node>
      <node id="37">
        <label>cohan_msgs/AgentPath.h</label>
      </node>
      <node id="70">
        <label>g2o/core/factory.h</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacehateb__local__planner">hateb_local_planner</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="visualization_8cpp_1a87fb60abbdea44501569200652c77a62" prot="public" static="no">
        <name>GLOBAL_PLAN_TOPIC</name>
        <initializer>&quot;global_plan&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ptsingaman/ros_ws/CoHAN2.0/src/hateb_local_planner/src/visualization.cpp" line="49" column="9" bodyfile="/home/ptsingaman/ros_ws/CoHAN2.0/src/hateb_local_planner/src/visualization.cpp" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="visualization_8cpp_1adebaf6daa832bf6d3dbc4e9eb717a779" prot="public" static="no">
        <name>LOCAL_PLAN_TOPIC</name>
        <initializer>&quot;local_plan&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ptsingaman/ros_ws/CoHAN2.0/src/hateb_local_planner/src/visualization.cpp" line="50" column="9" bodyfile="/home/ptsingaman/ros_ws/CoHAN2.0/src/hateb_local_planner/src/visualization.cpp" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="visualization_8cpp_1a6d6f4da3aea8e3cf69e8a6be42dbd44a" prot="public" static="no">
        <name>LOCAL_TRAJ_TOPIC</name>
        <initializer>&quot;local_traj&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ptsingaman/ros_ws/CoHAN2.0/src/hateb_local_planner/src/visualization.cpp" line="51" column="9" bodyfile="/home/ptsingaman/ros_ws/CoHAN2.0/src/hateb_local_planner/src/visualization.cpp" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="visualization_8cpp_1ab2cc20554028dc2c8af68c2786877d58" prot="public" static="no">
        <name>LOCAL_PLAN_POSES_TOPIC</name>
        <initializer>&quot;local_plan_poses&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ptsingaman/ros_ws/CoHAN2.0/src/hateb_local_planner/src/visualization.cpp" line="52" column="9" bodyfile="/home/ptsingaman/ros_ws/CoHAN2.0/src/hateb_local_planner/src/visualization.cpp" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="visualization_8cpp_1a1fb6b1744f84ded5edecf2b5d811f210" prot="public" static="no">
        <name>LOCAL_PLAN_FP_POSES_TOPIC</name>
        <initializer>&quot;local_plan_fp_poses&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ptsingaman/ros_ws/CoHAN2.0/src/hateb_local_planner/src/visualization.cpp" line="53" column="9" bodyfile="/home/ptsingaman/ros_ws/CoHAN2.0/src/hateb_local_planner/src/visualization.cpp" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="visualization_8cpp_1ad65a0039f8da8ae721d0d60b10060569" prot="public" static="no">
        <name>AGENT_GLOBAL_PLANS_TOPIC</name>
        <initializer>&quot;agents_global_plans&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ptsingaman/ros_ws/CoHAN2.0/src/hateb_local_planner/src/visualization.cpp" line="54" column="9" bodyfile="/home/ptsingaman/ros_ws/CoHAN2.0/src/hateb_local_planner/src/visualization.cpp" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="visualization_8cpp_1a5e30d61377f56c03a54e34969116303f" prot="public" static="no">
        <name>AGENT_LOCAL_PLANS_TOPIC</name>
        <initializer>&quot;agents_local_plans&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ptsingaman/ros_ws/CoHAN2.0/src/hateb_local_planner/src/visualization.cpp" line="55" column="9" bodyfile="/home/ptsingaman/ros_ws/CoHAN2.0/src/hateb_local_planner/src/visualization.cpp" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="visualization_8cpp_1a1c8bbda05111484320a210ef826ccba9" prot="public" static="no">
        <name>AGENT_LOCAL_TRAJS_TOPIC</name>
        <initializer>&quot;agents_local_trajs&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ptsingaman/ros_ws/CoHAN2.0/src/hateb_local_planner/src/visualization.cpp" line="56" column="9" bodyfile="/home/ptsingaman/ros_ws/CoHAN2.0/src/hateb_local_planner/src/visualization.cpp" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="visualization_8cpp_1ae74f5aa19afdf1154bbac1ad9356efae" prot="public" static="no">
        <name>AGENT_LOCAL_PLANS_POSES_TOPIC</name>
        <initializer>&quot;agents_local_plans_poses&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ptsingaman/ros_ws/CoHAN2.0/src/hateb_local_planner/src/visualization.cpp" line="57" column="9" bodyfile="/home/ptsingaman/ros_ws/CoHAN2.0/src/hateb_local_planner/src/visualization.cpp" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="visualization_8cpp_1a2bcfb3618748ffa21d501d4b355c09d6" prot="public" static="no">
        <name>AGENT_LOCAL_PLANS_FP_POSES_TOPIC</name>
        <initializer>&quot;agents_local_plans_fp_poses&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ptsingaman/ros_ws/CoHAN2.0/src/hateb_local_planner/src/visualization.cpp" line="58" column="9" bodyfile="/home/ptsingaman/ros_ws/CoHAN2.0/src/hateb_local_planner/src/visualization.cpp" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="visualization_8cpp_1a014f7df82a47e3708cc6f614d1a499b9" prot="public" static="no">
        <name>ROBOT_FP_POSES_NS</name>
        <initializer>&quot;robot_fp_poses&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ptsingaman/ros_ws/CoHAN2.0/src/hateb_local_planner/src/visualization.cpp" line="59" column="9" bodyfile="/home/ptsingaman/ros_ws/CoHAN2.0/src/hateb_local_planner/src/visualization.cpp" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="visualization_8cpp_1a4116983fa64e0d7c537fde9032e450f5" prot="public" static="no">
        <name>AGENT_FP_POSES_NS</name>
        <initializer>&quot;agents_fp_poses&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ptsingaman/ros_ws/CoHAN2.0/src/hateb_local_planner/src/visualization.cpp" line="60" column="9" bodyfile="/home/ptsingaman/ros_ws/CoHAN2.0/src/hateb_local_planner/src/visualization.cpp" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="visualization_8cpp_1a7a5d2f08418f5739336391784e88b0e2" prot="public" static="no">
        <name>ROBOT_TRAJ_TIME_TOPIC</name>
        <initializer>&quot;traj_time&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ptsingaman/ros_ws/CoHAN2.0/src/hateb_local_planner/src/visualization.cpp" line="61" column="9" bodyfile="/home/ptsingaman/ros_ws/CoHAN2.0/src/hateb_local_planner/src/visualization.cpp" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="visualization_8cpp_1a7ef7ceb6c04d20fc53e236ff1f5908cb" prot="public" static="no">
        <name>ROBOT_PATH_TIME_TOPIC</name>
        <initializer>&quot;plan_time&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ptsingaman/ros_ws/CoHAN2.0/src/hateb_local_planner/src/visualization.cpp" line="62" column="9" bodyfile="/home/ptsingaman/ros_ws/CoHAN2.0/src/hateb_local_planner/src/visualization.cpp" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="visualization_8cpp_1a4291d106e69beae4dd3281e6ce9fb991" prot="public" static="no">
        <name>AGENT_TRAJS_TIME_TOPIC</name>
        <initializer>&quot;agents_trajs_time&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ptsingaman/ros_ws/CoHAN2.0/src/hateb_local_planner/src/visualization.cpp" line="63" column="9" bodyfile="/home/ptsingaman/ros_ws/CoHAN2.0/src/hateb_local_planner/src/visualization.cpp" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="visualization_8cpp_1a795afb902a67ac8a09a22f4f41b8a970" prot="public" static="no">
        <name>AGENT_PATHS_TIME_TOPIC</name>
        <initializer>&quot;agents_plans_time&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ptsingaman/ros_ws/CoHAN2.0/src/hateb_local_planner/src/visualization.cpp" line="64" column="9" bodyfile="/home/ptsingaman/ros_ws/CoHAN2.0/src/hateb_local_planner/src/visualization.cpp" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="visualization_8cpp_1a2f624e1a52967b5d964861df910a4d62" prot="public" static="no">
        <name>AGENT_MARKER_TOPIC</name>
        <initializer>&quot;agent_marker&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ptsingaman/ros_ws/CoHAN2.0/src/hateb_local_planner/src/visualization.cpp" line="65" column="9" bodyfile="/home/ptsingaman/ros_ws/CoHAN2.0/src/hateb_local_planner/src/visualization.cpp" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="visualization_8cpp_1aa704710e6ef01c22e41bc0cf304f3965" prot="public" static="no">
        <name>AGENT_ARROW_TOPIC</name>
        <initializer>&quot;agent_arrow&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ptsingaman/ros_ws/CoHAN2.0/src/hateb_local_planner/src/visualization.cpp" line="66" column="9" bodyfile="/home/ptsingaman/ros_ws/CoHAN2.0/src/hateb_local_planner/src/visualization.cpp" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="visualization_8cpp_1a84fbff89ea093f979c5a54b0787f34d9" prot="public" static="no">
        <name>ROBOT_NEXT_POSE_TOPIC</name>
        <initializer>&quot;robot_next_pose&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ptsingaman/ros_ws/CoHAN2.0/src/hateb_local_planner/src/visualization.cpp" line="67" column="9" bodyfile="/home/ptsingaman/ros_ws/CoHAN2.0/src/hateb_local_planner/src/visualization.cpp" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="visualization_8cpp_1a48c33c093011f94ee0d1a37c55745df9" prot="public" static="no">
        <name>AGENT_NEXT_POSE_TOPIC</name>
        <initializer>&quot;agent_next_pose&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ptsingaman/ros_ws/CoHAN2.0/src/hateb_local_planner/src/visualization.cpp" line="68" column="9" bodyfile="/home/ptsingaman/ros_ws/CoHAN2.0/src/hateb_local_planner/src/visualization.cpp" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="visualization_8cpp_1af7f746aa0e1cb97b582a03542c8b45d9" prot="public" static="no">
        <name>FEEDBACK_TOPIC</name>
        <initializer>&quot;teb_feedback&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ptsingaman/ros_ws/CoHAN2.0/src/hateb_local_planner/src/visualization.cpp" line="69" column="9" bodyfile="/home/ptsingaman/ros_ws/CoHAN2.0/src/hateb_local_planner/src/visualization.cpp" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="visualization_8cpp_1a0bce04529a2e1cf43baae159425d1fac" prot="public" static="no">
        <name>TEB_MARKER_TOPIC</name>
        <initializer>&quot;teb_markers&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ptsingaman/ros_ws/CoHAN2.0/src/hateb_local_planner/src/visualization.cpp" line="70" column="9" bodyfile="/home/ptsingaman/ros_ws/CoHAN2.0/src/hateb_local_planner/src/visualization.cpp" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="visualization_8cpp_1aac11bbf93316280c053f5ae1fcabce13" prot="public" static="no">
        <name>MODE_TEXT_TOPIC</name>
        <initializer>&quot;mode_text&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ptsingaman/ros_ws/CoHAN2.0/src/hateb_local_planner/src/visualization.cpp" line="71" column="9" bodyfile="/home/ptsingaman/ros_ws/CoHAN2.0/src/hateb_local_planner/src/visualization.cpp" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="visualization_8cpp_1ae044f78f124336287f592f2385130ab5" prot="public" static="no">
        <name>TTG_TOPIC</name>
        <initializer>&quot;time_to_goal&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ptsingaman/ros_ws/CoHAN2.0/src/hateb_local_planner/src/visualization.cpp" line="72" column="9" bodyfile="/home/ptsingaman/ros_ws/CoHAN2.0/src/hateb_local_planner/src/visualization.cpp" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="visualization_8cpp_1ab11c2b6087ea76911944279ff5a6d65e" prot="public" static="no">
        <name>TRACKED_AGENTS_SUB</name>
        <initializer>&quot;/tracked_agents&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ptsingaman/ros_ws/CoHAN2.0/src/hateb_local_planner/src/visualization.cpp" line="73" column="9" bodyfile="/home/ptsingaman/ros_ws/CoHAN2.0/src/hateb_local_planner/src/visualization.cpp" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="visualization_8cpp_1ab83b5f67f4eb6ff332347da5a681208a" prot="public" static="no">
        <name>CLEARING_TIMER_DURATION</name>
        <initializer>1.0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ptsingaman/ros_ws/CoHAN2.0/src/hateb_local_planner/src/visualization.cpp" line="74" column="9" bodyfile="/home/ptsingaman/ros_ws/CoHAN2.0/src/hateb_local_planner/src/visualization.cpp" bodystart="74" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*********************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Software<sp/>License<sp/>Agreement<sp/>(BSD<sp/>License)</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/><sp/>Copyright<sp/>(c)<sp/>2016,</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/><sp/>TU<sp/>Dortmund<sp/>-<sp/>Institute<sp/>of<sp/>Control<sp/>Theory<sp/>and<sp/>Systems<sp/>Engineering.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/><sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/><sp/>Copyright<sp/>(c)<sp/>2020<sp/>LAAS/CNRS</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/><sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/><sp/><sp/>*<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/><sp/>*<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>copyright<sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>disclaimer<sp/>in<sp/>the<sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/><sp/><sp/>*<sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>the<sp/>institute<sp/>nor<sp/>the<sp/>names<sp/>of<sp/>its</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>from<sp/>this<sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/><sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/><sp/>&quot;AS<sp/>IS&quot;<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/><sp/>LIMITED<sp/>TO,<sp/>THE<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/><sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/><sp/>COPYRIGHT<sp/>OWNER<sp/>OR<sp/>CONTRIBUTORS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/><sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/><sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*<sp/><sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/><sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*<sp/><sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING<sp/>IN</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*<sp/><sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*<sp/><sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*<sp/>Author:<sp/>Christoph<sp/>Rösmann</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>*<sp/>Modified<sp/>by:<sp/>Phani<sp/>Teja<sp/>Singamaneni</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/>*********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cohan_msgs/TrackedAgents.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cohan_msgs/TrackedSegmentType.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;hateb_local_planner/FeedbackMsg.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="optimal__planner_8h" kindref="compound">hateb_local_planner/optimal_planner.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="visualization_8h" kindref="compound">hateb_local_planner/visualization.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLOBAL_PLAN_TOPIC<sp/>&quot;global_plan&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LOCAL_PLAN_TOPIC<sp/>&quot;local_plan&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LOCAL_TRAJ_TOPIC<sp/>&quot;local_traj&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LOCAL_PLAN_POSES_TOPIC<sp/>&quot;local_plan_poses&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LOCAL_PLAN_FP_POSES_TOPIC<sp/>&quot;local_plan_fp_poses&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AGENT_GLOBAL_PLANS_TOPIC<sp/>&quot;agents_global_plans&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AGENT_LOCAL_PLANS_TOPIC<sp/>&quot;agents_local_plans&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AGENT_LOCAL_TRAJS_TOPIC<sp/>&quot;agents_local_trajs&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AGENT_LOCAL_PLANS_POSES_TOPIC<sp/>&quot;agents_local_plans_poses&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AGENT_LOCAL_PLANS_FP_POSES_TOPIC<sp/>&quot;agents_local_plans_fp_poses&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ROBOT_FP_POSES_NS<sp/>&quot;robot_fp_poses&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AGENT_FP_POSES_NS<sp/>&quot;agents_fp_poses&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ROBOT_TRAJ_TIME_TOPIC<sp/>&quot;traj_time&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ROBOT_PATH_TIME_TOPIC<sp/>&quot;plan_time&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AGENT_TRAJS_TIME_TOPIC<sp/>&quot;agents_trajs_time&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AGENT_PATHS_TIME_TOPIC<sp/>&quot;agents_plans_time&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AGENT_MARKER_TOPIC<sp/>&quot;agent_marker&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AGENT_ARROW_TOPIC<sp/>&quot;agent_arrow&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ROBOT_NEXT_POSE_TOPIC<sp/>&quot;robot_next_pose&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AGENT_NEXT_POSE_TOPIC<sp/>&quot;agent_next_pose&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FEEDBACK_TOPIC<sp/>&quot;teb_feedback&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TEB_MARKER_TOPIC<sp/>&quot;teb_markers&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MODE_TEXT_TOPIC<sp/>&quot;mode_text&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TTG_TOPIC<sp/>&quot;time_to_goal&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TRACKED_AGENTS_SUB<sp/>&quot;/tracked_agents&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CLEARING_TIMER_DURATION<sp/>1.0<sp/><sp/></highlight><highlight class="comment">//<sp/>seconds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacehateb__local__planner" kindref="compound">hateb_local_planner</ref><sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><ref refid="classhateb__local__planner_1_1TebVisualization_1ae0c4bd25168c07bee265b0bf3e25ac2f" kindref="member">TebVisualization::TebVisualization</ref>()<sp/>:<sp/>initialized_(false)<sp/>{}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal">TebVisualization::TebVisualization(ros::NodeHandle<sp/>&amp;nh,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>HATebConfig<sp/>&amp;cfg)<sp/>:<sp/>initialized_(false)<sp/>{<sp/>initialize(nh,<sp/>cfg);<sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TebVisualization::initialize(ros::NodeHandle<sp/>&amp;nh,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>HATebConfig<sp/>&amp;cfg)<sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(initialized_)<sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>ROS_WARN(</highlight><highlight class="stringliteral">&quot;TebVisualization<sp/>already<sp/>initialized.<sp/>Reinitalizing...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>config</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>cfg_<sp/>=<sp/>&amp;cfg;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>register<sp/>topics</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>global_plan_pub_<sp/>=<sp/>nh.advertise&lt;nav_msgs::Path&gt;(<ref refid="visualization_8cpp_1a87fb60abbdea44501569200652c77a62" kindref="member">GLOBAL_PLAN_TOPIC</ref>,<sp/>1);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>local_plan_pub_<sp/>=<sp/>nh.advertise&lt;nav_msgs::Path&gt;(<ref refid="visualization_8cpp_1adebaf6daa832bf6d3dbc4e9eb717a779" kindref="member">LOCAL_PLAN_TOPIC</ref>,<sp/>1);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>local_traj_pub_<sp/>=<sp/>nh.advertise&lt;cohan_msgs::TrajectoryStamped&gt;(<ref refid="visualization_8cpp_1a6d6f4da3aea8e3cf69e8a6be42dbd44a" kindref="member">LOCAL_TRAJ_TOPIC</ref>,<sp/>1);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/>teb_poses_pub_<sp/>=<sp/>nh.advertise&lt;geometry_msgs::PoseArray&gt;(<ref refid="visualization_8cpp_1ab2cc20554028dc2c8af68c2786877d58" kindref="member">LOCAL_PLAN_POSES_TOPIC</ref>,<sp/>1);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>teb_fp_poses_pub_<sp/>=<sp/>nh.advertise&lt;visualization_msgs::MarkerArray&gt;(<ref refid="visualization_8cpp_1a1fb6b1744f84ded5edecf2b5d811f210" kindref="member">LOCAL_PLAN_FP_POSES_TOPIC</ref>,<sp/>1);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>agents_global_plans_pub_<sp/>=<sp/>nh.advertise&lt;cohan_msgs::AgentPathArray&gt;(<ref refid="visualization_8cpp_1ad65a0039f8da8ae721d0d60b10060569" kindref="member">AGENT_GLOBAL_PLANS_TOPIC</ref>,<sp/>1);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>agents_local_plans_pub_<sp/>=<sp/>nh.advertise&lt;cohan_msgs::AgentPathArray&gt;(<ref refid="visualization_8cpp_1a5e30d61377f56c03a54e34969116303f" kindref="member">AGENT_LOCAL_PLANS_TOPIC</ref>,<sp/>1);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>agents_local_trajs_pub_<sp/>=<sp/>nh.advertise&lt;cohan_msgs::AgentTrajectoryArray&gt;(<ref refid="visualization_8cpp_1a1c8bbda05111484320a210ef826ccba9" kindref="member">AGENT_LOCAL_TRAJS_TOPIC</ref>,<sp/>1);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>agents_tebs_poses_pub_<sp/>=<sp/>nh.advertise&lt;geometry_msgs::PoseArray&gt;(<ref refid="visualization_8cpp_1ae74f5aa19afdf1154bbac1ad9356efae" kindref="member">AGENT_LOCAL_PLANS_POSES_TOPIC</ref>,<sp/>1);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/>agents_tebs_fp_poses_pub_<sp/>=<sp/>nh.advertise&lt;visualization_msgs::MarkerArray&gt;(<ref refid="visualization_8cpp_1a2bcfb3618748ffa21d501d4b355c09d6" kindref="member">AGENT_LOCAL_PLANS_FP_POSES_TOPIC</ref>,<sp/>1);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/>robot_traj_time_pub_<sp/>=<sp/>nh.advertise&lt;cohan_msgs::AgentTimeToGoal&gt;(<ref refid="visualization_8cpp_1a7a5d2f08418f5739336391784e88b0e2" kindref="member">ROBOT_TRAJ_TIME_TOPIC</ref>,<sp/>1);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>robot_path_time_pub_<sp/>=<sp/>nh.advertise&lt;cohan_msgs::AgentTimeToGoal&gt;(<ref refid="visualization_8cpp_1a7ef7ceb6c04d20fc53e236ff1f5908cb" kindref="member">ROBOT_PATH_TIME_TOPIC</ref>,<sp/>1);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>agent_trajs_time_pub_<sp/>=<sp/>nh.advertise&lt;cohan_msgs::AgentTimeToGoalArray&gt;(<ref refid="visualization_8cpp_1a4291d106e69beae4dd3281e6ce9fb991" kindref="member">AGENT_TRAJS_TIME_TOPIC</ref>,<sp/>1);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>agent_paths_time_pub_<sp/>=<sp/>nh.advertise&lt;cohan_msgs::AgentTimeToGoalArray&gt;(<ref refid="visualization_8cpp_1a795afb902a67ac8a09a22f4f41b8a970" kindref="member">AGENT_PATHS_TIME_TOPIC</ref>,<sp/>1);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/>agent_marker_pub_<sp/>=<sp/>nh.advertise&lt;visualization_msgs::MarkerArray&gt;(<ref refid="visualization_8cpp_1a2f624e1a52967b5d964861df910a4d62" kindref="member">AGENT_MARKER_TOPIC</ref>,<sp/>1);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/>agent_arrow_pub_<sp/>=<sp/>nh.advertise&lt;visualization_msgs::MarkerArray&gt;(<ref refid="visualization_8cpp_1aa704710e6ef01c22e41bc0cf304f3965" kindref="member">AGENT_ARROW_TOPIC</ref>,<sp/>1);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/>robot_next_pose_pub_<sp/>=<sp/>nh.advertise&lt;geometry_msgs::PoseStamped&gt;(<ref refid="visualization_8cpp_1a84fbff89ea093f979c5a54b0787f34d9" kindref="member">ROBOT_NEXT_POSE_TOPIC</ref>,<sp/>1);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/>agent_next_pose_pub_<sp/>=<sp/>nh.advertise&lt;geometry_msgs::PoseStamped&gt;(<ref refid="visualization_8cpp_1a48c33c093011f94ee0d1a37c55745df9" kindref="member">AGENT_NEXT_POSE_TOPIC</ref>,<sp/>1);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/>feedback_pub_<sp/>=<sp/>nh.advertise&lt;hateb_local_planner::FeedbackMsg&gt;(<ref refid="visualization_8cpp_1af7f746aa0e1cb97b582a03542c8b45d9" kindref="member">FEEDBACK_TOPIC</ref>,<sp/>10);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/>teb_marker_pub_<sp/>=<sp/>nh.advertise&lt;visualization_msgs::Marker&gt;(<ref refid="visualization_8cpp_1a0bce04529a2e1cf43baae159425d1fac" kindref="member">TEB_MARKER_TOPIC</ref>,<sp/>1000);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>mode_text_pub_<sp/>=<sp/>nh.advertise&lt;visualization_msgs::Marker&gt;(<ref refid="visualization_8cpp_1aac11bbf93316280c053f5ae1fcabce13" kindref="member">MODE_TEXT_TOPIC</ref>,<sp/>1);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/>ttg_pub_<sp/>=<sp/>nh.advertise&lt;std_msgs::Float32&gt;(<ref refid="visualization_8cpp_1ae044f78f124336287f592f2385130ab5" kindref="member">TTG_TOPIC</ref>,<sp/>10);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/>last_publish_robot_global_plan_<sp/>=<sp/>cfg_-&gt;visualization.publish_robot_global_plan;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>last_publish_robot_local_plan_<sp/>=<sp/>cfg_-&gt;visualization.publish_robot_local_plan;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/>last_publish_robot_local_plan_poses_<sp/>=<sp/>cfg_-&gt;visualization.publish_robot_local_plan_poses;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/>last_publish_robot_local_plan_fp_poses_<sp/>=<sp/>cfg_-&gt;visualization.publish_robot_local_plan_fp_poses;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/>last_publish_agents_global_plans_<sp/>=<sp/>cfg_-&gt;visualization.publish_agents_global_plans;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/>last_publish_agents_local_plans_<sp/>=<sp/>cfg_-&gt;visualization.publish_agents_local_plans;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/>last_publish_agents_local_plan_poses_<sp/>=<sp/>cfg_-&gt;visualization.publish_agents_local_plan_poses;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/>last_publish_agents_local_plan_fp_poses_<sp/>=<sp/>cfg_-&gt;visualization.publish_agents_local_plan_fp_poses;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/>clearing_timer_<sp/>=<sp/>nh.createTimer(ros::Duration(<ref refid="visualization_8cpp_1ab83b5f67f4eb6ff332347da5a681208a" kindref="member">CLEARING_TIMER_DURATION</ref>),<sp/>&amp;TebVisualization::clearingTimerCB,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>namespace<sp/>from<sp/>the<sp/>parameter<sp/>server<sp/>(different<sp/>from<sp/>the<sp/>cfg<sp/>server)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ros::param::get(</highlight><highlight class="stringliteral">&quot;~ns&quot;</highlight><highlight class="normal">,<sp/>ns_))<sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>ns_<sp/>=<sp/>std::string(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Subscribe<sp/>to<sp/>correct<sp/>tracked<sp/>agents<sp/>topic<sp/>based<sp/>on<sp/>the<sp/>namespace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/>tracked_agents_sub_topic_<sp/>=<sp/><ref refid="visualization_8cpp_1ab11c2b6087ea76911944279ff5a6d65e" kindref="member">TRACKED_AGENTS_SUB</ref>;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ns_.empty())<sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>tracked_agents_sub_topic_<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/>ns_<sp/>+<sp/>tracked_agents_sub_topic_;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/>tracked_agents_sub_<sp/>=<sp/>nh.subscribe(tracked_agents_sub_topic_,<sp/>10,<sp/>&amp;TebVisualization::publishTrackedAgents,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/>last_robot_fp_poses_idx_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/>last_agent_fp_poses_idx_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/>initialized_<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="139"><highlight class="normal">}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TebVisualization::publishGlobalPlan(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;geometry_msgs::PoseStamped&gt;<sp/>&amp;global_plan)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(printErrorWhenNotInitialized()<sp/>||<sp/>!cfg_-&gt;visualization.publish_robot_global_plan)<sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/>base_local_planner::publishPlan(global_plan,<sp/>global_plan_pub_);</highlight></codeline>
<codeline lineno="146"><highlight class="normal">}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TebVisualization::publishLocalPlan(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;geometry_msgs::PoseStamped&gt;<sp/>&amp;local_plan)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(printErrorWhenNotInitialized())<sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/>base_local_planner::publishPlan(local_plan,<sp/>local_plan_pub_);</highlight></codeline>
<codeline lineno="153"><highlight class="normal">}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TebVisualization::publishAgentGlobalPlans(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;AgentPlanCombined&gt;<sp/>&amp;agents_plans)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(printErrorWhenNotInitialized()<sp/>||<sp/>!cfg_-&gt;visualization.publish_agents_global_plans<sp/>||<sp/>agents_plans.empty())<sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>now<sp/>=<sp/>ros::Time::now();</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>frame_id<sp/>=<sp/>cfg_-&gt;map_frame;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/>cohan_msgs::AgentPathArray<sp/>agent_path_array;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>agent_path_array.header.stamp<sp/>=<sp/>now;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/>agent_path_array.header.frame_id<sp/>=<sp/>frame_id;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;agent_plan_combined<sp/>:<sp/>agents_plans)<sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>total_size<sp/>=<sp/>agent_plan_combined.plan_before.size()<sp/>+<sp/>agent_plan_combined.plan_to_optimize.size()<sp/>+<sp/>agent_plan_combined.plan_after.size();</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(total_size<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>nav_msgs::Path<sp/>path;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>path.header.stamp<sp/>=<sp/>now;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>path.header.frame_id<sp/>=<sp/>frame_id;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>path.poses.resize(total_size);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>agent_plan_combined.plan_before.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>path.poses[i]<sp/>=<sp/>agent_plan_combined.plan_before[i];</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>index<sp/>+=<sp/>agent_plan_combined.plan_before.size();</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>agent_plan_combined.plan_to_optimize.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>path.poses[i<sp/>+<sp/>index]<sp/>=<sp/>agent_plan_combined.plan_to_optimize[i];</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>index<sp/>+=<sp/>agent_plan_combined.plan_to_optimize.size();</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>agent_plan_combined.plan_after.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>path.poses[i<sp/>+<sp/>index]<sp/>=<sp/>agent_plan_combined.plan_after[i];</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>cohan_msgs::AgentPath<sp/>agent_path;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>agent_path.header.stamp<sp/>=<sp/>now;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>agent_path.header.frame_id<sp/>=<sp/>frame_id;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>agent_path.id<sp/>=<sp/>agent_plan_combined.id;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>agent_path.path<sp/>=<sp/>path;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>agent_path_array.paths.push_back(agent_path);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!agent_path_array.paths.empty())<sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>agents_global_plans_pub_.publish(agent_path_array);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="202"><highlight class="normal">}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TebVisualization::publishLocalPlanAndPoses(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TimedElasticBand<sp/>&amp;teb,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BaseFootprintModel<sp/>&amp;robot_model,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>fp_size,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std_msgs::ColorRGBA<sp/>&amp;color)<sp/>{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(printErrorWhenNotInitialized()<sp/>||</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(!cfg_-&gt;visualization.publish_robot_local_plan<sp/>&amp;&amp;<sp/>!cfg_-&gt;visualization.publish_robot_local_plan_poses<sp/>&amp;&amp;<sp/>!cfg_-&gt;visualization.publish_robot_local_plan_fp_poses))<sp/>{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>frame_id<sp/>=<sp/>cfg_-&gt;map_frame;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>now<sp/>=<sp/>ros::Time::now();</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>path<sp/>msg</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/>nav_msgs::Path<sp/>teb_path;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/>teb_path.header.frame_id<sp/>=<sp/>frame_id;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/>teb_path.header.stamp<sp/>=<sp/>now;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>pose_array<sp/>(along<sp/>trajectory)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/>geometry_msgs::PoseArray<sp/>teb_poses;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/>teb_poses.header.frame_id<sp/>=<sp/>frame_id;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/>teb_poses.header.stamp<sp/>=<sp/>now;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>fill<sp/>path<sp/>msgs<sp/>with<sp/>teb<sp/>configurations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>pose_time<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>std::vector&lt;double&gt;<sp/>pose_times;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>teb.sizePoses();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>geometry_msgs::PoseStamped<sp/>pose;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>pose.header.frame_id<sp/>=<sp/>frame_id;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>pose.header.stamp<sp/>=<sp/>now;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>pose.pose.position.x<sp/>=<sp/>teb.Pose(i).x();</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>pose.pose.position.y<sp/>=<sp/>teb.Pose(i).y();</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pose_times.push_back(teb.TimeDiff(i));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>pose.pose.position.z<sp/>=<sp/>0;<sp/><sp/></highlight><highlight class="comment">//<sp/>cfg_-&gt;trajectory.visualize_with_time_as_z_axis_scale*teb.getSumOfTimeDiffsUpToIdx(i);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>pose.pose.orientation<sp/>=<sp/>tf::createQuaternionMsgFromYaw(teb.Pose(i).theta());</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>teb_path.poses.push_back(pose);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>teb_poses.poses.push_back(pose.pose);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>robot_next_pose_pub_.publish(pose);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/>(teb.sizePoses()<sp/>-<sp/>1))<sp/>{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pose_time<sp/>+=<sp/>teb.TimeDiff(i);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>publish<sp/>robot<sp/>local<sp/>plans</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!teb_path.poses.empty()<sp/>&amp;&amp;<sp/>cfg_-&gt;visualization.publish_robot_local_plan)<sp/>{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>local_plan_pub_.publish(teb_path);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>publish<sp/>robot<sp/>local<sp/>plan<sp/>poses<sp/>and<sp/>footprint</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!teb_poses.poses.empty())<sp/>{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cfg_-&gt;visualization.publish_robot_local_plan_poses)<sp/>{</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>teb_poses_pub_.publish(teb_poses);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cfg_-&gt;visualization.publish_robot_local_plan_fp_poses)<sp/>{</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>visualization_msgs::MarkerArray<sp/>teb_fp_poses;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>double<sp/>fp_size<sp/>=<sp/>teb_poses.poses.size();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;pose<sp/>:<sp/>teb_poses.poses)<sp/>{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;visualization_msgs::Marker&gt;<sp/>fp_markers;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>robot_model.visualizeModel(PoseSE2(pose),<sp/>fp_markers,<sp/>color);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;marker<sp/>:<sp/>fp_markers)<sp/>{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>marker.header.frame_id<sp/>=<sp/>cfg_-&gt;map_frame;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>marker.header.stamp<sp/>=<sp/>ros::Time::now();</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>marker.action<sp/>=<sp/>visualization_msgs::Marker::ADD;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>marker.ns<sp/>=<sp/><ref refid="visualization_8cpp_1a014f7df82a47e3708cc6f614d1a499b9" kindref="member">ROBOT_FP_POSES_NS</ref>;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>marker.pose.position.z<sp/>=<sp/>vel_robot_[idx]<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>marker.scale.z<sp/>=<sp/>std::max(vel_robot_[idx],<sp/>0.00001);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>marker.id<sp/>=<sp/>idx++;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>marker.color.a<sp/>=<sp/>0.5;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setMarkerColour(marker,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(idx),<sp/>fp_size);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>marker.scale.x<sp/>=<sp/>0.2;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>marker.scale.y<sp/>=<sp/>0.2;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>marker.lifetime<sp/>=<sp/>ros::Duration(2.0);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>teb_fp_poses.markers.push_back(marker);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(idx<sp/>&lt;<sp/>last_robot_fp_poses_idx_)<sp/>{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>visualization_msgs::Marker<sp/>clean_fp_marker;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clean_fp_marker.header.frame_id<sp/>=<sp/>cfg_-&gt;map_frame;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clean_fp_marker.header.stamp<sp/>=<sp/>ros::Time::now();</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clean_fp_marker.action<sp/>=<sp/>visualization_msgs::Marker::DELETE;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clean_fp_marker.id<sp/>=<sp/>idx++;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clean_fp_marker.ns<sp/>=<sp/><ref refid="visualization_8cpp_1a014f7df82a47e3708cc6f614d1a499b9" kindref="member">ROBOT_FP_POSES_NS</ref>;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>teb_fp_poses.markers.push_back(clean_fp_marker);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>last_robot_fp_poses_idx_<sp/>=<sp/>idx;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>teb_fp_poses_pub_.publish(teb_fp_poses);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="294"><highlight class="normal">}</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TebVisualization::publishTrajectory(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>PlanTrajCombined<sp/>&amp;plan_traj_combined)<sp/>{</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(printErrorWhenNotInitialized()<sp/>||<sp/>!cfg_-&gt;visualization.publish_robot_local_plan)<sp/>{</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/>vel_robot_.clear();</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>frame_id<sp/>=<sp/>cfg_-&gt;map_frame;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>now<sp/>=<sp/>ros::Time::now();</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/>cohan_msgs::TrajectoryStamped<sp/>trajectory;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/>trajectory.header.frame_id<sp/>=<sp/>frame_id;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/>trajectory.header.stamp<sp/>=<sp/>now;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/>cohan_msgs::AgentTimeToGoal<sp/>robot_time_to_goal;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/>robot_time_to_goal.header.frame_id<sp/>=<sp/>frame_id;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/>robot_time_to_goal.header.stamp<sp/>=<sp/>now;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/>cohan_msgs::AgentTimeToGoal<sp/>robot_time_to_goal_full;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/>robot_time_to_goal_full.header.frame_id<sp/>=<sp/>frame_id;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/>robot_time_to_goal_full.header.stamp<sp/>=<sp/>now;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;pose<sp/>:<sp/>plan_traj_combined.plan_before)<sp/>{</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>cohan_msgs::TrajectoryPoint<sp/>trajectory_point;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>trajectory_point.pose.position.x<sp/>=<sp/>pose.pose.position.x;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>trajectory_point.pose.position.y<sp/>=<sp/>pose.pose.position.y;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>trajectory_point.pose.position.z<sp/>=<sp/>pose.pose.position.z;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>trajectory_point.pose.orientation<sp/>=<sp/>pose.pose.orientation;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>trajectory_point.time_from_start.fromSec(-1.0);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>trajectory.points.push_back(trajectory_point);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;traj_point<sp/>:<sp/>plan_traj_combined.optimized_trajectory)<sp/>{</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>cohan_msgs::TrajectoryPoint<sp/>trajectory_point;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>trajectory_point.pose.position.x<sp/>=<sp/>traj_point.pose.position.x;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/>trajectory_point.pose.position.y<sp/>=<sp/>traj_point.pose.position.y;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>trajectory_point.pose.position.z<sp/>=<sp/>traj_point.pose.position.z;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/>trajectory_point.pose.orientation<sp/>=<sp/>traj_point.pose.orientation;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>trajectory_point.velocity<sp/>=<sp/>traj_point.velocity;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>r_vel<sp/>=<sp/>std::hypot(traj_point.velocity.linear.x,<sp/>traj_point.velocity.linear.y);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>vel_robot_.push_back(r_vel);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>trajectory_point.time_from_start<sp/>=<sp/>traj_point.time_from_start;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>trajectory.points.push_back(trajectory_point);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(plan_traj_combined.optimized_trajectory.size()<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>robot_time_to_goal.time_to_goal<sp/>=<sp/>ros::Duration(trajectory.points.back().time_from_start);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/>robot_time_to_goal.time_to_goal<sp/>=<sp/>ros::Duration(0);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>remaining_path_dist<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>geometry_msgs::PoseStamped<sp/>*previous_pose<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;pose<sp/>:<sp/>plan_traj_combined.plan_after)<sp/>{</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/>cohan_msgs::TrajectoryPoint<sp/>trajectory_point;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/>trajectory_point.pose.position.x<sp/>=<sp/>pose.pose.position.x;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/>trajectory_point.pose.position.y<sp/>=<sp/>pose.pose.position.y;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/>trajectory_point.pose.position.z<sp/>=<sp/>pose.pose.position.z;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/>trajectory_point.pose.orientation<sp/>=<sp/>pose.pose.orientation;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/>trajectory_point.time_from_start.fromSec(-1.0);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>trajectory.points.push_back(trajectory_point);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(previous_pose<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>remaining_path_dist<sp/>+=<sp/>std::hypot(pose.pose.position.x<sp/>-<sp/>previous_pose-&gt;pose.position.x,<sp/>pose.pose.position.y<sp/>-<sp/>previous_pose-&gt;pose.position.y);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/>previous_pose<sp/>=<sp/>&amp;pose;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/>robot_time_to_goal_full.time_to_goal<sp/>=<sp/>robot_time_to_goal.time_to_goal<sp/>+<sp/>ros::Duration(remaining_path_dist<sp/>/<sp/>cfg_-&gt;robot.max_vel_x);</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/>std_msgs::Float32<sp/>ttg_msg;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/>ttg_msg.data<sp/>=<sp/>robot_time_to_goal_full.time_to_goal.toSec();</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/>ttg_pub_.publish(ttg_msg);</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!trajectory.points.empty())<sp/>{</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/>local_traj_pub_.publish(trajectory);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/>robot_traj_time_pub_.publish(robot_time_to_goal);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/>robot_path_time_pub_.publish(robot_time_to_goal_full);</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="375"><highlight class="normal">}</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TebVisualization::publishAgentLocalPlansAndPoses(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::map&lt;uint64_t,<sp/>TimedElasticBand&gt;<sp/>&amp;agents_tebs_map,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BaseFootprintModel<sp/>&amp;agent_model,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>fp_size,</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std_msgs::ColorRGBA<sp/>&amp;color)<sp/>{</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(printErrorWhenNotInitialized()<sp/>||<sp/>agents_tebs_map.empty()<sp/>||</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(!cfg_-&gt;visualization.publish_agents_local_plans<sp/>&amp;&amp;<sp/>!cfg_-&gt;visualization.publish_agents_local_plan_poses<sp/>&amp;&amp;<sp/>!cfg_-&gt;visualization.publish_agents_local_plan_fp_poses))<sp/>{</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>now<sp/>=<sp/>ros::Time::now();</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>frame_id<sp/>=<sp/>cfg_-&gt;map_frame;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>pose<sp/>array<sp/>for<sp/>all<sp/>agents</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/>geometry_msgs::PoseArray<sp/>agents_teb_poses;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/>agents_teb_poses.header.frame_id<sp/>=<sp/>frame_id;</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/>agents_teb_poses.header.stamp<sp/>=<sp/>now;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/>cohan_msgs::AgentPathArray<sp/>agent_path_array;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/>agent_path_array.header.stamp<sp/>=<sp/>now;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/>agent_path_array.header.frame_id<sp/>=<sp/>frame_id;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;agent_teb_kv<sp/>:<sp/>agents_tebs_map)<sp/>{</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;agent_id<sp/>=<sp/>agent_teb_kv.first;</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;agent_teb<sp/>=<sp/>agent_teb_kv.second;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/>cohan_msgs::AgentPath<sp/>path;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/>path.header.stamp<sp/>=<sp/>now;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>path.header.frame_id<sp/>=<sp/>frame_id;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(agent_teb.sizePoses()<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>pose_time<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>agent_teb.sizePoses();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>geometry_msgs::PoseStamped<sp/>pose;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pose.header.stamp<sp/>=<sp/>now;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pose.header.frame_id<sp/>=<sp/>frame_id;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pose.pose.position.x<sp/>=<sp/>agent_teb.Pose(i).x();</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pose.pose.position.y<sp/>=<sp/>agent_teb.Pose(i).y();</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pose.pose.position.z<sp/>=<sp/>pose_time<sp/>*<sp/>cfg_-&gt;visualization.pose_array_z_scale;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pose.pose.orientation<sp/>=<sp/>tf::createQuaternionMsgFromYaw(agent_teb.Pose(i).theta());</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>agents_teb_poses.poses.push_back(pose.pose);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pose.pose.position.z<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>path.path.poses.push_back(pose);</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/>(agent_teb.sizePoses()<sp/>-<sp/>1))<sp/>{</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pose_time<sp/>+=<sp/>agent_teb.TimeDiff(i);</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>agent_next_pose_pub_.publish(pose);</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/>agent_path_array.paths.push_back(path);</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!agents_teb_poses.poses.empty())<sp/>{</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cfg_-&gt;visualization.publish_agents_local_plan_poses)<sp/>{</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>agents_tebs_poses_pub_.publish(agents_teb_poses);</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cfg_-&gt;visualization.publish_agents_local_plans)<sp/>{</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>agents_local_plans_pub_.publish(agent_path_array);</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cfg_-&gt;visualization.publish_agents_local_plan_fp_poses)<sp/>{</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>visualization_msgs::MarkerArray<sp/>agents_teb_fp_poses;</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;pose<sp/>:<sp/>agents_teb_poses.poses)<sp/>{</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;visualization_msgs::Marker&gt;<sp/>agent_fp_markers;</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>agent_model.visualizeModel(PoseSE2(pose),<sp/>agent_fp_markers,<sp/>color);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;agent_marker<sp/>:<sp/>agent_fp_markers)<sp/>{</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>agent_marker.header.frame_id<sp/>=<sp/>cfg_-&gt;map_frame;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>agent_marker.header.stamp<sp/>=<sp/>ros::Time::now();</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>agent_marker.action<sp/>=<sp/>visualization_msgs::Marker::ADD;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>agent_marker.ns<sp/>=<sp/><ref refid="visualization_8cpp_1a4116983fa64e0d7c537fde9032e450f5" kindref="member">AGENT_FP_POSES_NS</ref>;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>agent_marker.pose.position.z<sp/>=<sp/>vel_agent_[idx]<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>agent_marker.scale.z<sp/>=<sp/>std::max(vel_agent_[idx],<sp/>0.00001);</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>agent_marker.id<sp/>=<sp/>idx++;</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>agent_marker.color.a<sp/>=<sp/>0.5;</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setMarkerColour(agent_marker,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(idx),<sp/>fp_size);</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>agent_marker.scale.x<sp/>=<sp/>0.2;</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>agent_marker.scale.y<sp/>=<sp/>0.2;</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>agent_marker.lifetime<sp/>=<sp/>ros::Duration(2.0);</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>agents_teb_fp_poses.markers.push_back(agent_marker);</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(idx<sp/>&lt;<sp/>last_agent_fp_poses_idx_)<sp/>{</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>visualization_msgs::Marker<sp/>clean_fp_marker;</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clean_fp_marker.header.frame_id<sp/>=<sp/>cfg_-&gt;map_frame;</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clean_fp_marker.header.stamp<sp/>=<sp/>ros::Time::now();</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clean_fp_marker.action<sp/>=<sp/>visualization_msgs::Marker::DELETE;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clean_fp_marker.id<sp/>=<sp/>idx++;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clean_fp_marker.ns<sp/>=<sp/><ref refid="visualization_8cpp_1a4116983fa64e0d7c537fde9032e450f5" kindref="member">AGENT_FP_POSES_NS</ref>;</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>agents_teb_fp_poses.markers.push_back(clean_fp_marker);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>last_agent_fp_poses_idx_<sp/>=<sp/>idx;</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>agents_tebs_fp_poses_pub_.publish(agents_teb_fp_poses);</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="474"><highlight class="normal">}</highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TebVisualization::publishAgentTrajectories(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;AgentPlanTrajCombined&gt;<sp/>&amp;agents_plans_combined)<sp/>{</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(printErrorWhenNotInitialized()<sp/>||<sp/>!cfg_-&gt;visualization.publish_agents_local_plans)<sp/>{</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/>vel_agent_.clear();</highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>now<sp/>=<sp/>ros::Time::now();</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>frame_id<sp/>=<sp/>cfg_-&gt;map_frame;</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/>cohan_msgs::AgentTrajectoryArray<sp/>agent_path_trajectory_array;</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>agent_path_trajectory_array.header.stamp<sp/>=<sp/>now;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>agent_path_trajectory_array.header.frame_id<sp/>=<sp/>frame_id;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/>cohan_msgs::AgentTimeToGoalArray<sp/>agent_time_to_goal_array;</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/>agent_time_to_goal_array.header.stamp<sp/>=<sp/>now;</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/>agent_time_to_goal_array.header.frame_id<sp/>=<sp/>frame_id;</highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/>cohan_msgs::AgentTimeToGoalArray<sp/>agent_time_to_goal_array_full;</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/>agent_time_to_goal_array_full.header.stamp<sp/>=<sp/>now;</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/>agent_time_to_goal_array_full.header.frame_id<sp/>=<sp/>frame_id;</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;agent_plan_traj_combined<sp/>:<sp/>agents_plans_combined)<sp/>{</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/>cohan_msgs::AgentTrajectory<sp/>agent_path_trajectory;</highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/>cohan_msgs::AgentTimeToGoal<sp/>agent_time_to_goal;</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/>agent_time_to_goal.header.stamp<sp/>=<sp/>now;</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/>agent_time_to_goal.header.frame_id<sp/>=<sp/>frame_id;</highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;agent_pose<sp/>:<sp/>agent_plan_traj_combined.plan_before)<sp/>{</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cohan_msgs::TrajectoryPoint<sp/>agent_path_trajectory_point;</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>agent_path_trajectory_point.pose.position.x<sp/>=<sp/>agent_pose.pose.position.x;</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>agent_path_trajectory_point.pose.position.y<sp/>=<sp/>agent_pose.pose.position.y;</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>agent_path_trajectory_point.pose.position.z<sp/>=<sp/>agent_pose.pose.position.z;</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>agent_path_trajectory_point.pose.orientation<sp/>=<sp/>agent_pose.pose.orientation;</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>agent_path_trajectory_point.time_from_start.fromSec(-1.0);</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>agent_path_trajectory.trajectory.points.push_back(agent_path_trajectory_point);</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;agent_traj_point<sp/>:<sp/>agent_plan_traj_combined.optimized_trajectory)<sp/>{</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cohan_msgs::TrajectoryPoint<sp/>agent_path_trajectory_point;</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>agent_path_trajectory_point.pose.position.x<sp/>=<sp/>agent_traj_point.pose.position.x;</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>agent_path_trajectory_point.pose.position.y<sp/>=<sp/>agent_traj_point.pose.position.y;</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>agent_path_trajectory_point.pose.position.z<sp/>=<sp/>agent_traj_point.pose.position.z;</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>agent_path_trajectory_point.pose.orientation<sp/>=<sp/>agent_traj_point.pose.orientation;</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>agent_path_trajectory_point.velocity<sp/>=<sp/>agent_traj_point.velocity;</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>h_vel<sp/>=<sp/>std::hypot(agent_traj_point.velocity.linear.x,<sp/>agent_traj_point.velocity.linear.y);</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vel_agent_.push_back(h_vel);</highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>agent_path_trajectory_point.time_from_start<sp/>=<sp/>agent_traj_point.time_from_start;</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>agent_path_trajectory.trajectory.points.push_back(agent_path_trajectory_point);</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(agent_plan_traj_combined.optimized_trajectory.size()<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>agent_time_to_goal.time_to_goal<sp/>=<sp/>ros::Duration(agent_path_trajectory.trajectory.points.back().time_from_start);</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>agent_time_to_goal.time_to_goal<sp/>=<sp/>ros::Duration(0);</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>remaining_path_dist<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>geometry_msgs::PoseStamped<sp/>*previous_agent_pose<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;agent_pose<sp/>:<sp/>agent_plan_traj_combined.plan_after)<sp/>{</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cohan_msgs::TrajectoryPoint<sp/>agent_path_trajectory_point;</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>agent_path_trajectory_point.pose.position.x<sp/>=<sp/>agent_pose.pose.position.x;</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>agent_path_trajectory_point.pose.position.y<sp/>=<sp/>agent_pose.pose.position.y;</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>agent_path_trajectory_point.pose.position.z<sp/>=<sp/>agent_pose.pose.position.z;</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>agent_path_trajectory_point.pose.orientation<sp/>=<sp/>agent_pose.pose.orientation;</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>agent_path_trajectory_point.time_from_start.fromSec(-1.0);</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>agent_path_trajectory.trajectory.points.push_back(agent_path_trajectory_point);</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(previous_agent_pose<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>remaining_path_dist<sp/>+=<sp/>std::hypot(agent_pose.pose.position.x<sp/>-<sp/>previous_agent_pose-&gt;pose.position.x,<sp/>agent_pose.pose.position.y<sp/>-<sp/>previous_agent_pose-&gt;pose.position.y);</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>previous_agent_pose<sp/>=<sp/>&amp;agent_pose;</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!agent_path_trajectory.trajectory.points.empty())<sp/>{</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>agent_path_trajectory.id<sp/>=<sp/>agent_plan_traj_combined.id;</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>agent_path_trajectory_array.trajectories.push_back(agent_path_trajectory);</highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>agent_time_to_goal.id<sp/>=<sp/>agent_plan_traj_combined.id;</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>agent_time_to_goal_array.times_to_goal.push_back(agent_time_to_goal);</highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>agent_time_to_goal.time_to_goal<sp/>+=<sp/>ros::Duration(remaining_path_dist<sp/>/<sp/>cfg_-&gt;agent.max_vel_x);</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>agent_time_to_goal_array_full.times_to_goal.push_back(agent_time_to_goal);</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!agent_path_trajectory_array.trajectories.empty())<sp/>{</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/>agents_local_trajs_pub_.publish(agent_path_trajectory_array);</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/>agent_trajs_time_pub_.publish(agent_time_to_goal_array);</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/>agent_paths_time_pub_.publish(agent_time_to_goal_array_full);</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="567"><highlight class="normal">}</highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TebVisualization::publishMode(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Mode)<sp/>{</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/>tf::StampedTransform<sp/>robot_to_map_tf;</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/>tf::Transform<sp/>start_pose_tr;</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>transform_found<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>base<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;base_link&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ns_.empty())<sp/>{</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>base<sp/>=<sp/>ns_<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/>base;</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="578"><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/>tf_.lookupTransform(</highlight><highlight class="stringliteral">&quot;map&quot;</highlight><highlight class="normal">,<sp/>base,<sp/>ros::Time(0),<sp/>robot_to_map_tf);</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/>transform_found<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(tf::LookupException<sp/>&amp;ex)<sp/>{</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/>ROS_ERROR_NAMED(</highlight><highlight class="stringliteral">&quot;visualization&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;No<sp/>Transform<sp/>available<sp/>Error:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>ex.what());</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(tf::ConnectivityException<sp/>&amp;ex)<sp/>{</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/>ROS_ERROR_NAMED(</highlight><highlight class="stringliteral">&quot;visualization&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Connectivity<sp/>Error:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>ex.what());</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(tf::ExtrapolationException<sp/>&amp;ex)<sp/>{</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/>ROS_ERROR_NAMED(</highlight><highlight class="stringliteral">&quot;visualization&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Extrapolation<sp/>Error:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>ex.what());</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/>geometry_msgs::Transform<sp/>robot_behind_pose;</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(transform_found)<sp/>{</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/>start_pose_tr.setOrigin(tf::Vector3(-1.0,<sp/>0.0,<sp/>0.0));</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/>start_pose_tr.setRotation(tf::createQuaternionFromYaw(0.0));</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/>start_pose_tr<sp/>=<sp/>robot_to_map_tf<sp/>*<sp/>start_pose_tr;</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/>tf::transformTFToMsg(start_pose_tr,<sp/>robot_behind_pose);</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/>visualization_msgs::Marker<sp/>mode_text;</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/>mode_text.header.frame_id<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;map&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/>mode_text.header.stamp<sp/>=<sp/>ros::Time::now();</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/>mode_text.ns<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;mode&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/>mode_text.id<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/>mode_text.type<sp/>=<sp/>visualization_msgs::Marker::TEXT_VIEW_FACING;</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/>mode_text.action<sp/>=<sp/>visualization_msgs::Marker::ADD;</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/>mode_text.pose.position.x<sp/>=<sp/>robot_behind_pose.translation.x;</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/>mode_text.pose.position.y<sp/>=<sp/>robot_behind_pose.translation.y;</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/>mode_text.pose.position.z<sp/>=<sp/>2.0;</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/>mode_text.pose.orientation<sp/>=<sp/>robot_behind_pose.rotation;</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>mode_text.pose.orientation.x<sp/>=<sp/>0.0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>mode_text.pose.orientation.y<sp/>=<sp/>0.0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>mode_text.pose.orientation.z<sp/>=<sp/>0.0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>mode_text.pose.orientation.w<sp/>=<sp/>1.0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Mode<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/>mode_text.text<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;SingleBand&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Mode<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/>mode_text.text<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;DualBand&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Mode<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/>mode_text.text<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;VelObs&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Mode<sp/>==<sp/>2)</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/>mode_text.text<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Backoff&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Mode<sp/>==<sp/>3)</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/>mode_text.text<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;PassingThrough&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Mode<sp/>==<sp/>4)</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/>mode_text.text<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;ApproachingPillar&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Mode<sp/>==<sp/>5)</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/>mode_text.text<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;ApproachingGoal&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/>mode_text.text<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;No<sp/>Mode<sp/>yet&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/>mode_text.scale.x<sp/>=<sp/>10.0;</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/>mode_text.scale.y<sp/>=<sp/>10.0;</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/>mode_text.scale.z<sp/>=<sp/>0.3;</highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>color<sp/>--<sp/>be<sp/>sure<sp/>to<sp/>set<sp/>alpha<sp/>to<sp/>something<sp/>non-zero!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/>mode_text.color.r<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/>mode_text.color.g<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/>mode_text.color.b<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/>mode_text.color.a<sp/>=<sp/>0.9;</highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/>mode_text.lifetime<sp/>=<sp/>ros::Duration(2.0);</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/>mode_text_pub_.publish(mode_text);</highlight></codeline>
<codeline lineno="642"><highlight class="normal">}</highlight></codeline>
<codeline lineno="643"><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TebVisualization::publishTrackedAgents(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cohan_msgs::TrackedAgentsConstPtr<sp/>&amp;<ref refid="namespaceagents" kindref="compound">agents</ref>)<sp/>{</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/>visualization_msgs::MarkerArray<sp/>marker_arr;</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/>visualization_msgs::MarkerArray<sp/>arrow_arr;</highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;agent<sp/>:<sp/><ref refid="namespaceagents" kindref="compound">agents</ref>-&gt;agents)<sp/>{</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/>visualization_msgs::Marker<sp/>marker;</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/>visualization_msgs::Marker<sp/>arrow;</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>frame<sp/>ID<sp/>and<sp/>timestamp.<sp/><sp/>See<sp/>the<sp/>TF<sp/>tutorials<sp/>for<sp/>information<sp/>on<sp/>these.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/>marker.header.frame_id<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;map&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/>marker.header.stamp<sp/>=<sp/>ros::Time::now();</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/>arrow.header.frame_id<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;map&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/>arrow.header.stamp<sp/>=<sp/>ros::Time::now();</highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>segment<sp/>:<sp/>agent.segments)<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>namespace<sp/>and<sp/>id<sp/>for<sp/>this<sp/>marker.<sp/><sp/>This<sp/>serves<sp/>to<sp/>create<sp/>a<sp/>unique<sp/>ID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Any<sp/>marker<sp/>sent<sp/>with<sp/>the<sp/>same<sp/>namespace<sp/>and<sp/>id<sp/>will<sp/>overwrite<sp/>the<sp/>old<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>marker.ns<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;body&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>marker.id<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>arrow.ns<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;direction&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>arrow.id<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="664"><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>marker<sp/>type.<sp/><sp/>Initially<sp/>this<sp/>is<sp/>CUBE,<sp/>and<sp/>cycles<sp/>between<sp/>that<sp/>and<sp/>SPHERE,<sp/>ARROW,<sp/>and<sp/>CYLINDER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>marker.type<sp/>=<sp/>visualization_msgs::Marker::CYLINDER;</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>arrow.type<sp/>=<sp/>visualization_msgs::Marker::ARROW;</highlight></codeline>
<codeline lineno="668"><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>marker<sp/>action.<sp/><sp/>Options<sp/>are<sp/>ADD,<sp/>DELETE,<sp/>and<sp/>new<sp/>in<sp/>ROS<sp/>Indigo:<sp/>3<sp/>(DELETEALL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>marker.action<sp/>=<sp/>visualization_msgs::Marker::ADD;</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>arrow.action<sp/>=<sp/>visualization_msgs::Marker::ADD;</highlight></codeline>
<codeline lineno="672"><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>pose<sp/>of<sp/>the<sp/>marker.<sp/><sp/>This<sp/>is<sp/>a<sp/>full<sp/>6DOF<sp/>pose<sp/>relative<sp/>to<sp/>the<sp/>frame/time<sp/>specified<sp/>in<sp/>the<sp/>header</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>marker.pose.position.x<sp/>=<sp/>segment.pose.pose.position.x;</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>marker.pose.position.y<sp/>=<sp/>segment.pose.pose.position.y;</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>marker.pose.position.z<sp/>=<sp/>0.9;</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>marker.pose.orientation<sp/>=<sp/>segment.pose.pose.orientation;</highlight></codeline>
<codeline lineno="678"><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>arrow.pose.position.x<sp/>=<sp/>segment.pose.pose.position.x;</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>arrow.pose.position.y<sp/>=<sp/>segment.pose.pose.position.y;</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>arrow.pose.position.z<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>arrow.pose.orientation<sp/>=<sp/>segment.pose.pose.orientation;</highlight></codeline>
<codeline lineno="683"><highlight class="normal"></highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>scale<sp/>of<sp/>the<sp/>marker<sp/>--<sp/>1x1x1<sp/>here<sp/>means<sp/>1m<sp/>on<sp/>a<sp/>side</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>marker.scale.x<sp/>=<sp/>0.6;</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>marker.scale.y<sp/>=<sp/>0.6;</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>marker.scale.z<sp/>=<sp/>1.8;</highlight></codeline>
<codeline lineno="688"><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>arrow.scale.x<sp/>=<sp/>0.8;</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>arrow.scale.y<sp/>=<sp/>0.05;</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>arrow.scale.z<sp/>=<sp/>0.05;</highlight></codeline>
<codeline lineno="692"><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>color<sp/>--<sp/>be<sp/>sure<sp/>to<sp/>set<sp/>alpha<sp/>to<sp/>something<sp/>non-zero!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>marker.color.r<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>marker.color.g<sp/>=<sp/>1.0f;</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>marker.color.b<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>marker.color.a<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="698"><highlight class="normal"></highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>arrow.color.r<sp/>=<sp/>1.0f;</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>arrow.color.g<sp/>=<sp/>1.0f;</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>arrow.color.b<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>arrow.color.a<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="703"><highlight class="normal"></highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>marker.lifetime<sp/>=<sp/>ros::Duration(2.0);</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>arrow.lifetime<sp/>=<sp/>ros::Duration(2.0);</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>marker_arr.markers.push_back(marker);</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>arrow_arr.markers.push_back(arrow);</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/>agent_marker_pub_.publish(marker_arr);</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/>agent_arrow_pub_.publish(arrow_arr);</highlight></codeline>
<codeline lineno="713"><highlight class="normal">}</highlight></codeline>
<codeline lineno="714"><highlight class="normal"></highlight></codeline>
<codeline lineno="715"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TebVisualization::setMarkerColour(visualization_msgs::Marker<sp/>&amp;marker,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>itr,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>n)<sp/>{</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>N<sp/>=<sp/>n<sp/>/<sp/>11;</highlight></codeline>
<codeline lineno="717"><highlight class="normal"></highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(itr<sp/>&gt;=<sp/>N<sp/>&amp;&amp;<sp/>itr<sp/>&lt;<sp/>3<sp/>*<sp/>N)<sp/>{</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/>marker.color.r<sp/>=<sp/>(3<sp/>*<sp/>N<sp/>-<sp/>itr)<sp/>/<sp/>(2<sp/>*<sp/>N);</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/>marker.color.g<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/>marker.color.b<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(itr<sp/>&gt;=<sp/>3<sp/>*<sp/>N<sp/>&amp;&amp;<sp/>itr<sp/>&lt;<sp/>5<sp/>*<sp/>N)<sp/>{</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/>marker.color.r<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/>marker.color.g<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/>marker.color.b<sp/>=<sp/>(itr<sp/>-<sp/>3<sp/>*<sp/>N)<sp/>/<sp/>(2<sp/>*<sp/>N);</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(itr<sp/>&gt;=<sp/>5<sp/>*<sp/>N<sp/>&amp;&amp;<sp/>itr<sp/>&lt;<sp/>7<sp/>*<sp/>N)<sp/>{</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/>marker.color.r<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/>marker.color.g<sp/>=<sp/>(7<sp/>*<sp/>N<sp/>-<sp/>itr)<sp/>/<sp/>(2<sp/>*<sp/>N);</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/>marker.color.b<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(itr<sp/>&gt;=<sp/>7<sp/>*<sp/>N<sp/>&amp;&amp;<sp/>itr<sp/>&lt;<sp/>9<sp/>*<sp/>N)<sp/>{</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/>marker.color.r<sp/>=<sp/>(itr<sp/>-<sp/>7<sp/>*<sp/>N)<sp/>/<sp/>(2<sp/>*<sp/>N);</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/>marker.color.g<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/>marker.color.b<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(itr<sp/>&gt;=<sp/>9<sp/>*<sp/>N<sp/>&amp;&amp;<sp/>itr<sp/>&lt;=<sp/>n)<sp/>{</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/>marker.color.r<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/>marker.color.g<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/>marker.color.b<sp/>=<sp/>(11<sp/>*<sp/>N<sp/>-<sp/>itr)<sp/>/<sp/>(2<sp/>*<sp/>N);</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="739"><highlight class="normal">}</highlight></codeline>
<codeline lineno="740"><highlight class="normal"></highlight></codeline>
<codeline lineno="741"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TebVisualization::publishRobotFootprintModel(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>PoseSE2<sp/>&amp;current_pose,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BaseFootprintModel<sp/>&amp;robot_model,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;ns,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std_msgs::ColorRGBA<sp/>&amp;color)<sp/>{</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(printErrorWhenNotInitialized())<sp/>{</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="745"><highlight class="normal"></highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/>std::vector&lt;visualization_msgs::Marker&gt;<sp/>markers;</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/>robot_model.visualizeModel(current_pose,<sp/>markers,<sp/>color);</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(markers.empty())<sp/>{</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="751"><highlight class="normal"></highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx<sp/>=<sp/>1000000;<sp/><sp/></highlight><highlight class="comment">//<sp/>avoid<sp/>overshadowing<sp/>by<sp/>obstacles</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>marker_it<sp/>=<sp/>markers.begin();<sp/>marker_it<sp/>!=<sp/>markers.end();<sp/>++marker_it,<sp/>++idx)<sp/>{</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/>marker_it-&gt;header.frame_id<sp/>=<sp/>cfg_-&gt;map_frame;</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/>marker_it-&gt;header.stamp<sp/>=<sp/>ros::Time::now();</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/>marker_it-&gt;action<sp/>=<sp/>visualization_msgs::Marker::ADD;</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/>marker_it-&gt;ns<sp/>=<sp/>ns;</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/>marker_it-&gt;id<sp/>=<sp/>idx;</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/>marker_it-&gt;lifetime<sp/>=<sp/>ros::Duration(2.0);</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/>teb_marker_pub_.publish(*marker_it);</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="762"><highlight class="normal">}</highlight></codeline>
<codeline lineno="763"><highlight class="normal"></highlight></codeline>
<codeline lineno="764"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TebVisualization::publishInfeasibleRobotPose(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>PoseSE2<sp/>&amp;current_pose,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BaseFootprintModel<sp/>&amp;robot_model)<sp/>{</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/>publishRobotFootprintModel(current_pose,<sp/>robot_model,<sp/></highlight><highlight class="stringliteral">&quot;InfeasibleRobotPoses&quot;</highlight><highlight class="normal">,<sp/>toColorMsg(0.5,<sp/>0.8,<sp/>0.0,<sp/>0.0));</highlight></codeline>
<codeline lineno="766"><highlight class="normal">}</highlight></codeline>
<codeline lineno="767"><highlight class="normal"></highlight></codeline>
<codeline lineno="768"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TebVisualization::publishObstacles(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacehateb__local__planner_1aa2fd52c70b6b2295dc138647919ea794" kindref="member">ObstContainer</ref><sp/>&amp;obstacles)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(obstacles.empty()<sp/>||<sp/>printErrorWhenNotInitialized())<sp/>{</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="772"><highlight class="normal"></highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Visualize<sp/>point<sp/>obstacles</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/>visualization_msgs::Marker<sp/>marker;</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/>marker.header.frame_id<sp/>=<sp/>cfg_-&gt;map_frame;</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/>marker.header.stamp<sp/>=<sp/>ros::Time::now();</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/>marker.ns<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;PointObstacles&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/>marker.id<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/>marker.type<sp/>=<sp/>visualization_msgs::Marker::POINTS;</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/>marker.action<sp/>=<sp/>visualization_msgs::Marker::ADD;</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/>marker.lifetime<sp/>=<sp/>ros::Duration(2.0);</highlight></codeline>
<codeline lineno="783"><highlight class="normal"></highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;obstacle<sp/>:<sp/>obstacles)<sp/>{</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>boost::shared_ptr&lt;PointObstacle&gt;<sp/>pobst<sp/>=<sp/>boost::dynamic_pointer_cast&lt;PointObstacle&gt;(obstacle);</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pobst)<sp/>{</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="789"><highlight class="normal"></highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cfg_-&gt;trajectory.visualize_with_time_as_z_axis_scale<sp/>&lt;<sp/>0.001)<sp/>{</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceinvisible__humans__detection_1ac0e57bfc66ce6a431f5c889b6b1bd52c" kindref="member">geometry_msgs::Point</ref><sp/>point;</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>point.x<sp/>=<sp/>pobst-&gt;x();</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>point.y<sp/>=<sp/>pobst-&gt;y();</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>point.z<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>marker.points.push_back(point);</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Spatiotemporally<sp/>point<sp/>obstacles<sp/>become<sp/>a<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>marker.type<sp/>=<sp/>visualization_msgs::Marker::LINE_LIST;</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceinvisible__humans__detection_1ac0e57bfc66ce6a431f5c889b6b1bd52c" kindref="member">geometry_msgs::Point</ref><sp/>start;</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start.x<sp/>=<sp/>pobst-&gt;x();</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start.y<sp/>=<sp/>pobst-&gt;y();</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start.z<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>marker.points.push_back(start);</highlight></codeline>
<codeline lineno="804"><highlight class="normal"></highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceinvisible__humans__detection_1ac0e57bfc66ce6a431f5c889b6b1bd52c" kindref="member">geometry_msgs::Point</ref><sp/>end;</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t<sp/>=<sp/>20;</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::Vector2d<sp/>pred;</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pobst-&gt;predictCentroidConstantVelocity(t,<sp/>pred);</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end.x<sp/>=<sp/>pred[0];</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end.y<sp/>=<sp/>pred[1];</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end.z<sp/>=<sp/>cfg_-&gt;trajectory.visualize_with_time_as_z_axis_scale<sp/>*<sp/>t;</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>marker.points.push_back(end);</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="815"><highlight class="normal"></highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/>marker.scale.x<sp/>=<sp/>0.1;</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/>marker.scale.y<sp/>=<sp/>0.1;</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/>marker.color.a<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/>marker.color.r<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/>marker.color.g<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/>marker.color.b<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="822"><highlight class="normal"></highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/>teb_marker_pub_.publish(marker);</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="825"><highlight class="normal"></highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Visualize<sp/>line<sp/>obstacles</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/>std::size_t<sp/>idx<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;obstacle<sp/>:<sp/>obstacles)<sp/>{</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>boost::shared_ptr&lt;LineObstacle&gt;<sp/>pobst<sp/>=<sp/>boost::dynamic_pointer_cast&lt;LineObstacle&gt;(obstacle);</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pobst)<sp/>{</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="834"><highlight class="normal"></highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>visualization_msgs::Marker<sp/>marker;</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>marker.header.frame_id<sp/>=<sp/>cfg_-&gt;map_frame;</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>marker.header.stamp<sp/>=<sp/>ros::Time::now();</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>marker.ns<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;LineObstacles&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>marker.id<sp/>=<sp/>idx++;</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>marker.type<sp/>=<sp/>visualization_msgs::Marker::LINE_STRIP;</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>marker.action<sp/>=<sp/>visualization_msgs::Marker::ADD;</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>marker.lifetime<sp/>=<sp/>ros::Duration(2.0);</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceinvisible__humans__detection_1ac0e57bfc66ce6a431f5c889b6b1bd52c" kindref="member">geometry_msgs::Point</ref><sp/>start;</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>start.x<sp/>=<sp/>pobst-&gt;start().x();</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>start.y<sp/>=<sp/>pobst-&gt;start().y();</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>start.z<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>marker.points.push_back(start);</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceinvisible__humans__detection_1ac0e57bfc66ce6a431f5c889b6b1bd52c" kindref="member">geometry_msgs::Point</ref><sp/>end;</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>end.x<sp/>=<sp/>pobst-&gt;end().x();</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>end.y<sp/>=<sp/>pobst-&gt;end().y();</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>end.z<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>marker.points.push_back(end);</highlight></codeline>
<codeline lineno="853"><highlight class="normal"></highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>marker.scale.x<sp/>=<sp/>0.1;</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>marker.scale.y<sp/>=<sp/>0.1;</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>marker.color.a<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>marker.color.r<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>marker.color.g<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>marker.color.b<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="860"><highlight class="normal"></highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>teb_marker_pub_.publish(marker);</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="864"><highlight class="normal"></highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Visualize<sp/>polygon<sp/>obstacles</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/>std::size_t<sp/>idx<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;obstacle<sp/>:<sp/>obstacles)<sp/>{</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>boost::shared_ptr&lt;PolygonObstacle&gt;<sp/>pobst<sp/>=<sp/>boost::dynamic_pointer_cast&lt;PolygonObstacle&gt;(obstacle);</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pobst)<sp/>{</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="873"><highlight class="normal"></highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>visualization_msgs::Marker<sp/>marker;</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>marker.header.frame_id<sp/>=<sp/>cfg_-&gt;map_frame;</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>marker.header.stamp<sp/>=<sp/>ros::Time::now();</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>marker.ns<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;PolyObstacles&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>marker.id<sp/>=<sp/>idx++;</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>marker.type<sp/>=<sp/>visualization_msgs::Marker::LINE_STRIP;</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>marker.action<sp/>=<sp/>visualization_msgs::Marker::ADD;</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>marker.lifetime<sp/>=<sp/>ros::Duration(2.0);</highlight></codeline>
<codeline lineno="882"><highlight class="normal"></highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;vertex<sp/>:<sp/>pobst-&gt;vertices())<sp/>{</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceinvisible__humans__detection_1ac0e57bfc66ce6a431f5c889b6b1bd52c" kindref="member">geometry_msgs::Point</ref><sp/>point;</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>point.x<sp/>=<sp/>vertex.x();</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>point.y<sp/>=<sp/>vertex.y();</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>point.z<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>marker.points.push_back(point);</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="890"><highlight class="normal"></highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Also<sp/>add<sp/>last<sp/>point<sp/>to<sp/>close<sp/>the<sp/>polygon</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>only<sp/>if<sp/>polygon<sp/>has<sp/>more<sp/>than<sp/>2<sp/>points<sp/>(it<sp/>is<sp/>not<sp/>a<sp/>line)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pobst-&gt;vertices().size()<sp/>&gt;<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceinvisible__humans__detection_1ac0e57bfc66ce6a431f5c889b6b1bd52c" kindref="member">geometry_msgs::Point</ref><sp/>point;</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>point.x<sp/>=<sp/>pobst-&gt;vertices().front().x();</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>point.y<sp/>=<sp/>pobst-&gt;vertices().front().y();</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>point.z<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>marker.points.push_back(point);</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>marker.scale.x<sp/>=<sp/>0.1;</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>marker.scale.y<sp/>=<sp/>0.1;</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>marker.color.a<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>marker.color.r<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>marker.color.g<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>marker.color.b<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="906"><highlight class="normal"></highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>teb_marker_pub_.publish(marker);</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="910"><highlight class="normal">}</highlight></codeline>
<codeline lineno="911"><highlight class="normal"></highlight></codeline>
<codeline lineno="912"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TebVisualization::publishViaPoints(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;Eigen::Vector2d,<sp/>Eigen::aligned_allocator&lt;Eigen::Vector2d&gt;<sp/>&gt;<sp/>&amp;via_points,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;ns)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(via_points.empty()<sp/>||<sp/>printErrorWhenNotInitialized())<sp/>{</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="916"><highlight class="normal"></highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/>visualization_msgs::Marker<sp/>marker;</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/>marker.header.frame_id<sp/>=<sp/>cfg_-&gt;map_frame;</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/>marker.header.stamp<sp/>=<sp/>ros::Time::now();</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/>marker.ns<sp/>=<sp/>ns;</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/>marker.id<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/>marker.type<sp/>=<sp/>visualization_msgs::Marker::POINTS;</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/>marker.action<sp/>=<sp/>visualization_msgs::Marker::ADD;</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/>marker.lifetime<sp/>=<sp/>ros::Duration(2.0);</highlight></codeline>
<codeline lineno="925"><highlight class="normal"></highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;via_point<sp/>:<sp/>via_points)<sp/>{</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceinvisible__humans__detection_1ac0e57bfc66ce6a431f5c889b6b1bd52c" kindref="member">geometry_msgs::Point</ref><sp/>point;</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/>point.x<sp/>=<sp/>via_point.x();</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/>point.y<sp/>=<sp/>via_point.y();</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/>point.z<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/>marker.points.push_back(point);</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="933"><highlight class="normal"></highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/>marker.scale.x<sp/>=<sp/>0.1;</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/>marker.scale.y<sp/>=<sp/>0.1;</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/>marker.color.a<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/>marker.color.r<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/>marker.color.g<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/>marker.color.b<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="940"><highlight class="normal"></highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/>teb_marker_pub_.publish(marker);</highlight></codeline>
<codeline lineno="942"><highlight class="normal">}</highlight></codeline>
<codeline lineno="943"><highlight class="normal"></highlight></codeline>
<codeline lineno="944"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TebVisualization::publishTebContainer(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacehateb__local__planner_1acab4e8f2d06fd4a9d51fa1d7dccdf60b" kindref="member">TebOptPlannerContainer</ref><sp/>&amp;teb_planner,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;ns)<sp/>{</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(printErrorWhenNotInitialized())<sp/>{</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="948"><highlight class="normal"></highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/>visualization_msgs::Marker<sp/>marker;</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/>marker.header.frame_id<sp/>=<sp/>cfg_-&gt;map_frame;</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/>marker.header.stamp<sp/>=<sp/>ros::Time::now();</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/>marker.ns<sp/>=<sp/>ns;</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/>marker.id<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/>marker.type<sp/>=<sp/>visualization_msgs::Marker::LINE_LIST;</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/>marker.action<sp/>=<sp/>visualization_msgs::Marker::ADD;</highlight></codeline>
<codeline lineno="956"><highlight class="normal"></highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Iterate<sp/>through<sp/>teb<sp/>pose<sp/>sequence</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;it_teb<sp/>:<sp/>teb_planner)<sp/>{</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>iterate<sp/>single<sp/>poses</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it_pose<sp/>=<sp/>it_teb-&gt;teb().poses().begin();</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it_timediff<sp/>=<sp/>it_teb-&gt;teb().timediffs().begin();</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it_pose_end<sp/>=<sp/>it_teb-&gt;teb().poses().end();</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/>std::advance(it_pose_end,<sp/>-1);<sp/><sp/></highlight><highlight class="comment">//<sp/>since<sp/>we<sp/>are<sp/>interested<sp/>in<sp/>line<sp/>segments,<sp/>reduce<sp/>end<sp/>iterator<sp/>by<sp/>one.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>time<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="965"><highlight class="normal"></highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(it_pose<sp/>!=<sp/>it_pose_end)<sp/>{</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceinvisible__humans__detection_1ac0e57bfc66ce6a431f5c889b6b1bd52c" kindref="member">geometry_msgs::Point</ref><sp/>point_start;</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>point_start.x<sp/>=<sp/>(*it_pose)-&gt;x();</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>point_start.y<sp/>=<sp/>(*it_pose)-&gt;y();</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>point_start.z<sp/>=<sp/>cfg_-&gt;trajectory.visualize_with_time_as_z_axis_scale<sp/>*<sp/>time;</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>marker.points.push_back(point_start);</highlight></codeline>
<codeline lineno="972"><highlight class="normal"></highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>time<sp/>+=<sp/>(*it_timediff)-&gt;dt();</highlight></codeline>
<codeline lineno="974"><highlight class="normal"></highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceinvisible__humans__detection_1ac0e57bfc66ce6a431f5c889b6b1bd52c" kindref="member">geometry_msgs::Point</ref><sp/>point_end;</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>point_end.x<sp/>=<sp/>(*boost::next(it_pose))-&gt;x();</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>point_end.y<sp/>=<sp/>(*boost::next(it_pose))-&gt;y();</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>point_end.z<sp/>=<sp/>cfg_-&gt;trajectory.visualize_with_time_as_z_axis_scale<sp/>*<sp/>time;</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>marker.points.push_back(point_end);</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++it_pose;</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++it_timediff;</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/>marker.scale.x<sp/>=<sp/>0.01;</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/>marker.color.a<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/>marker.color.r<sp/>=<sp/>0.5;</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/>marker.color.g<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/>marker.color.b<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="989"><highlight class="normal"></highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/>teb_marker_pub_.publish(marker);</highlight></codeline>
<codeline lineno="991"><highlight class="normal">}</highlight></codeline>
<codeline lineno="992"><highlight class="normal"></highlight></codeline>
<codeline lineno="993"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TebVisualization::publishFeedbackMessage(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;boost::shared_ptr&lt;TebOptimalPlanner&gt;<sp/>&gt;<sp/>&amp;teb_planners,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>selected_trajectory_idx,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacehateb__local__planner_1aa2fd52c70b6b2295dc138647919ea794" kindref="member">ObstContainer</ref><sp/>&amp;obstacles)<sp/>{</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/>FeedbackMsg<sp/>msg;</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/>msg.header.stamp<sp/>=<sp/>ros::Time::now();</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/>msg.header.frame_id<sp/>=<sp/>cfg_-&gt;map_frame;</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/>msg.selected_trajectory_idx<sp/>=<sp/>selected_trajectory_idx;</highlight></codeline>
<codeline lineno="998"><highlight class="normal"></highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/>msg.trajectories.resize(teb_planners.size());</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"></highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Iterate<sp/>through<sp/>teb<sp/>pose<sp/>sequence</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/>std::size_t<sp/>idx_traj<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it_teb<sp/>=<sp/>teb_planners.begin();<sp/>it_teb<sp/>!=<sp/>teb_planners.end();<sp/>++it_teb,<sp/>++idx_traj)<sp/>{</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/>msg.trajectories[idx_traj]<sp/>=<sp/>it_teb-&gt;get()-&gt;getFullTrajectory();</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"></highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>obstacles</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/>msg.obstacles_msg.obstacles.resize(obstacles.size());</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::size_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>obstacles.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/>msg.obstacles_msg.header<sp/>=<sp/>msg.header;</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"></highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>copy<sp/>polygon</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/>msg.obstacles_msg.obstacles[i].header<sp/>=<sp/>msg.header;</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/>obstacles[i]-&gt;toPolygonMsg(msg.obstacles_msg.obstacles[i].polygon);</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"></highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>copy<sp/>id</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/>msg.obstacles_msg.obstacles[i].id<sp/>=<sp/>i;<sp/><sp/></highlight><highlight class="comment">//<sp/>TODO(unknown):<sp/>we<sp/>do<sp/>not<sp/>have<sp/>any<sp/>id<sp/>stored<sp/>yet</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1018"><highlight class="normal"></highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>orientation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>msg.obstacles_msg.obstacles[i].orientation<sp/>=;<sp/>//<sp/>TODO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1021"><highlight class="normal"></highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>copy<sp/>velocities</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/>obstacles[i]-&gt;toTwistWithCovarianceMsg(msg.obstacles_msg.obstacles[i].velocities);</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"></highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/>feedback_pub_.publish(msg);</highlight></codeline>
<codeline lineno="1027"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"></highlight></codeline>
<codeline lineno="1029"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TebVisualization::publishFeedbackMessage(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TebOptimalPlanner<sp/>&amp;teb_planner,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacehateb__local__planner_1aa2fd52c70b6b2295dc138647919ea794" kindref="member">ObstContainer</ref><sp/>&amp;obstacles)<sp/>{</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/>FeedbackMsg<sp/>msg;</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/>msg.header.stamp<sp/>=<sp/>ros::Time::now();</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/>msg.header.frame_id<sp/>=<sp/>cfg_-&gt;map_frame;</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/>msg.selected_trajectory_idx<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"></highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/>msg.trajectories.resize(1);</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/>msg.trajectories.front()<sp/>=<sp/>teb_planner.getFullTrajectory();</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"></highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>obstacles</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/>msg.obstacles_msg.obstacles.resize(obstacles.size());</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::size_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>obstacles.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/>msg.obstacles_msg.header<sp/>=<sp/>msg.header;</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"></highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>copy<sp/>polygon</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/>msg.obstacles_msg.obstacles[i].header<sp/>=<sp/>msg.header;</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/>obstacles[i]-&gt;toPolygonMsg(msg.obstacles_msg.obstacles[i].polygon);</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"></highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>copy<sp/>id</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/>msg.obstacles_msg.obstacles[i].id<sp/>=<sp/>i;<sp/><sp/></highlight><highlight class="comment">//<sp/>TODO(unknown):<sp/>we<sp/>do<sp/>not<sp/>have<sp/>any<sp/>id<sp/>stored<sp/>yet</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1049"><highlight class="normal"></highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>orientation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>msg.obstacles_msg.obstacles[i].orientation<sp/>=;<sp/>//<sp/>TODO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1052"><highlight class="normal"></highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>copy<sp/>velocities</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/>obstacles[i]-&gt;toTwistWithCovarianceMsg(msg.obstacles_msg.obstacles[i].velocities);</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"></highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/>feedback_pub_.publish(msg);</highlight></codeline>
<codeline lineno="1058"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"></highlight></codeline>
<codeline lineno="1060"><highlight class="normal">std_msgs::ColorRGBA<sp/>TebVisualization::toColorMsg(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>r,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>g,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/>std_msgs::ColorRGBA<sp/>color;</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/>color.a<sp/>=<sp/>a;</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/>color.r<sp/>=<sp/>r;</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/>color.g<sp/>=<sp/>g;</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/>color.b<sp/>=<sp/>b;</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>color;</highlight></codeline>
<codeline lineno="1067"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"></highlight></codeline>
<codeline lineno="1069"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>TebVisualization::printErrorWhenNotInitialized()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!initialized_)<sp/>{</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/>ROS_ERROR(</highlight><highlight class="stringliteral">&quot;TebVisualization<sp/>class<sp/>not<sp/>initialized.<sp/>You<sp/>must<sp/>call<sp/>initialize<sp/>or<sp/>an<sp/>appropriate<sp/>constructor&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1075"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"></highlight></codeline>
<codeline lineno="1077"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TebVisualization::clearingTimerCB(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ros::TimerEvent<sp/>&amp;event)<sp/>{</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((last_publish_robot_global_plan_<sp/>!=<sp/>cfg_-&gt;visualization.publish_robot_global_plan)<sp/>&amp;&amp;<sp/>!cfg_-&gt;visualization.publish_robot_global_plan)<sp/>{</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>clear<sp/>robot<sp/>global<sp/>plans</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/>nav_msgs::Path<sp/>empty_path;</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/>empty_path.header.stamp<sp/>=<sp/>ros::Time::now();</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/>empty_path.header.frame_id<sp/>=<sp/>cfg_-&gt;map_frame;</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/>global_plan_pub_.publish(empty_path);</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/>last_publish_robot_global_plan_<sp/>=<sp/>cfg_-&gt;visualization.publish_robot_global_plan;</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"></highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((last_publish_robot_local_plan_<sp/>!=<sp/>cfg_-&gt;visualization.publish_robot_local_plan)<sp/>&amp;&amp;<sp/>!cfg_-&gt;visualization.publish_robot_local_plan)<sp/>{</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>clear<sp/>robot<sp/>local<sp/>plans</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/>nav_msgs::Path<sp/>empty_path;</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/>cohan_msgs::TrajectoryStamped<sp/>empty_traj;</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/>empty_path.header.stamp<sp/>=<sp/>ros::Time::now();</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/>empty_path.header.frame_id<sp/>=<sp/>cfg_-&gt;map_frame;</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/>local_plan_pub_.publish(empty_path);</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/>local_traj_pub_.publish(empty_traj);</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/>last_publish_robot_local_plan_<sp/>=<sp/>cfg_-&gt;visualization.publish_robot_local_plan;</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"></highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((last_publish_robot_local_plan_poses_<sp/>!=<sp/>cfg_-&gt;visualization.publish_robot_local_plan_poses)<sp/>&amp;&amp;<sp/>!cfg_-&gt;visualization.publish_robot_local_plan_poses)<sp/>{</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>clear<sp/>robot<sp/>local<sp/>plan<sp/>poses</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/>geometry_msgs::PoseArray<sp/>empty_pose_array;</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/>empty_pose_array.header.stamp<sp/>=<sp/>ros::Time::now();</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/>empty_pose_array.header.frame_id<sp/>=<sp/>cfg_-&gt;map_frame;</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/>teb_poses_pub_.publish(empty_pose_array);</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/>last_publish_robot_local_plan_poses_<sp/>=<sp/>cfg_-&gt;visualization.publish_robot_local_plan_poses;</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"></highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((last_publish_robot_local_plan_fp_poses_<sp/>!=<sp/>cfg_-&gt;visualization.publish_robot_local_plan_fp_poses)<sp/>&amp;&amp;<sp/>!cfg_-&gt;visualization.publish_robot_local_plan_fp_poses)<sp/>{</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>clear<sp/>robot<sp/>local<sp/>plan<sp/>fp<sp/>poses</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/>visualization_msgs::Marker<sp/>clean_fp_poses;</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/>clean_fp_poses.header.frame_id<sp/>=<sp/>cfg_-&gt;map_frame;</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/>clean_fp_poses.header.stamp<sp/>=<sp/>ros::Time::now();</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/>clean_fp_poses.action<sp/>=<sp/>3;<sp/><sp/></highlight><highlight class="comment">//<sp/>visualization_msgs::Marker::DELETEALL;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/>clean_fp_poses.ns<sp/>=<sp/><ref refid="visualization_8cpp_1a014f7df82a47e3708cc6f614d1a499b9" kindref="member">ROBOT_FP_POSES_NS</ref>;</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/>visualization_msgs::MarkerArray<sp/>clean_fp_poses_array;</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/>clean_fp_poses_array.markers.push_back(clean_fp_poses);</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/>teb_fp_poses_pub_.publish(clean_fp_poses_array);</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/>last_publish_robot_local_plan_fp_poses_<sp/>=<sp/>cfg_-&gt;visualization.publish_robot_local_plan_fp_poses;</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"></highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((last_publish_agents_global_plans_<sp/>!=<sp/>cfg_-&gt;visualization.publish_agents_global_plans)<sp/>&amp;&amp;<sp/>!cfg_-&gt;visualization.publish_agents_global_plans)<sp/>{</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>clear<sp/>agent<sp/>global<sp/>plans</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/>cohan_msgs::AgentPathArray<sp/>empty_path_array;</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/>empty_path_array.header.stamp<sp/>=<sp/>ros::Time::now();</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/>empty_path_array.header.frame_id<sp/>=<sp/>cfg_-&gt;map_frame;</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/>agents_global_plans_pub_.publish(empty_path_array);</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/>last_publish_agents_global_plans_<sp/>=<sp/>cfg_-&gt;visualization.publish_agents_global_plans;</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"></highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((last_publish_agents_local_plans_<sp/>!=<sp/>cfg_-&gt;visualization.publish_agents_local_plans)<sp/>&amp;&amp;<sp/>!cfg_-&gt;visualization.publish_agents_local_plans)<sp/>{</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>clear<sp/>agent<sp/>local<sp/>plans</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/>cohan_msgs::AgentTrajectoryArray<sp/>empty_trajectory_array;</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>empty_trajectory_array.header.stamp<sp/>=<sp/>ros::Time::now();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>empty_trajectory_array.header.frame_id<sp/>=<sp/>cfg_-&gt;map_frame;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/>agents_local_plans_pub_.publish(empty_trajectory_array);</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/>last_publish_agents_local_plans_<sp/>=<sp/>cfg_-&gt;visualization.publish_agents_local_plans;</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"></highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((last_publish_agents_local_plan_poses_<sp/>!=<sp/>cfg_-&gt;visualization.publish_agents_local_plan_poses)<sp/>&amp;&amp;<sp/>!cfg_-&gt;visualization.publish_agents_local_plan_poses)<sp/>{</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>clear<sp/>agent<sp/>local<sp/>plan<sp/>poses</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/>geometry_msgs::PoseArray<sp/>empty_pose_array;</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/>empty_pose_array.header.stamp<sp/>=<sp/>ros::Time::now();</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/>empty_pose_array.header.frame_id<sp/>=<sp/>cfg_-&gt;map_frame;</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/>agents_tebs_poses_pub_.publish(empty_pose_array);</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/>last_publish_agents_local_plan_poses_<sp/>=<sp/>cfg_-&gt;visualization.publish_agents_local_plan_poses;</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"></highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((last_publish_agents_local_plan_fp_poses_<sp/>!=<sp/>cfg_-&gt;visualization.publish_agents_local_plan_fp_poses)<sp/>&amp;&amp;<sp/>!cfg_-&gt;visualization.publish_agents_local_plan_fp_poses)<sp/>{</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>clear<sp/>agent<sp/>local<sp/>plan<sp/>fp<sp/>poses</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/>visualization_msgs::Marker<sp/>clean_fp_poses;</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/>clean_fp_poses.header.frame_id<sp/>=<sp/>cfg_-&gt;map_frame;</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/>clean_fp_poses.header.stamp<sp/>=<sp/>ros::Time::now();</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/>clean_fp_poses.action<sp/>=<sp/>3;<sp/><sp/></highlight><highlight class="comment">//<sp/>visualization_msgs::Marker::DELETEALL;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/><sp/>clean_fp_poses.ns<sp/>=<sp/><ref refid="visualization_8cpp_1a4116983fa64e0d7c537fde9032e450f5" kindref="member">AGENT_FP_POSES_NS</ref>;</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/>visualization_msgs::MarkerArray<sp/>clean_fp_poses_array;</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/>clean_fp_poses_array.markers.push_back(clean_fp_poses);</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/>agents_tebs_fp_poses_pub_.publish(clean_fp_poses_array);</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/>last_publish_agents_local_plan_fp_poses_<sp/>=<sp/>cfg_-&gt;visualization.publish_agents_local_plan_fp_poses;</highlight></codeline>
<codeline lineno="1159"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"></highlight></codeline>
<codeline lineno="1161"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>hateb_local_planner</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/ptsingaman/ros_ws/CoHAN2.0/src/hateb_local_planner/src/visualization.cpp"/>
  </compounddef>
</doxygen>
