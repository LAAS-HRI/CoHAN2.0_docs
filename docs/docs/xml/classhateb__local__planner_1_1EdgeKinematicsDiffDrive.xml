<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classhateb__local__planner_1_1EdgeKinematicsDiffDrive" kind="class" language="C++" prot="public">
    <compoundname>hateb_local_planner::EdgeKinematicsDiffDrive</compoundname>
    <basecompoundref refid="classhateb__local__planner_1_1BaseTebBinaryEdge" prot="public" virt="non-virtual">hateb_local_planner::BaseTebBinaryEdge&lt; 2, double, VertexPose, VertexPose &gt;</basecompoundref>
    <includes refid="edge__kinematics_8h" local="no">edge_kinematics.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classhateb__local__planner_1_1EdgeKinematicsDiffDrive_1abde47d9274d2c3e0e3244f484fb2c18e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>hateb_local_planner::EdgeKinematicsDiffDrive::EdgeKinematicsDiffDrive</definition>
        <argsstring>()</argsstring>
        <name>EdgeKinematicsDiffDrive</name>
        <briefdescription>
<para>Construct edge. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hateb_local_planner/include/hateb_local_planner/g2o_types/edge_kinematics.h" line="77" column="3" bodyfile="hateb_local_planner/include/hateb_local_planner/g2o_types/edge_kinematics.h" bodystart="77" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="classhateb__local__planner_1_1EdgeKinematicsDiffDrive_1a4ee5a8e0e3146c3e4d2c4361f6d361c4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void hateb_local_planner::EdgeKinematicsDiffDrive::computeError</definition>
        <argsstring>() override</argsstring>
        <name>computeError</name>
        <briefdescription>
<para>Actual cost function. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hateb_local_planner/include/hateb_local_planner/g2o_types/edge_kinematics.h" line="82" column="8" bodyfile="hateb_local_planner/include/hateb_local_planner/g2o_types/edge_kinematics.h" bodystart="82" bodyend="98"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Edge defining the cost function for satisfying the non-holonomic kinematics of a differential drive mobile robot. </para>
    </briefdescription>
    <detaileddescription>
<para>The edge depends on two vertices <formula id="8">$ \mathbf{s}_i, \mathbf{s}_{ip1} $</formula> and minimizes a geometric interpretation of the non-holonomic constraint:<itemizedlist>
<listitem><para>C. RÃ¶smann et al.: Trajectory modification considering dynamic constraints of autonomous robots, ROBOTIK, 2012.</para>
</listitem></itemizedlist>
</para>
<para>The <emphasis>weight</emphasis> can be set using setInformation(): Matrix element 1,1: (Choose a very high value: ~1000). <linebreak/>
A second equation is implemented to penalize backward motions (second element of the error /cost vector). <linebreak/>
The <emphasis>weight</emphasis> can be set using setInformation(): Matrix element 2,2: (A value ~1 allows backward driving, but penalizes it slighly). <linebreak/>
The dimension of the error / cost vector is 2: the first component represents the nonholonomic constraint cost, the second one backward-drive cost. <simplesect kind="see"><para>TebOptimalPlanner::AddEdgesKinematics, <ref refid="classhateb__local__planner_1_1EdgeKinematicsCarlike" kindref="compound">EdgeKinematicsCarlike</ref> </para>
</simplesect>
<simplesect kind="remark"><para>Do not forget to call <ref refid="classhateb__local__planner_1_1BaseTebBinaryEdge_1abc6ae7a9e1fd02416a4a94cbb785ba19" kindref="member">setHATebConfig()</ref> </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>hateb_local_planner::EdgeKinematicsDiffDrive</label>
        <link refid="classhateb__local__planner_1_1EdgeKinematicsDiffDrive"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>hateb_local_planner::BaseTebBinaryEdge&lt; 2, double, VertexPose, VertexPose &gt;</label>
        <link refid="classhateb__local__planner_1_1BaseTebBinaryEdge"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>g2o::BaseBinaryEdge&lt; D, double, VertexPose, VertexPose &gt;</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>hateb_local_planner::EdgeKinematicsDiffDrive</label>
        <link refid="classhateb__local__planner_1_1EdgeKinematicsDiffDrive"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>hateb_local_planner::BaseTebBinaryEdge&lt; 2, double, VertexPose, VertexPose &gt;</label>
        <link refid="classhateb__local__planner_1_1BaseTebBinaryEdge"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>g2o::BaseBinaryEdge&lt; D, double, VertexPose, VertexPose &gt;</label>
      </node>
    </collaborationgraph>
    <location file="hateb_local_planner/include/hateb_local_planner/g2o_types/edge_kinematics.h" line="72" column="1" bodyfile="hateb_local_planner/include/hateb_local_planner/g2o_types/edge_kinematics.h" bodystart="72" bodyend="146"/>
    <listofallmembers>
      <member refid="classhateb__local__planner_1_1BaseTebBinaryEdge_1af5ba7be337a1f51e8f000255ffd40e71" prot="protected" virt="non-virtual"><scope>hateb_local_planner::EdgeKinematicsDiffDrive</scope><name>cfg_</name></member>
      <member refid="classhateb__local__planner_1_1EdgeKinematicsDiffDrive_1a4ee5a8e0e3146c3e4d2c4361f6d361c4" prot="public" virt="non-virtual"><scope>hateb_local_planner::EdgeKinematicsDiffDrive</scope><name>computeError</name></member>
      <member refid="classhateb__local__planner_1_1EdgeKinematicsDiffDrive_1abde47d9274d2c3e0e3244f484fb2c18e" prot="public" virt="non-virtual"><scope>hateb_local_planner::EdgeKinematicsDiffDrive</scope><name>EdgeKinematicsDiffDrive</name></member>
      <member refid="classhateb__local__planner_1_1BaseTebBinaryEdge_1a0c0f4853fd8744194a18775226f9b731" prot="public" virt="non-virtual"><scope>hateb_local_planner::EdgeKinematicsDiffDrive</scope><name>getError</name></member>
      <member refid="classhateb__local__planner_1_1BaseTebBinaryEdge_1a0b775d38f7afb0f63f9156ed241fbe25" prot="public" virt="virtual"><scope>hateb_local_planner::EdgeKinematicsDiffDrive</scope><name>read</name></member>
      <member refid="classhateb__local__planner_1_1BaseTebBinaryEdge_1abc6ae7a9e1fd02416a4a94cbb785ba19" prot="public" virt="non-virtual"><scope>hateb_local_planner::EdgeKinematicsDiffDrive</scope><name>setHATebConfig</name></member>
      <member refid="classhateb__local__planner_1_1BaseTebBinaryEdge_1a85a24cf969c90917f50cb057173527ca" prot="public" virt="virtual"><scope>hateb_local_planner::EdgeKinematicsDiffDrive</scope><name>write</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
