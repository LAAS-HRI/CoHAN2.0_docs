<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="agent__layer_8cpp" kind="file" language="C++">
    <compoundname>agent_layer.cpp</compoundname>
    <includes local="no">angles/angles.h</includes>
    <includes refid="agent__layer_8h" local="no">cohan_layers/agent_layer.h</includes>
    <includes local="no">pluginlib/class_list_macros.h</includes>
    <incdepgraph>
      <node id="1">
        <label>/home/ptsingaman/ros_ws/CoHAN2.0/src/cohan_layers/src/agent_layer.cpp</label>
        <link refid="agent__layer_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>costmap_2d/layered_costmap.h</label>
      </node>
      <node id="7">
        <label>cohan_msgs/TrackedSegmentType.h</label>
      </node>
      <node id="6">
        <label>cohan_msgs/TrackedAgents.h</label>
      </node>
      <node id="15">
        <label>boost/thread.hpp</label>
      </node>
      <node id="13">
        <label>tf2/utils.h</label>
      </node>
      <node id="8">
        <label>costmap_2d/layer.h</label>
      </node>
      <node id="2">
        <label>angles/angles.h</label>
      </node>
      <node id="14">
        <label>tf2_geometry_msgs/tf2_geometry_msgs.h</label>
      </node>
      <node id="10">
        <label>dynamic_reconfigure/server.h</label>
      </node>
      <node id="12">
        <label>std_srvs/SetBool.h</label>
      </node>
      <node id="11">
        <label>ros/ros.h</label>
      </node>
      <node id="4">
        <label>agent_path_prediction/AgentsInfo.h</label>
      </node>
      <node id="5">
        <label>cohan_msgs/StateArray.h</label>
      </node>
      <node id="16">
        <label>pluginlib/class_list_macros.h</label>
      </node>
      <node id="3">
        <label>cohan_layers/agent_layer.h</label>
        <link refid="agent__layer_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacecohan__layers">cohan_layers</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="agent__layer_8cpp_1a345d218c9cd83bb04fdb7749d8f5bca8" prot="public" static="no">
        <name>DEFAULT_AGENT_PART</name>
        <initializer>cohan_msgs::TrackedSegmentType::TORSO</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ptsingaman/ros_ws/CoHAN2.0/src/cohan_layers/src/agent_layer.cpp" line="42" column="9" bodyfile="/home/ptsingaman/ros_ws/CoHAN2.0/src/cohan_layers/src/agent_layer.cpp" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="agent__layer_8cpp_1ab11c2b6087ea76911944279ff5a6d65e" prot="public" static="no">
        <name>TRACKED_AGENTS_SUB</name>
        <initializer>&quot;/tracked_agents&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ptsingaman/ros_ws/CoHAN2.0/src/cohan_layers/src/agent_layer.cpp" line="43" column="9" bodyfile="/home/ptsingaman/ros_ws/CoHAN2.0/src/cohan_layers/src/agent_layer.cpp" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="agent__layer_8cpp_1a64524ba317a33d6069bb960e1eb8c133" prot="public" static="no">
        <name>AGENTS_STATES_SUB</name>
        <initializer>&quot;/move_base/agentsInfo&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ptsingaman/ros_ws/CoHAN2.0/src/cohan_layers/src/agent_layer.cpp" line="44" column="9" bodyfile="/home/ptsingaman/ros_ws/CoHAN2.0/src/cohan_layers/src/agent_layer.cpp" bodystart="44" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*********************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Software<sp/>License<sp/>Agreement<sp/>(BSD<sp/>License)</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2025<sp/>LAAS/CNRS</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/><sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/><sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/><sp/><sp/>*<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/>*<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>copyright<sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>disclaimer<sp/>in<sp/>the<sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/><sp/>*<sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>the<sp/>institute<sp/>nor<sp/>the<sp/>names<sp/>of<sp/>its</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>from<sp/>this<sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/><sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/><sp/>&quot;AS<sp/>IS&quot;<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/><sp/>LIMITED<sp/>TO,<sp/>THE<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/><sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/><sp/>COPYRIGHT<sp/>OWNER<sp/>OR<sp/>CONTRIBUTORS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/><sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/><sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/><sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/><sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/><sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING<sp/>IN</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/><sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*<sp/><sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*<sp/>Author:<sp/>Phani<sp/>Teja<sp/>Singamaneni<sp/>(email:ptsingaman@laas.fr)</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;angles/angles.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="agent__layer_8h" kindref="compound">cohan_layers/agent_layer.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;pluginlib/class_list_macros.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DEFAULT_AGENT_PART<sp/>cohan_msgs::TrackedSegmentType::TORSO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TRACKED_AGENTS_SUB<sp/>&quot;/tracked_agents&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AGENTS_STATES_SUB<sp/>&quot;/move_base/agentsInfo&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>costmap_2d::FREE_SPACE;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>costmap_2d::LETHAL_OBSTACLE;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>costmap_2d::NO_INFORMATION;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacecohan__layers" kindref="compound">cohan_layers</ref><sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcohan__layers_1_1AgentLayer_1a1af29e63306b94ae450c66916c2d364c" kindref="member">AgentLayer::onInitialize</ref>()<sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>ros::NodeHandle<sp/>private_nh(</highlight><highlight class="stringliteral">&quot;~/&quot;</highlight><highlight class="normal"><sp/>+<sp/>name_);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>namespace<sp/>from<sp/>the<sp/>parameter<sp/>server<sp/>(different<sp/>from<sp/>the<sp/>cfg<sp/>server)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ros::param::get(</highlight><highlight class="stringliteral">&quot;~ns&quot;</highlight><highlight class="normal">,<sp/><ref refid="classcohan__layers_1_1AgentLayer_1a4a1311ca24a93859ac1f536bb46a1845" kindref="member">ns_</ref>))<sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcohan__layers_1_1AgentLayer_1a4a1311ca24a93859ac1f536bb46a1845" kindref="member">ns_</ref><sp/>=<sp/>std::string(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Map<sp/>the<sp/>subcsriptions<sp/>properly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><ref refid="classcohan__layers_1_1AgentLayer_1aba00f5021c8077f6c9a3d50c2a72611f" kindref="member">tracked_agents_sub_topic_</ref><sp/>=<sp/>std::string(<ref refid="agent__layer_8cpp_1ab11c2b6087ea76911944279ff5a6d65e" kindref="member">TRACKED_AGENTS_SUB</ref>);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><ref refid="classcohan__layers_1_1AgentLayer_1a8fdfce94f480552f6ff035745095e674" kindref="member">agents_states_sub_topic_</ref><sp/>=<sp/>std::string(<ref refid="agent__layer_8cpp_1a64524ba317a33d6069bb960e1eb8c133" kindref="member">AGENTS_STATES_SUB</ref>);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classcohan__layers_1_1AgentLayer_1a4a1311ca24a93859ac1f536bb46a1845" kindref="member">ns_</ref>.empty())<sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcohan__layers_1_1AgentLayer_1aba00f5021c8077f6c9a3d50c2a72611f" kindref="member">tracked_agents_sub_topic_</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="classcohan__layers_1_1AgentLayer_1a4a1311ca24a93859ac1f536bb46a1845" kindref="member">ns_</ref><sp/>+<sp/><ref refid="classcohan__layers_1_1AgentLayer_1aba00f5021c8077f6c9a3d50c2a72611f" kindref="member">tracked_agents_sub_topic_</ref>;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcohan__layers_1_1AgentLayer_1a8fdfce94f480552f6ff035745095e674" kindref="member">agents_states_sub_topic_</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="classcohan__layers_1_1AgentLayer_1a4a1311ca24a93859ac1f536bb46a1845" kindref="member">ns_</ref><sp/>+<sp/><ref refid="classcohan__layers_1_1AgentLayer_1a8fdfce94f480552f6ff035745095e674" kindref="member">agents_states_sub_topic_</ref>;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><ref refid="classcohan__layers_1_1AgentLayer_1a0c0e51373cda788f482c103074e9fea5" kindref="member">agents_sub_</ref><sp/>=<sp/>private_nh.subscribe(<ref refid="classcohan__layers_1_1AgentLayer_1aba00f5021c8077f6c9a3d50c2a72611f" kindref="member">tracked_agents_sub_topic_</ref>,<sp/>1,<sp/>&amp;<ref refid="classcohan__layers_1_1AgentLayer_1a97d205e3e4669c0cc810409dc24bbacf" kindref="member">AgentLayer::agentsCB</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><ref refid="classcohan__layers_1_1AgentLayer_1a042352308736e3f8d468791738d3bce0" kindref="member">agents_states_sub_</ref><sp/>=<sp/>private_nh.subscribe(<ref refid="classcohan__layers_1_1AgentLayer_1a8fdfce94f480552f6ff035745095e674" kindref="member">agents_states_sub_topic_</ref>,<sp/>1,<sp/>&amp;<ref refid="classcohan__layers_1_1AgentLayer_1a4693da13a11bb1325806ce4c4870605d" kindref="member">AgentLayer::statesCB</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><ref refid="classcohan__layers_1_1AgentLayer_1a7af012616752697af0c11b63044dde17" kindref="member">stopmap_srv_</ref><sp/>=<sp/>private_nh.advertiseService(</highlight><highlight class="stringliteral">&quot;shutdown_layer&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classcohan__layers_1_1AgentLayer_1aa5b6cb410c3b4b5460ea00cde95770be" kindref="member">AgentLayer::shutdownCB</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>current_<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><ref refid="classcohan__layers_1_1AgentLayer_1a358ed2716ba140c39dd85357bbf54b40" kindref="member">first_time_</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><ref refid="classcohan__layers_1_1AgentLayer_1a0b31b0736d9ab8c8d2ac46458f530463" kindref="member">shutdown_</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="74"><highlight class="normal">}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcohan__layers_1_1AgentLayer_1a97d205e3e4669c0cc810409dc24bbacf" kindref="member">AgentLayer::agentsCB</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cohan_msgs::TrackedAgents&amp;<sp/><ref refid="namespaceagents" kindref="compound">agents</ref>)<sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>boost::recursive_mutex::scoped_lock<sp/>lock(<ref refid="classcohan__layers_1_1AgentLayer_1a32383038b520594beb56f9bbad4c8082" kindref="member">lock_</ref>);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><ref refid="classcohan__layers_1_1AgentLayer_1abbc559fdf12e15242c7c0852b8d269f8" kindref="member">agents_</ref><sp/>=<sp/><ref refid="namespaceagents" kindref="compound">agents</ref>;</highlight></codeline>
<codeline lineno="79"><highlight class="normal">}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcohan__layers_1_1AgentLayer_1a4693da13a11bb1325806ce4c4870605d" kindref="member">AgentLayer::statesCB</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>agent_path_prediction::AgentsInfo&amp;<sp/>agents_info)<sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>boost::recursive_mutex::scoped_lock<sp/>lock(lock_);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><ref refid="classcohan__layers_1_1AgentLayer_1a9277b94d9450bf969edaf84c8beb408c" kindref="member">states_</ref>.clear();</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>human<sp/>:<sp/>agents_info.humans)<sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcohan__layers_1_1AgentLayer_1a9277b94d9450bf969edaf84c8beb408c" kindref="member">states_</ref>[human.id]<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(human.state);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><ref refid="classcohan__layers_1_1AgentLayer_1a8892ad59c63a48ad948bdf5f79a91ca2" kindref="member">reset_</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><ref refid="classcohan__layers_1_1AgentLayer_1aa579695e49019d2acdba9456379128c9" kindref="member">last_time_</ref><sp/>=<sp/>ros::Time::now();</highlight></codeline>
<codeline lineno="89"><highlight class="normal">}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classcohan__layers_1_1AgentLayer_1aa5b6cb410c3b4b5460ea00cde95770be" kindref="member">AgentLayer::shutdownCB</ref>(std_srvs::SetBoolRequest&amp;<sp/>req,<sp/>std_srvs::SetBoolResponse&amp;<sp/>res)<sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><ref refid="classcohan__layers_1_1AgentLayer_1a0b31b0736d9ab8c8d2ac46458f530463" kindref="member">shutdown_</ref><sp/>=<sp/>req.data;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classcohan__layers_1_1AgentLayer_1a0b31b0736d9ab8c8d2ac46458f530463" kindref="member">shutdown_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>res.success<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>res.message<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Shutting<sp/>down<sp/>the<sp/>agent<sp/>layer<sp/>costmaps..&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>res.success<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>res.message<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Agent<sp/>layer<sp/>is<sp/>switched<sp/>on<sp/>!&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="101"><highlight class="normal">}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcohan__layers_1_1AgentLayer_1afecded3910ae8f847b22a2818b6d33f0" kindref="member">AgentLayer::updateBounds</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*origin_x*/</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*origin_y*/</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*origin_z*/</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>min_x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>min_y,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>max_x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>max_y)<sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/>boost::recursive_mutex::scoped_lock<sp/>lock(<ref refid="classcohan__layers_1_1AgentLayer_1a32383038b520594beb56f9bbad4c8082" kindref="member">lock_</ref>);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/>std::string<sp/>global_frame<sp/>=<sp/>layered_costmap_-&gt;getGlobalFrameID();</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><ref refid="classcohan__layers_1_1AgentLayer_1a1b9df0ba8009c991432124692fbf37ed" kindref="member">transformed_agents_</ref>.clear();</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((ros::Time::now()<sp/>-<sp/><ref refid="classcohan__layers_1_1AgentLayer_1aa579695e49019d2acdba9456379128c9" kindref="member">last_time_</ref>).toSec()<sp/>&gt;<sp/>1.0)<sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcohan__layers_1_1AgentLayer_1a8892ad59c63a48ad948bdf5f79a91ca2" kindref="member">reset_</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcohan__layers_1_1AgentLayer_1a9277b94d9450bf969edaf84c8beb408c" kindref="member">states_</ref>.clear();</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>agent<sp/>:<sp/><ref refid="classcohan__layers_1_1AgentLayer_1abbc559fdf12e15242c7c0852b8d269f8" kindref="member">agents_</ref>.agents)<sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>segment<sp/>:<sp/>agent.segments)<sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((segment.type<sp/>==<sp/><ref refid="agent__layer_8cpp_1a345d218c9cd83bb04fdb7749d8f5bca8" kindref="member">DEFAULT_AGENT_PART</ref>)<sp/>&amp;&amp;<sp/>!<ref refid="classcohan__layers_1_1AgentLayer_1a8892ad59c63a48ad948bdf5f79a91ca2" kindref="member">reset_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classcohan__layers_1_1AgentLayer_1a9277b94d9450bf969edaf84c8beb408c" kindref="member">states_</ref>.empty()<sp/>&amp;&amp;<sp/>!<ref refid="classcohan__layers_1_1AgentLayer_1a0b31b0736d9ab8c8d2ac46458f530463" kindref="member">shutdown_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classcohan__layers_1_1AgentLayer_1a9277b94d9450bf969edaf84c8beb408c" kindref="member">states_</ref>[agent.track_id]<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AgentPoseVel<sp/>agent_pose_vel;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>agent_pose_vel.track_id<sp/>=<sp/>agent.track_id;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>agent_pose_vel.type<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(agent.type);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>agent_pose_vel.state<sp/>=<sp/><ref refid="classcohan__layers_1_1AgentLayer_1a9277b94d9450bf969edaf84c8beb408c" kindref="member">states_</ref>[agent.track_id];</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>agent_pose_vel.header.frame_id<sp/>=<sp/><ref refid="classcohan__layers_1_1AgentLayer_1abbc559fdf12e15242c7c0852b8d269f8" kindref="member">agents_</ref>.header.frame_id;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>agent_pose_vel.header.stamp<sp/>=<sp/><ref refid="classcohan__layers_1_1AgentLayer_1abbc559fdf12e15242c7c0852b8d269f8" kindref="member">agents_</ref>.header.stamp;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>geometry_msgs::PoseStamped<sp/>before_pose;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>geometry_msgs::PoseStamped<sp/>after_pose;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>before_pose.pose<sp/>=<sp/>segment.pose.pose;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>before_pose.header.frame_id<sp/>=<sp/><ref refid="classcohan__layers_1_1AgentLayer_1abbc559fdf12e15242c7c0852b8d269f8" kindref="member">agents_</ref>.header.frame_id;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>before_pose.header.stamp<sp/>=<sp/><ref refid="classcohan__layers_1_1AgentLayer_1abbc559fdf12e15242c7c0852b8d269f8" kindref="member">agents_</ref>.header.stamp;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tf_-&gt;transform(before_pose,<sp/>after_pose,<sp/>global_frame,<sp/>ros::Duration(0.));</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>agent_pose_vel.pose<sp/>=<sp/>after_pose.pose;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>before_pose.pose.position.x<sp/>+=<sp/>segment.twist.twist.linear.x;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>before_pose.pose.position.y<sp/>+=<sp/>segment.twist.twist.linear.y;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>hb_yaw<sp/>=<sp/>tf2::getYaw(before_pose.pose.orientation);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tf2::Quaternion<sp/>quat;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>quat.setEuler(segment.twist.twist.angular.z<sp/>+<sp/>hb_yaw,<sp/>0.0,<sp/>0.0);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tf2::convert(before_pose.pose.orientation,<sp/>quat);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tf_-&gt;transform(before_pose,<sp/>after_pose,<sp/>global_frame,<sp/>ros::Duration(0.));</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>agent_pose_vel.velocity.linear.x<sp/>=<sp/>after_pose.pose.position.x<sp/>-<sp/>agent_pose_vel.pose.position.x;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>agent_pose_vel.velocity.linear.y<sp/>=<sp/>after_pose.pose.position.y<sp/>-<sp/>agent_pose_vel.pose.position.y;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>agent_pose_vel.velocity.angular.z<sp/>=<sp/>angles::shortest_angular_distance(tf2::getYaw(after_pose.pose.orientation),<sp/>tf2::getYaw(agent_pose_vel.pose.orientation));</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcohan__layers_1_1AgentLayer_1a1b9df0ba8009c991432124692fbf37ed" kindref="member">transformed_agents_</ref>.push_back(agent_pose_vel);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(tf2::LookupException&amp;<sp/>ex)<sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ROS_ERROR(</highlight><highlight class="stringliteral">&quot;No<sp/>Transform<sp/>available<sp/>Error:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>ex.what());</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(tf2::ConnectivityException&amp;<sp/>ex)<sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ROS_ERROR(</highlight><highlight class="stringliteral">&quot;Connectivity<sp/>Error:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>ex.what());</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(tf2::ExtrapolationException&amp;<sp/>ex)<sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ROS_ERROR(</highlight><highlight class="stringliteral">&quot;Extrapolation<sp/>Error:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>ex.what());</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classcohan__layers_1_1AgentLayer_1a8892ad59c63a48ad948bdf5f79a91ca2" kindref="member">reset_</ref><sp/>&amp;&amp;<sp/>!<ref refid="classcohan__layers_1_1AgentLayer_1a0b31b0736d9ab8c8d2ac46458f530463" kindref="member">shutdown_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AgentPoseVel<sp/>agent_pose_vel;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>agent_pose_vel.header.frame_id<sp/>=<sp/><ref refid="classcohan__layers_1_1AgentLayer_1abbc559fdf12e15242c7c0852b8d269f8" kindref="member">agents_</ref>.header.frame_id;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>agent_pose_vel.header.stamp<sp/>=<sp/><ref refid="classcohan__layers_1_1AgentLayer_1abbc559fdf12e15242c7c0852b8d269f8" kindref="member">agents_</ref>.header.stamp;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>geometry_msgs::PoseStamped<sp/>before_pose;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>geometry_msgs::PoseStamped<sp/>after_pose;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>before_pose.pose<sp/>=<sp/>segment.pose.pose;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>before_pose.header.frame_id<sp/>=<sp/><ref refid="classcohan__layers_1_1AgentLayer_1abbc559fdf12e15242c7c0852b8d269f8" kindref="member">agents_</ref>.header.frame_id;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>before_pose.header.stamp<sp/>=<sp/><ref refid="classcohan__layers_1_1AgentLayer_1abbc559fdf12e15242c7c0852b8d269f8" kindref="member">agents_</ref>.header.stamp;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tf_-&gt;transform(before_pose,<sp/>after_pose,<sp/>global_frame,<sp/>ros::Duration(0.));</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>agent_pose_vel.pose<sp/>=<sp/>after_pose.pose;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>before_pose.pose.position.x<sp/>+=<sp/>segment.twist.twist.linear.x;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>before_pose.pose.position.y<sp/>+=<sp/>segment.twist.twist.linear.y;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>hb_yaw<sp/>=<sp/>tf2::getYaw(before_pose.pose.orientation);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tf2::Quaternion<sp/>quat;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>quat.setEuler(segment.twist.twist.angular.z<sp/>+<sp/>hb_yaw,<sp/>0.0,<sp/>0.0);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tf2::convert(before_pose.pose.orientation,<sp/>quat);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tf_-&gt;transform(before_pose,<sp/>after_pose,<sp/>global_frame,<sp/>ros::Duration(0.));</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>agent_pose_vel.velocity.linear.x<sp/>=<sp/>after_pose.pose.position.x<sp/>-<sp/>agent_pose_vel.pose.position.x;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>agent_pose_vel.velocity.linear.y<sp/>=<sp/>after_pose.pose.position.y<sp/>-<sp/>agent_pose_vel.pose.position.y;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>agent_pose_vel.velocity.angular.z<sp/>=<sp/>angles::shortest_angular_distance(tf2::getYaw(after_pose.pose.orientation),<sp/>tf2::getYaw(agent_pose_vel.pose.orientation));</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcohan__layers_1_1AgentLayer_1a1b9df0ba8009c991432124692fbf37ed" kindref="member">transformed_agents_</ref>.push_back(agent_pose_vel);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(tf2::LookupException&amp;<sp/>ex)<sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ROS_ERROR(</highlight><highlight class="stringliteral">&quot;No<sp/>Transform<sp/>available<sp/>Error:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>ex.what());</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(tf2::ConnectivityException&amp;<sp/>ex)<sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ROS_ERROR(</highlight><highlight class="stringliteral">&quot;Connectivity<sp/>Error:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>ex.what());</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(tf2::ExtrapolationException&amp;<sp/>ex)<sp/>{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ROS_ERROR(</highlight><highlight class="stringliteral">&quot;Extrapolation<sp/>Error:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>ex.what());</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><ref refid="classcohan__layers_1_1AgentLayer_1a2cd68deeadaae0160ac6aee736d92e37" kindref="member">updateBoundsFromAgents</ref>(min_x,<sp/>min_y,<sp/>max_x,<sp/>max_y);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classcohan__layers_1_1AgentLayer_1a358ed2716ba140c39dd85357bbf54b40" kindref="member">first_time_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcohan__layers_1_1AgentLayer_1ac7bdd6029e6c3c088e8dc6b0eefc2395" kindref="member">last_min_x_</ref><sp/>=<sp/>*min_x;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcohan__layers_1_1AgentLayer_1a92f24d94dd0b1283b35384438a9368da" kindref="member">last_min_y_</ref><sp/>=<sp/>*min_y;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcohan__layers_1_1AgentLayer_1af90964373c6d6be5f4f6593d7537d5cb" kindref="member">last_max_x_</ref><sp/>=<sp/>*max_x;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcohan__layers_1_1AgentLayer_1a455b625eb20bc1c98500dbdb0228d176" kindref="member">last_max_y_</ref><sp/>=<sp/>*max_y;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcohan__layers_1_1AgentLayer_1a358ed2716ba140c39dd85357bbf54b40" kindref="member">first_time_</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a<sp/>=<sp/>*min_x;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>b<sp/>=<sp/>*min_y;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>*max_x;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d<sp/>=<sp/>*max_y;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>*min_x<sp/>=<sp/>std::min(<ref refid="classcohan__layers_1_1AgentLayer_1ac7bdd6029e6c3c088e8dc6b0eefc2395" kindref="member">last_min_x_</ref>,<sp/>*min_x);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>*min_y<sp/>=<sp/>std::min(<ref refid="classcohan__layers_1_1AgentLayer_1a92f24d94dd0b1283b35384438a9368da" kindref="member">last_min_y_</ref>,<sp/>*min_y);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>*max_x<sp/>=<sp/>std::max(<ref refid="classcohan__layers_1_1AgentLayer_1af90964373c6d6be5f4f6593d7537d5cb" kindref="member">last_max_x_</ref>,<sp/>*max_x);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>*max_y<sp/>=<sp/>std::max(<ref refid="classcohan__layers_1_1AgentLayer_1a455b625eb20bc1c98500dbdb0228d176" kindref="member">last_max_y_</ref>,<sp/>*max_y);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcohan__layers_1_1AgentLayer_1ac7bdd6029e6c3c088e8dc6b0eefc2395" kindref="member">last_min_x_</ref><sp/>=<sp/>a;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcohan__layers_1_1AgentLayer_1a92f24d94dd0b1283b35384438a9368da" kindref="member">last_min_y_</ref><sp/>=<sp/>b;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcohan__layers_1_1AgentLayer_1af90964373c6d6be5f4f6593d7537d5cb" kindref="member">last_max_x_</ref><sp/>=<sp/>c;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcohan__layers_1_1AgentLayer_1a455b625eb20bc1c98500dbdb0228d176" kindref="member">last_max_y_</ref><sp/>=<sp/>d;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="220"><highlight class="normal">}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal">};<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>cohan_layers</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/ptsingaman/ros_ws/CoHAN2.0/src/cohan_layers/src/agent_layer.cpp"/>
  </compounddef>
</doxygen>
