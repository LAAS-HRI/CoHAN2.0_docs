<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classhateb__local__planner_1_1LineFootprint" kind="class" language="C++" prot="public">
    <compoundname>hateb_local_planner::LineFootprint</compoundname>
    <basecompoundref refid="classhateb__local__planner_1_1BaseFootprintModel" prot="public" virt="non-virtual">hateb_local_planner::BaseFootprintModel</basecompoundref>
    <includes refid="footprint__model_8h" local="no">footprint_model.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classhateb__local__planner_1_1LineFootprint_1acb8ba2de6c6a3d024bf086ff79188433" prot="private" static="no" mutable="no">
        <type>Eigen::Vector2d</type>
        <definition>Eigen::Vector2d hateb_local_planner::LineFootprint::line_start_</definition>
        <argsstring></argsstring>
        <name>line_start_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hateb_local_planner/include/hateb_local_planner/footprint_model.h" line="551" column="19" bodyfile="hateb_local_planner/include/hateb_local_planner/footprint_model.h" bodystart="551" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhateb__local__planner_1_1LineFootprint_1a18f1f9ebf00e5532d25a36b793126944" prot="private" static="no" mutable="no">
        <type>Eigen::Vector2d</type>
        <definition>Eigen::Vector2d hateb_local_planner::LineFootprint::line_end_</definition>
        <argsstring></argsstring>
        <name>line_end_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hateb_local_planner/include/hateb_local_planner/footprint_model.h" line="552" column="19" bodyfile="hateb_local_planner/include/hateb_local_planner/footprint_model.h" bodystart="552" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhateb__local__planner_1_1LineFootprint_1a2f838449afae13cdb134ddf1e671f965" prot="private" static="no" mutable="no">
        <type>const double</type>
        <definition>const double hateb_local_planner::LineFootprint::min_obstacle_dist_</definition>
        <argsstring></argsstring>
        <name>min_obstacle_dist_</name>
        <initializer>= 0.0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hateb_local_planner/include/hateb_local_planner/footprint_model.h" line="553" column="16" bodyfile="hateb_local_planner/include/hateb_local_planner/footprint_model.h" bodystart="553" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classhateb__local__planner_1_1LineFootprint_1a4cc2938ed3787dd0adc62d38d7faf22c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>hateb_local_planner::LineFootprint::LineFootprint</definition>
        <argsstring>(const geometry_msgs::Point &amp;line_start, const geometry_msgs::Point &amp;line_end)</argsstring>
        <name>LineFootprint</name>
        <param>
          <type>const geometry_msgs::Point &amp;</type>
          <declname>line_start</declname>
        </param>
        <param>
          <type>const geometry_msgs::Point &amp;</type>
          <declname>line_end</declname>
        </param>
        <briefdescription>
<para>Default constructor of the abstract obstacle class. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>line_start</parametername>
</parameternamelist>
<parameterdescription>
<para>start coordinates (only x and y) of the line (w.r.t. robot/human center at (0,0)) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>line_end</parametername>
</parameternamelist>
<parameterdescription>
<para>end coordinates (only x and y) of the line (w.r.t. robot/human center at (0,0)) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hateb_local_planner/include/hateb_local_planner/footprint_model.h" line="428" column="3" bodyfile="hateb_local_planner/include/hateb_local_planner/footprint_model.h" bodystart="428" bodyend="428"/>
      </memberdef>
      <memberdef kind="function" id="classhateb__local__planner_1_1LineFootprint_1ab97b8fd72e2b87a667a55c62f401d430" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>hateb_local_planner::LineFootprint::LineFootprint</definition>
        <argsstring>(const Eigen::Vector2d &amp;line_start, const Eigen::Vector2d &amp;line_end, const double min_obstacle_dist)</argsstring>
        <name>LineFootprint</name>
        <param>
          <type>const Eigen::Vector2d &amp;</type>
          <declname>line_start</declname>
        </param>
        <param>
          <type>const Eigen::Vector2d &amp;</type>
          <declname>line_end</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>min_obstacle_dist</declname>
        </param>
        <briefdescription>
<para>Default constructor of the abstract obstacle class (Eigen Version) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>line_start</parametername>
</parameternamelist>
<parameterdescription>
<para>start coordinates (only x and y) of the line (w.r.t. robot/human center at (0,0)) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>line_end</parametername>
</parameternamelist>
<parameterdescription>
<para>end coordinates (only x and y) of the line (w.r.t. robot/human center at (0,0)) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hateb_local_planner/include/hateb_local_planner/footprint_model.h" line="435" column="3" bodyfile="hateb_local_planner/include/hateb_local_planner/footprint_model.h" bodystart="435" bodyend="435"/>
      </memberdef>
      <memberdef kind="function" id="classhateb__local__planner_1_1LineFootprint_1a016f3ba331d76291da35e5571dc2f7bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>hateb_local_planner::LineFootprint::~LineFootprint</definition>
        <argsstring>() override=default</argsstring>
        <name>~LineFootprint</name>
        <briefdescription>
<para>Virtual destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hateb_local_planner/include/hateb_local_planner/footprint_model.h" line="440" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classhateb__local__planner_1_1LineFootprint_1a363d75bf3d38983a643a348bc0e77d8e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void hateb_local_planner::LineFootprint::setLine</definition>
        <argsstring>(const geometry_msgs::Point &amp;line_start, const geometry_msgs::Point &amp;line_end)</argsstring>
        <name>setLine</name>
        <param>
          <type>const geometry_msgs::Point &amp;</type>
          <declname>line_start</declname>
        </param>
        <param>
          <type>const geometry_msgs::Point &amp;</type>
          <declname>line_end</declname>
        </param>
        <briefdescription>
<para>Set vertices of the contour/footprint. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vertices</parametername>
</parameternamelist>
<parameterdescription>
<para>footprint vertices (only x and y) around the robot/human center (0,0) (do not repeat the first and last vertex at the end) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hateb_local_planner/include/hateb_local_planner/footprint_model.h" line="446" column="8" bodyfile="hateb_local_planner/include/hateb_local_planner/footprint_model.h" bodystart="446" bodyend="451"/>
      </memberdef>
      <memberdef kind="function" id="classhateb__local__planner_1_1LineFootprint_1ae3e5d7f33506d77d1460432baa9ea233" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void hateb_local_planner::LineFootprint::setLine</definition>
        <argsstring>(const Eigen::Vector2d &amp;line_start, const Eigen::Vector2d &amp;line_end)</argsstring>
        <name>setLine</name>
        <param>
          <type>const Eigen::Vector2d &amp;</type>
          <declname>line_start</declname>
        </param>
        <param>
          <type>const Eigen::Vector2d &amp;</type>
          <declname>line_end</declname>
        </param>
        <briefdescription>
<para>Set vertices of the contour/footprint (Eigen version) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vertices</parametername>
</parameternamelist>
<parameterdescription>
<para>footprint vertices (only x and y) around the robot/human center (0,0) (do not repeat the first and last vertex at the end) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hateb_local_planner/include/hateb_local_planner/footprint_model.h" line="457" column="8" bodyfile="hateb_local_planner/include/hateb_local_planner/footprint_model.h" bodystart="457" bodyend="460"/>
      </memberdef>
      <memberdef kind="function" id="classhateb__local__planner_1_1LineFootprint_1a513cb63354f96e4e4e864510a0eb444f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>double</type>
        <definition>double hateb_local_planner::LineFootprint::calculateDistance</definition>
        <argsstring>(const PoseSE2 &amp;current_pose, const Obstacle *obstacle) const override</argsstring>
        <name>calculateDistance</name>
        <reimplements refid="classhateb__local__planner_1_1BaseFootprintModel_1a72b681ecb2473cef98a42bebd4472945">calculateDistance</reimplements>
        <param>
          <type>const <ref refid="classhateb__local__planner_1_1PoseSE2" kindref="compound">PoseSE2</ref> &amp;</type>
          <declname>current_pose</declname>
        </param>
        <param>
          <type>const <ref refid="classhateb__local__planner_1_1Obstacle" kindref="compound">Obstacle</ref> *</type>
          <declname>obstacle</declname>
        </param>
        <briefdescription>
<para>Calculate the distance between the robot/human and an obstacle. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>current_pose</parametername>
</parameternamelist>
<parameterdescription>
<para>Current robot/human pose </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>obstacle</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the obstacle </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Euclidean distance to the robot/human </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hateb_local_planner/include/hateb_local_planner/footprint_model.h" line="468" column="10" bodyfile="hateb_local_planner/include/hateb_local_planner/footprint_model.h" bodystart="468" bodyend="473"/>
      </memberdef>
      <memberdef kind="function" id="classhateb__local__planner_1_1LineFootprint_1a4371c29b86388e99d0ddd40c867db974" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>double</type>
        <definition>double hateb_local_planner::LineFootprint::estimateSpatioTemporalDistance</definition>
        <argsstring>(const PoseSE2 &amp;current_pose, const Obstacle *obstacle, double t) const override</argsstring>
        <name>estimateSpatioTemporalDistance</name>
        <reimplements refid="classhateb__local__planner_1_1BaseFootprintModel_1ae162fde4a89a0101cca339a3704e27f1">estimateSpatioTemporalDistance</reimplements>
        <param>
          <type>const <ref refid="classhateb__local__planner_1_1PoseSE2" kindref="compound">PoseSE2</ref> &amp;</type>
          <declname>current_pose</declname>
        </param>
        <param>
          <type>const <ref refid="classhateb__local__planner_1_1Obstacle" kindref="compound">Obstacle</ref> *</type>
          <declname>obstacle</declname>
        </param>
        <param>
          <type>double</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>Estimate the distance between the robot/human and the predicted location of an obstacle at time t. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>current_pose</parametername>
</parameternamelist>
<parameterdescription>
<para>robot/human pose, from which the distance to the obstacle is estimated </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>obstacle</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the dynamic obstacle (constant velocity model is assumed) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>time, for which the predicted distance to the obstacle is calculated </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Euclidean distance to the robot/human </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hateb_local_planner/include/hateb_local_planner/footprint_model.h" line="482" column="10" bodyfile="hateb_local_planner/include/hateb_local_planner/footprint_model.h" bodystart="482" bodyend="487"/>
      </memberdef>
      <memberdef kind="function" id="classhateb__local__planner_1_1LineFootprint_1aabbddff246923f1b28e7d5526b7ac8f5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void hateb_local_planner::LineFootprint::visualizeModel</definition>
        <argsstring>(const PoseSE2 &amp;current_pose, std::vector&lt; visualization_msgs::Marker &gt; &amp;markers, const std_msgs::ColorRGBA &amp;color) const override</argsstring>
        <name>visualizeModel</name>
        <reimplements refid="classhateb__local__planner_1_1BaseFootprintModel_1adeeb5abf2f50393ed531239758518d5e">visualizeModel</reimplements>
        <param>
          <type>const <ref refid="classhateb__local__planner_1_1PoseSE2" kindref="compound">PoseSE2</ref> &amp;</type>
          <declname>current_pose</declname>
        </param>
        <param>
          <type>std::vector&lt; visualization_msgs::Marker &gt; &amp;</type>
          <declname>markers</declname>
        </param>
        <param>
          <type>const std_msgs::ColorRGBA &amp;</type>
          <declname>color</declname>
        </param>
        <briefdescription>
<para>Visualize the robot/human using a markers. </para>
        </briefdescription>
        <detaileddescription>
<para>Fill a marker message with all necessary information (type, pose, scale and color). The header, namespace, id and marker lifetime will be overwritten. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>current_pose</parametername>
</parameternamelist>
<parameterdescription>
<para>Current robot/human pose </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">markers</parametername>
</parameternamelist>
<parameterdescription>
<para>container of marker messages describing the robot/human shape </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>color</parametername>
</parameternamelist>
<parameterdescription>
<para>Color of the footprint </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hateb_local_planner/include/hateb_local_planner/footprint_model.h" line="498" column="8" bodyfile="hateb_local_planner/include/hateb_local_planner/footprint_model.h" bodystart="498" bodyend="519"/>
      </memberdef>
      <memberdef kind="function" id="classhateb__local__planner_1_1LineFootprint_1a0faf871f8784766558d231740a8f14fc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>double</type>
        <definition>double hateb_local_planner::LineFootprint::getInscribedRadius</definition>
        <argsstring>() override</argsstring>
        <name>getInscribedRadius</name>
        <reimplements refid="classhateb__local__planner_1_1BaseFootprintModel_1a805f1e7b919244211f1deb4f884e06de">getInscribedRadius</reimplements>
        <briefdescription>
<para>Compute the inscribed radius of the footprint model. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>inscribed radius </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hateb_local_planner/include/hateb_local_planner/footprint_model.h" line="525" column="10" bodyfile="hateb_local_planner/include/hateb_local_planner/footprint_model.h" bodystart="525" bodyend="527"/>
      </memberdef>
      <memberdef kind="function" id="classhateb__local__planner_1_1LineFootprint_1aa00c54b2f01d5a0f418114d941316c24" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>double</type>
        <definition>double hateb_local_planner::LineFootprint::getCircumscribedRadius</definition>
        <argsstring>() const override</argsstring>
        <name>getCircumscribedRadius</name>
        <reimplements refid="classhateb__local__planner_1_1BaseFootprintModel_1af6f9b6e83795e0ccf558d15c69e50e12">getCircumscribedRadius</reimplements>
        <briefdescription>
<para>Compute the circumscribed radius of the footprint model. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>circumscribed radius </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hateb_local_planner/include/hateb_local_planner/footprint_model.h" line="533" column="10" bodyfile="hateb_local_planner/include/hateb_local_planner/footprint_model.h" bodystart="533" bodyend="533"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classhateb__local__planner_1_1LineFootprint_1a84cd485406ed8685742a7cec9b92ff6b" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void hateb_local_planner::LineFootprint::transformToWorld</definition>
        <argsstring>(const PoseSE2 &amp;current_pose, Eigen::Vector2d &amp;line_start_world, Eigen::Vector2d &amp;line_end_world) const</argsstring>
        <name>transformToWorld</name>
        <param>
          <type>const <ref refid="classhateb__local__planner_1_1PoseSE2" kindref="compound">PoseSE2</ref> &amp;</type>
          <declname>current_pose</declname>
        </param>
        <param>
          <type>Eigen::Vector2d &amp;</type>
          <declname>line_start_world</declname>
        </param>
        <param>
          <type>Eigen::Vector2d &amp;</type>
          <declname>line_end_world</declname>
        </param>
        <briefdescription>
<para>Transforms a line to the world frame manually. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>current_pose</parametername>
</parameternamelist>
<parameterdescription>
<para>Current robot/human pose </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">line_start</parametername>
</parameternamelist>
<parameterdescription>
<para>line_start_ in the world frame </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">line_end</parametername>
</parameternamelist>
<parameterdescription>
<para>line_end_ in the world frame </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hateb_local_planner/include/hateb_local_planner/footprint_model.h" line="542" column="8" bodyfile="hateb_local_planner/include/hateb_local_planner/footprint_model.h" bodystart="542" bodyend="549"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Class that approximates the robot/human with line segment (zero-width) </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>hateb_local_planner::LineFootprint</label>
        <link refid="classhateb__local__planner_1_1LineFootprint"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>hateb_local_planner::BaseFootprintModel</label>
        <link refid="classhateb__local__planner_1_1BaseFootprintModel"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>hateb_local_planner::LineFootprint</label>
        <link refid="classhateb__local__planner_1_1LineFootprint"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>hateb_local_planner::BaseFootprintModel</label>
        <link refid="classhateb__local__planner_1_1BaseFootprintModel"/>
      </node>
    </collaborationgraph>
    <location file="hateb_local_planner/include/hateb_local_planner/footprint_model.h" line="421" column="1" bodyfile="hateb_local_planner/include/hateb_local_planner/footprint_model.h" bodystart="421" bodyend="557"/>
    <listofallmembers>
      <member refid="classhateb__local__planner_1_1BaseFootprintModel_1a23994e2593de8cedf5f839058407d8ec" prot="public" virt="non-virtual"><scope>hateb_local_planner::LineFootprint</scope><name>BaseFootprintModel</name></member>
      <member refid="classhateb__local__planner_1_1LineFootprint_1a513cb63354f96e4e4e864510a0eb444f" prot="public" virt="virtual"><scope>hateb_local_planner::LineFootprint</scope><name>calculateDistance</name></member>
      <member refid="classhateb__local__planner_1_1LineFootprint_1a4371c29b86388e99d0ddd40c867db974" prot="public" virt="virtual"><scope>hateb_local_planner::LineFootprint</scope><name>estimateSpatioTemporalDistance</name></member>
      <member refid="classhateb__local__planner_1_1LineFootprint_1aa00c54b2f01d5a0f418114d941316c24" prot="public" virt="virtual"><scope>hateb_local_planner::LineFootprint</scope><name>getCircumscribedRadius</name></member>
      <member refid="classhateb__local__planner_1_1LineFootprint_1a0faf871f8784766558d231740a8f14fc" prot="public" virt="virtual"><scope>hateb_local_planner::LineFootprint</scope><name>getInscribedRadius</name></member>
      <member refid="classhateb__local__planner_1_1LineFootprint_1a18f1f9ebf00e5532d25a36b793126944" prot="private" virt="non-virtual"><scope>hateb_local_planner::LineFootprint</scope><name>line_end_</name></member>
      <member refid="classhateb__local__planner_1_1LineFootprint_1acb8ba2de6c6a3d024bf086ff79188433" prot="private" virt="non-virtual"><scope>hateb_local_planner::LineFootprint</scope><name>line_start_</name></member>
      <member refid="classhateb__local__planner_1_1LineFootprint_1a4cc2938ed3787dd0adc62d38d7faf22c" prot="public" virt="non-virtual"><scope>hateb_local_planner::LineFootprint</scope><name>LineFootprint</name></member>
      <member refid="classhateb__local__planner_1_1LineFootprint_1ab97b8fd72e2b87a667a55c62f401d430" prot="public" virt="non-virtual"><scope>hateb_local_planner::LineFootprint</scope><name>LineFootprint</name></member>
      <member refid="classhateb__local__planner_1_1LineFootprint_1a2f838449afae13cdb134ddf1e671f965" prot="private" virt="non-virtual"><scope>hateb_local_planner::LineFootprint</scope><name>min_obstacle_dist_</name></member>
      <member refid="classhateb__local__planner_1_1LineFootprint_1a363d75bf3d38983a643a348bc0e77d8e" prot="public" virt="non-virtual"><scope>hateb_local_planner::LineFootprint</scope><name>setLine</name></member>
      <member refid="classhateb__local__planner_1_1LineFootprint_1ae3e5d7f33506d77d1460432baa9ea233" prot="public" virt="non-virtual"><scope>hateb_local_planner::LineFootprint</scope><name>setLine</name></member>
      <member refid="classhateb__local__planner_1_1LineFootprint_1a84cd485406ed8685742a7cec9b92ff6b" prot="private" virt="non-virtual"><scope>hateb_local_planner::LineFootprint</scope><name>transformToWorld</name></member>
      <member refid="classhateb__local__planner_1_1LineFootprint_1aabbddff246923f1b28e7d5526b7ac8f5" prot="public" virt="virtual"><scope>hateb_local_planner::LineFootprint</scope><name>visualizeModel</name></member>
      <member refid="classhateb__local__planner_1_1BaseFootprintModel_1a011c4b6ecc51affad4f90b37330f52ee" prot="public" virt="virtual"><scope>hateb_local_planner::LineFootprint</scope><name>~BaseFootprintModel</name></member>
      <member refid="classhateb__local__planner_1_1LineFootprint_1a016f3ba331d76291da35e5571dc2f7bf" prot="public" virt="non-virtual"><scope>hateb_local_planner::LineFootprint</scope><name>~LineFootprint</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
