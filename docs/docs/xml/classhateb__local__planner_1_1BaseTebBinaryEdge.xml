<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classhateb__local__planner_1_1BaseTebBinaryEdge" kind="class" language="C++" prot="public">
    <compoundname>hateb_local_planner::BaseTebBinaryEdge</compoundname>
    <basecompoundref prot="public" virt="non-virtual">g2o::BaseBinaryEdge&lt; D, E, VertexXi, VertexXj &gt;</basecompoundref>
    <includes refid="base__teb__edges_8h" local="no">base_teb_edges.h</includes>
    <templateparamlist>
      <param>
        <type>int</type>
        <declname>D</declname>
        <defname>D</defname>
      </param>
      <param>
        <type>typename E</type>
      </param>
      <param>
        <type>typename VertexXi</type>
      </param>
      <param>
        <type>typename VertexXj</type>
      </param>
    </templateparamlist>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classhateb__local__planner_1_1BaseTebBinaryEdge_1af5ba7be337a1f51e8f000255ffd40e71" prot="protected" static="no" mutable="no">
        <type>const <ref refid="classhateb__local__planner_1_1HATebConfig" kindref="compound">HATebConfig</ref> *</type>
        <definition>const HATebConfig* hateb_local_planner::BaseTebBinaryEdge&lt; D, E, VertexXi, VertexXj &gt;::cfg_</definition>
        <argsstring></argsstring>
        <name>cfg_</name>
        <briefdescription>
<para>Store <ref refid="classhateb__local__planner_1_1HATebConfig" kindref="compound">HATebConfig</ref> class for parameters. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ptsingaman/ros_ws/CoHAN2.0/src/hateb_local_planner/include/hateb_local_planner/g2o_types/base_teb_edges.h" line="166" column="21" bodyfile="/home/ptsingaman/ros_ws/CoHAN2.0/src/hateb_local_planner/include/hateb_local_planner/g2o_types/base_teb_edges.h" bodystart="166" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classhateb__local__planner_1_1BaseTebBinaryEdge_1a0c0f4853fd8744194a18775226f9b731" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>ErrorVector &amp;</type>
        <definition>ErrorVector&amp; hateb_local_planner::BaseTebBinaryEdge&lt; D, E, VertexXi, VertexXj &gt;::getError</definition>
        <argsstring>()</argsstring>
        <name>getError</name>
        <briefdescription>
<para>Compute and return error / cost value. </para>
        </briefdescription>
        <detaileddescription>
<para>This method is called by <ref refid="classhateb__local__planner_1_1TebOptimalPlanner_1aa55295bf6fe8b04a4bda0575d1babe6f" kindref="member">TebOptimalPlanner::computeCurrentCost</ref> to obtain the current cost. <simplesect kind="return"><para>2D Cost / error vector [nh cost, backward drive dir cost]^T </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ptsingaman/ros_ws/CoHAN2.0/src/hateb_local_planner/include/hateb_local_planner/g2o_types/base_teb_edges.h" line="135" column="15" bodyfile="/home/ptsingaman/ros_ws/CoHAN2.0/src/hateb_local_planner/include/hateb_local_planner/g2o_types/base_teb_edges.h" bodystart="135" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="classhateb__local__planner_1_1BaseTebBinaryEdge_1a0b775d38f7afb0f63f9156ed241fbe25" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool hateb_local_planner::BaseTebBinaryEdge&lt; D, E, VertexXi, VertexXj &gt;::read</definition>
        <argsstring>(std::istream &amp;is)</argsstring>
        <name>read</name>
        <param>
          <type>std::istream &amp;</type>
          <declname>is</declname>
        </param>
        <briefdescription>
<para>Read values from input stream. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ptsingaman/ros_ws/CoHAN2.0/src/hateb_local_planner/include/hateb_local_planner/g2o_types/base_teb_edges.h" line="143" column="16" bodyfile="/home/ptsingaman/ros_ws/CoHAN2.0/src/hateb_local_planner/include/hateb_local_planner/g2o_types/base_teb_edges.h" bodystart="143" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="classhateb__local__planner_1_1BaseTebBinaryEdge_1a85a24cf969c90917f50cb057173527ca" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool hateb_local_planner::BaseTebBinaryEdge&lt; D, E, VertexXi, VertexXj &gt;::write</definition>
        <argsstring>(std::ostream &amp;os) const</argsstring>
        <name>write</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <briefdescription>
<para>Write values to an output stream. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ptsingaman/ros_ws/CoHAN2.0/src/hateb_local_planner/include/hateb_local_planner/g2o_types/base_teb_edges.h" line="151" column="16" bodyfile="/home/ptsingaman/ros_ws/CoHAN2.0/src/hateb_local_planner/include/hateb_local_planner/g2o_types/base_teb_edges.h" bodystart="151" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="classhateb__local__planner_1_1BaseTebBinaryEdge_1abc6ae7a9e1fd02416a4a94cbb785ba19" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void hateb_local_planner::BaseTebBinaryEdge&lt; D, E, VertexXi, VertexXj &gt;::setHATebConfig</definition>
        <argsstring>(const HATebConfig &amp;cfg)</argsstring>
        <name>setHATebConfig</name>
        <param>
          <type>const <ref refid="classhateb__local__planner_1_1HATebConfig" kindref="compound">HATebConfig</ref> &amp;</type>
          <declname>cfg</declname>
        </param>
        <briefdescription>
<para>Assign the <ref refid="classhateb__local__planner_1_1HATebConfig" kindref="compound">HATebConfig</ref> class for parameters. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cfg</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classhateb__local__planner_1_1HATebConfig" kindref="compound">HATebConfig</ref> class </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ptsingaman/ros_ws/CoHAN2.0/src/hateb_local_planner/include/hateb_local_planner/g2o_types/base_teb_edges.h" line="160" column="8" bodyfile="/home/ptsingaman/ros_ws/CoHAN2.0/src/hateb_local_planner/include/hateb_local_planner/g2o_types/base_teb_edges.h" bodystart="160" bodyend="160"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Base edge connecting two vertices in the TEB optimization problem. </para>
    </briefdescription>
    <detaileddescription>
<para>This edge defines a base edge type for the TEB optimization problem. It is derived from the corresponding g2o base classes augmented with additional information for the dedicated TEB problem (e.g. config). The destructor erases the edge in all attached vertices in order to allow keeping the vertices valid in subsequent g2o optimization calls. Memory of edges should be freed by calling the clearEdge method of the g2o optimizer class. <simplesect kind="see"><para><ref refid="classhateb__local__planner_1_1BaseTebMultiEdge" kindref="compound">BaseTebMultiEdge</ref>, <ref refid="classhateb__local__planner_1_1BaseTebUnaryEdge" kindref="compound">BaseTebUnaryEdge</ref>, g2o::BaseBinaryEdge, g2o::BaseUnaryEdge, g2o::BaseMultiEdge </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>hateb_local_planner::BaseTebBinaryEdge&lt; D, E, VertexXi, VertexXj &gt;</label>
        <link refid="classhateb__local__planner_1_1BaseTebBinaryEdge"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>g2o::BaseBinaryEdge&lt; D, E, VertexXi, VertexXj &gt;</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="10">
        <label>hateb_local_planner::HATebConfig::Optimization</label>
        <link refid="structhateb__local__planner_1_1HATebConfig_1_1Optimization"/>
      </node>
      <node id="5">
        <label>hateb_local_planner::HATebConfig::GoalTolerance</label>
        <link refid="structhateb__local__planner_1_1HATebConfig_1_1GoalTolerance"/>
      </node>
      <node id="1">
        <label>hateb_local_planner::BaseTebBinaryEdge&lt; D, E, VertexXi, VertexXj &gt;</label>
        <link refid="classhateb__local__planner_1_1BaseTebBinaryEdge"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>cfg_</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>hateb_local_planner::HATebConfig::Trajectory</label>
        <link refid="structhateb__local__planner_1_1HATebConfig_1_1Trajectory"/>
      </node>
      <node id="4">
        <label>hateb_local_planner::HATebConfig::Recovery</label>
        <link refid="structhateb__local__planner_1_1HATebConfig_1_1Recovery"/>
      </node>
      <node id="11">
        <label>hateb_local_planner::HATebConfig::Robot</label>
        <link refid="structhateb__local__planner_1_1HATebConfig_1_1Robot"/>
      </node>
      <node id="8">
        <label>hateb_local_planner::HATebConfig::Obstacles</label>
        <link refid="structhateb__local__planner_1_1HATebConfig_1_1Obstacles"/>
      </node>
      <node id="2">
        <label>g2o::BaseBinaryEdge&lt; D, E, VertexXi, VertexXj &gt;</label>
      </node>
      <node id="3">
        <label>hateb_local_planner::HATebConfig</label>
        <link refid="classhateb__local__planner_1_1HATebConfig"/>
        <childnode refid="4" relation="usage">
          <edgelabel>recovery</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>goal_tolerance</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>trajectory</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>hateb</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>obstacles</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>agent</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>optim</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>robot</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>visualization</edgelabel>
        </childnode>
      </node>
      <node id="12">
        <label>hateb_local_planner::HATebConfig::Visualization</label>
        <link refid="structhateb__local__planner_1_1HATebConfig_1_1Visualization"/>
      </node>
      <node id="9">
        <label>hateb_local_planner::HATebConfig::Agent</label>
        <link refid="structhateb__local__planner_1_1HATebConfig_1_1Agent"/>
      </node>
      <node id="7">
        <label>hateb_local_planner::HATebConfig::Hateb</label>
        <link refid="structhateb__local__planner_1_1HATebConfig_1_1Hateb"/>
      </node>
    </collaborationgraph>
    <location file="/home/ptsingaman/ros_ws/CoHAN2.0/src/hateb_local_planner/include/hateb_local_planner/g2o_types/base_teb_edges.h" line="124" column="1" bodyfile="/home/ptsingaman/ros_ws/CoHAN2.0/src/hateb_local_planner/include/hateb_local_planner/g2o_types/base_teb_edges.h" bodystart="124" bodyend="170"/>
    <listofallmembers>
      <member refid="classhateb__local__planner_1_1BaseTebBinaryEdge_1af5ba7be337a1f51e8f000255ffd40e71" prot="protected" virt="non-virtual"><scope>hateb_local_planner::BaseTebBinaryEdge</scope><name>cfg_</name></member>
      <member refid="classhateb__local__planner_1_1BaseTebBinaryEdge_1a0c0f4853fd8744194a18775226f9b731" prot="public" virt="non-virtual"><scope>hateb_local_planner::BaseTebBinaryEdge</scope><name>getError</name></member>
      <member refid="classhateb__local__planner_1_1BaseTebBinaryEdge_1a0b775d38f7afb0f63f9156ed241fbe25" prot="public" virt="virtual"><scope>hateb_local_planner::BaseTebBinaryEdge</scope><name>read</name></member>
      <member refid="classhateb__local__planner_1_1BaseTebBinaryEdge_1abc6ae7a9e1fd02416a4a94cbb785ba19" prot="public" virt="non-virtual"><scope>hateb_local_planner::BaseTebBinaryEdge</scope><name>setHATebConfig</name></member>
      <member refid="classhateb__local__planner_1_1BaseTebBinaryEdge_1a85a24cf969c90917f50cb057173527ca" prot="public" virt="virtual"><scope>hateb_local_planner::BaseTebBinaryEdge</scope><name>write</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
