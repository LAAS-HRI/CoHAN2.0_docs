<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="bt__core_8h" kind="file" language="C++">
    <compoundname>bt_core.h</compoundname>
    <includes local="no">ros/ros.h</includes>
    <includes local="yes">behaviortree_cpp/bt_factory.h</includes>
    <includedby refid="set__mode_8h" local="no">/home/ptsingaman/ros_ws/CoHAN2.0/src/hateb_local_planner/include/hateb_local_planner/behavior_tree/action/set_mode.h</includedby>
    <includedby refid="backoff__exit__condition_8h" local="no">/home/ptsingaman/ros_ws/CoHAN2.0/src/hateb_local_planner/include/hateb_local_planner/behavior_tree/condition/backoff_exit_condition.h</includedby>
    <includedby refid="dual__band__exit__condition_8h" local="no">/home/ptsingaman/ros_ws/CoHAN2.0/src/hateb_local_planner/include/hateb_local_planner/behavior_tree/condition/dual_band_exit_condition.h</includedby>
    <includedby refid="is__goal__reached_8h" local="no">/home/ptsingaman/ros_ws/CoHAN2.0/src/hateb_local_planner/include/hateb_local_planner/behavior_tree/condition/is_goal_reached.h</includedby>
    <includedby refid="is__goal__updated_8h" local="no">/home/ptsingaman/ros_ws/CoHAN2.0/src/hateb_local_planner/include/hateb_local_planner/behavior_tree/condition/is_goal_updated.h</includedby>
    <includedby refid="passthrough__condition_8h" local="no">/home/ptsingaman/ros_ws/CoHAN2.0/src/hateb_local_planner/include/hateb_local_planner/behavior_tree/condition/passthrough_condition.h</includedby>
    <includedby refid="single__band__exit__condition_8h" local="no">/home/ptsingaman/ros_ws/CoHAN2.0/src/hateb_local_planner/include/hateb_local_planner/behavior_tree/condition/single_band_exit_condition.h</includedby>
    <includedby refid="vel__obs__exit__condition_8h" local="no">/home/ptsingaman/ros_ws/CoHAN2.0/src/hateb_local_planner/include/hateb_local_planner/behavior_tree/condition/vel_obs_exit_condition.h</includedby>
    <includedby refid="mode__switch_8h" local="no">/home/ptsingaman/ros_ws/CoHAN2.0/src/hateb_local_planner/include/hateb_local_planner/mode_switch.h</includedby>
    <includedby refid="backoff__exit__condition_8cpp" local="yes">/home/ptsingaman/ros_ws/CoHAN2.0/src/hateb_local_planner/src/behavior_tree/condition/backoff_exit_condition.cpp</includedby>
    <includedby refid="is__goal__updated_8cpp" local="yes">/home/ptsingaman/ros_ws/CoHAN2.0/src/hateb_local_planner/src/behavior_tree/condition/is_goal_updated.cpp</includedby>
    <includedby refid="single__band__exit__condition_8cpp" local="yes">/home/ptsingaman/ros_ws/CoHAN2.0/src/hateb_local_planner/src/behavior_tree/condition/single_band_exit_condition.cpp</includedby>
    <incdepgraph>
      <node id="1">
        <label>/home/ptsingaman/ros_ws/CoHAN2.0/src/hateb_local_planner/include/hateb_local_planner/behavior_tree/bt_core.h</label>
        <link refid="bt__core_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>ros/ros.h</label>
      </node>
      <node id="3">
        <label>behaviortree_cpp/bt_factory.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="15">
        <label>/home/ptsingaman/ros_ws/CoHAN2.0/src/hateb_local_planner/src/behavior_tree/condition/is_goal_updated.cpp</label>
        <link refid="is__goal__updated_8cpp"/>
      </node>
      <node id="18">
        <label>/home/ptsingaman/ros_ws/CoHAN2.0/src/hateb_local_planner/include/hateb_local_planner/behavior_tree/condition/single_band_exit_condition.h</label>
        <link refid="single__band__exit__condition_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>/home/ptsingaman/ros_ws/CoHAN2.0/src/hateb_local_planner/src/behavior_tree/condition/dual_band_exit_condition.cpp</label>
        <link refid="dual__band__exit__condition_8cpp"/>
      </node>
      <node id="7">
        <label>/home/ptsingaman/ros_ws/CoHAN2.0/src/hateb_local_planner/src/behavior_tree/action/set_mode.cpp</label>
        <link refid="set__mode_8cpp"/>
      </node>
      <node id="1">
        <label>/home/ptsingaman/ros_ws/CoHAN2.0/src/hateb_local_planner/include/hateb_local_planner/behavior_tree/bt_core.h</label>
        <link refid="bt__core_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>/home/ptsingaman/ros_ws/CoHAN2.0/src/hateb_local_planner/include/hateb_local_planner/behavior_tree/condition/backoff_exit_condition.h</label>
        <link refid="backoff__exit__condition_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>/home/ptsingaman/ros_ws/CoHAN2.0/src/hateb_local_planner/src/behavior_tree/condition/backoff_exit_condition.cpp</label>
        <link refid="backoff__exit__condition_8cpp"/>
      </node>
      <node id="21">
        <label>/home/ptsingaman/ros_ws/CoHAN2.0/src/hateb_local_planner/src/behavior_tree/condition/vel_obs_exit_condition.cpp</label>
        <link refid="vel__obs__exit__condition_8cpp"/>
      </node>
      <node id="13">
        <label>/home/ptsingaman/ros_ws/CoHAN2.0/src/hateb_local_planner/src/behavior_tree/condition/is_goal_reached.cpp</label>
        <link refid="is__goal__reached_8cpp"/>
      </node>
      <node id="3">
        <label>/home/ptsingaman/ros_ws/CoHAN2.0/src/hateb_local_planner/include/hateb_local_planner/mode_switch.h</label>
        <link refid="mode__switch_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>/home/ptsingaman/ros_ws/CoHAN2.0/src/hateb_local_planner/src/hateb_local_planner_ros.cpp</label>
        <link refid="hateb__local__planner__ros_8cpp"/>
      </node>
      <node id="2">
        <label>/home/ptsingaman/ros_ws/CoHAN2.0/src/hateb_local_planner/include/hateb_local_planner/behavior_tree/action/set_mode.h</label>
        <link refid="set__mode_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>/home/ptsingaman/ros_ws/CoHAN2.0/src/hateb_local_planner/src/behavior_tree/condition/passthrough_condition.cpp</label>
        <link refid="passthrough__condition_8cpp"/>
      </node>
      <node id="14">
        <label>/home/ptsingaman/ros_ws/CoHAN2.0/src/hateb_local_planner/include/hateb_local_planner/behavior_tree/condition/is_goal_updated.h</label>
        <link refid="is__goal__updated_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>/home/ptsingaman/ros_ws/CoHAN2.0/src/hateb_local_planner/include/hateb_local_planner/hateb_local_planner_ros.h</label>
        <link refid="hateb__local__planner__ros_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>/home/ptsingaman/ros_ws/CoHAN2.0/src/hateb_local_planner/include/hateb_local_planner/behavior_tree/condition/is_goal_reached.h</label>
        <link refid="is__goal__reached_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>/home/ptsingaman/ros_ws/CoHAN2.0/src/hateb_local_planner/include/hateb_local_planner/behavior_tree/condition/dual_band_exit_condition.h</label>
        <link refid="dual__band__exit__condition_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>/home/ptsingaman/ros_ws/CoHAN2.0/src/hateb_local_planner/src/mode_switch.cpp</label>
        <link refid="mode__switch_8cpp"/>
      </node>
      <node id="19">
        <label>/home/ptsingaman/ros_ws/CoHAN2.0/src/hateb_local_planner/src/behavior_tree/condition/single_band_exit_condition.cpp</label>
        <link refid="single__band__exit__condition_8cpp"/>
      </node>
      <node id="20">
        <label>/home/ptsingaman/ros_ws/CoHAN2.0/src/hateb_local_planner/include/hateb_local_planner/behavior_tree/condition/vel_obs_exit_condition.h</label>
        <link refid="vel__obs__exit__condition_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>/home/ptsingaman/ros_ws/CoHAN2.0/src/hateb_local_planner/include/hateb_local_planner/behavior_tree/condition/passthrough_condition.h</label>
        <link refid="passthrough__condition_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classhateb__local__planner_1_1StatefulActionNodeROS" prot="public">hateb_local_planner::StatefulActionNodeROS</innerclass>
    <innerclass refid="structhateb__local__planner_1_1ModeInfo" prot="public">hateb_local_planner::ModeInfo</innerclass>
    <innernamespace refid="namespacehateb__local__planner">hateb_local_planner</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="bt__core_8h_1a6ebf6899d6c1c8b7b9d09be872c05aae" prot="public" static="no">
        <name>EPS</name>
        <initializer>0.01</initializer>
        <briefdescription>
<para>Core header file for behavior tree implementation in HATEB local planner. </para>
        </briefdescription>
        <detaileddescription>
<para>This file contains the core definitions and components for implementing behavior trees in the HATEB (Human-Aware Timed Elastic Band) local planner. It provides classes and utilities for creating and managing ROS-integrated behavior tree nodes.</para>
<para>Constants for numerical precision and distance thresholds </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ptsingaman/ros_ws/CoHAN2.0/src/hateb_local_planner/include/hateb_local_planner/behavior_tree/bt_core.h" line="56" column="9" bodyfile="/home/ptsingaman/ros_ws/CoHAN2.0/src/hateb_local_planner/include/hateb_local_planner/behavior_tree/bt_core.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="bt__core_8h_1a2f19df8e766e91807e5038b3bf1db104" prot="public" static="no">
        <name>DIST_EPS</name>
        <initializer>0.06</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ptsingaman/ros_ws/CoHAN2.0/src/hateb_local_planner/include/hateb_local_planner/behavior_tree/bt_core.h" line="57" column="9" bodyfile="/home/ptsingaman/ros_ws/CoHAN2.0/src/hateb_local_planner/include/hateb_local_planner/behavior_tree/bt_core.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="bt__core_8h_1a05c17e4f2dcf680c74216793cdb428f0" prot="public" static="no">
        <name>BTPRINT</name>
        <initializer>0</initializer>
        <briefdescription>
<para>Debug printing configuration and macros When PRINT is enabled, provides colored console output for different message types: </para>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>BT_INFO: Regular informational messages</para>
</listitem><listitem><para>BT_WARN: Warning messages (yellow)</para>
</listitem><listitem><para>BT_ERROR: Error messages (red) </para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ptsingaman/ros_ws/CoHAN2.0/src/hateb_local_planner/include/hateb_local_planner/behavior_tree/bt_core.h" line="66" column="9" bodyfile="/home/ptsingaman/ros_ws/CoHAN2.0/src/hateb_local_planner/include/hateb_local_planner/behavior_tree/bt_core.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="bt__core_8h_1a25ae9fec95ea71254c494b5a594efeb9" prot="public" static="no">
        <name>BT_INFO</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ptsingaman/ros_ws/CoHAN2.0/src/hateb_local_planner/include/hateb_local_planner/behavior_tree/bt_core.h" line="82" column="10" bodyfile="/home/ptsingaman/ros_ws/CoHAN2.0/src/hateb_local_planner/include/hateb_local_planner/behavior_tree/bt_core.h" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="bt__core_8h_1acccaf2336aa9be5441a238d1879da6b7" prot="public" static="no">
        <name>BT_WARN</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ptsingaman/ros_ws/CoHAN2.0/src/hateb_local_planner/include/hateb_local_planner/behavior_tree/bt_core.h" line="83" column="9" bodyfile="/home/ptsingaman/ros_ws/CoHAN2.0/src/hateb_local_planner/include/hateb_local_planner/behavior_tree/bt_core.h" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="bt__core_8h_1a17a6d4e925afade9a4ea0f7662bab72e" prot="public" static="no">
        <name>BT_ERROR</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ptsingaman/ros_ws/CoHAN2.0/src/hateb_local_planner/include/hateb_local_planner/behavior_tree/bt_core.h" line="84" column="9" bodyfile="/home/ptsingaman/ros_ws/CoHAN2.0/src/hateb_local_planner/include/hateb_local_planner/behavior_tree/bt_core.h" bodystart="84" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="bt__core_8h_1a443d59f71cd917451eb358a9d1e5c6c1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double normalize_angle</definition>
        <argsstring>(double angle_radians)</argsstring>
        <name>normalize_angle</name>
        <param>
          <type>double</type>
          <declname>angle_radians</declname>
        </param>
        <briefdescription>
<para>Normalizes an angle to the range [-π, π]. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>angle_radians</parametername>
</parameternamelist>
<parameterdescription>
<para>The input angle to normalize </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The normalized angle in radians </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ptsingaman/ros_ws/CoHAN2.0/src/hateb_local_planner/include/hateb_local_planner/behavior_tree/bt_core.h" line="92" column="15" bodyfile="/home/ptsingaman/ros_ws/CoHAN2.0/src/hateb_local_planner/include/hateb_local_planner/behavior_tree/bt_core.h" bodystart="92" bodyend="92"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*********************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Software<sp/>License<sp/>Agreement<sp/>(BSD<sp/>License)</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2025<sp/>LAAS/CNRS</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/><sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/><sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/><sp/><sp/>*<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/>*<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>copyright<sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>disclaimer<sp/>in<sp/>the<sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/><sp/>*<sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>the<sp/>institute<sp/>nor<sp/>the<sp/>names<sp/>of<sp/>its</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>from<sp/>this<sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/><sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/><sp/>&quot;AS<sp/>IS&quot;<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/><sp/>LIMITED<sp/>TO,<sp/>THE<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/><sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/><sp/>COPYRIGHT<sp/>OWNER<sp/>OR<sp/>CONTRIBUTORS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/><sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/><sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/><sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/><sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/><sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING<sp/>IN</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/><sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*<sp/><sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*<sp/>Author:<sp/>Phani<sp/>Teja<sp/>Singamaneni<sp/>(email:ptsingaman@laas.fr)</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>BT_CORE_HH_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BT_CORE_HH_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ros/ros.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;behaviortree_cpp/bt_factory.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="bt__core_8h_1a6ebf6899d6c1c8b7b9d09be872c05aae" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EPS<sp/>0.01<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Small<sp/>epsilon<sp/>value<sp/>for<sp/>floating-point<sp/>comparisons</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="bt__core_8h_1a2f19df8e766e91807e5038b3bf1db104" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DIST_EPS<sp/>0.06<sp/><sp/></highlight><highlight class="comment">//<sp/>Distance<sp/>threshold<sp/>for<sp/>proximity<sp/>checks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="bt__core_8h_1a05c17e4f2dcf680c74216793cdb428f0" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BTPRINT<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>BTPRINT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BT_INFO(x,<sp/>y)<sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;BT_INFO:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>x<sp/>&lt;&lt;<sp/>&quot;<sp/>-&gt;<sp/>&quot;<sp/>&lt;&lt;<sp/>y<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BT_WARN(x,<sp/>y)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="72"><highlight class="preprocessor"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;\033[33m&quot;</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;BT_WARNING:<sp/>&quot;<sp/>&lt;&lt;<sp/>x<sp/>&lt;&lt;<sp/>&quot;<sp/>-&gt;<sp/>&quot;<sp/>&lt;&lt;<sp/>y<sp/>&lt;&lt;<sp/>std::endl;<sp/>\</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;\033[0m&quot;;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BT_ERROR(x,<sp/>y)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="77"><highlight class="preprocessor"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;\033[31m&quot;</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;BT_ERROR:<sp/>&quot;<sp/>&lt;&lt;<sp/>x<sp/>&lt;&lt;<sp/>&quot;<sp/>-&gt;<sp/>&quot;<sp/>&lt;&lt;<sp/>y<sp/>&lt;&lt;<sp/>std::endl;<sp/>\</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;\033[0m&quot;;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="bt__core_8h_1a25ae9fec95ea71254c494b5a594efeb9" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BT_INFO(x,<sp/>y)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83" refid="bt__core_8h_1acccaf2336aa9be5441a238d1879da6b7" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BT_WARN(x,<sp/>y)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="bt__core_8h_1a17a6d4e925afade9a4ea0f7662bab72e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BT_ERROR(x,<sp/>y)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="92" refid="bt__core_8h_1a443d59f71cd917451eb358a9d1e5c6c1" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="bt__core_8h_1a443d59f71cd917451eb358a9d1e5c6c1" kindref="member">normalize_angle</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>angle_radians)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>angle_radians<sp/>-<sp/>(2.0<sp/>*<sp/>M_PI<sp/>*<sp/>std::floor((angle_radians<sp/>+<sp/>(M_PI))<sp/>/<sp/>(2.0<sp/>*<sp/>M_PI)));<sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="comment">/*This<sp/>part<sp/>of<sp/>the<sp/>code<sp/>is<sp/>inspired<sp/>from<sp/>here:<sp/>https://github.com/BehaviorTree/BehaviorTree.ROS<sp/>(bt_action_node.hh)*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacehateb__local__planner" kindref="compound">hateb_local_planner</ref><sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="104" refid="classhateb__local__planner_1_1StatefulActionNodeROS" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classhateb__local__planner_1_1StatefulActionNodeROS" kindref="compound">StatefulActionNodeROS</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>BT::StatefulActionNode<sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="112" refid="classhateb__local__planner_1_1StatefulActionNodeROS_1afa7e2c97e99dd762daf98af831f57d4a" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classhateb__local__planner_1_1StatefulActionNodeROS_1afa7e2c97e99dd762daf98af831f57d4a" kindref="member">StatefulActionNodeROS</ref>(ros::NodeHandle&amp;<sp/>nh,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BT::NodeConfiguration&amp;<sp/>conf)<sp/>:<sp/>BT::StatefulActionNode(name,<sp/>conf),<sp/><ref refid="classhateb__local__planner_1_1StatefulActionNodeROS_1ab76f9a716b3f82d7fa63e5b05ebda2cc" kindref="member">node_</ref>(nh)<sp/>{}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>using<sp/>BaseClass<sp/>=<sp/>StatefulActionNodeROS&lt;ActionT&gt;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>using<sp/>ActionType<sp/>=<sp/>ActionT;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118" refid="classhateb__local__planner_1_1StatefulActionNodeROS_1a6625f29ea05a03d31f4983b87c32fa73" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classhateb__local__planner_1_1StatefulActionNodeROS_1a6625f29ea05a03d31f4983b87c32fa73" kindref="member">StatefulActionNodeROS</ref>()<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120" refid="classhateb__local__planner_1_1StatefulActionNodeROS_1a402b56b9a0143e3e054f7c3e2b43cadc" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classhateb__local__planner_1_1StatefulActionNodeROS_1a402b56b9a0143e3e054f7c3e2b43cadc" kindref="member">~StatefulActionNodeROS</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="126" refid="classhateb__local__planner_1_1StatefulActionNodeROS_1a68bca1102f4d75131dabf7f2d6b4a0b9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>BT::PortsList<sp/><ref refid="classhateb__local__planner_1_1StatefulActionNodeROS_1a68bca1102f4d75131dabf7f2d6b4a0b9" kindref="member">providedPorts</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{BT::InputPort&lt;std::string&gt;(</highlight><highlight class="stringliteral">&quot;action_name&quot;</highlight><highlight class="normal">)};<sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="132" refid="classhateb__local__planner_1_1StatefulActionNodeROS_1a16bedbc15624933e7d10df17334ed4c9" refkind="member"><highlight class="normal"><sp/><sp/>BT::NodeStatus<sp/><ref refid="classhateb__local__planner_1_1StatefulActionNodeROS_1a16bedbc15624933e7d10df17334ed4c9" kindref="member">onStart</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="138" refid="classhateb__local__planner_1_1StatefulActionNodeROS_1a5e2e443643bb2181e3f0f290d7f46efc" refkind="member"><highlight class="normal"><sp/><sp/>BT::NodeStatus<sp/><ref refid="classhateb__local__planner_1_1StatefulActionNodeROS_1a5e2e443643bb2181e3f0f290d7f46efc" kindref="member">onRunning</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="143" refid="classhateb__local__planner_1_1StatefulActionNodeROS_1a8ea0ea6d9f15a0c499d476cad295c9db" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classhateb__local__planner_1_1StatefulActionNodeROS_1a8ea0ea6d9f15a0c499d476cad295c9db" kindref="member">onHalted</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="146" refid="classhateb__local__planner_1_1StatefulActionNodeROS_1ab76f9a716b3f82d7fa63e5b05ebda2cc" refkind="member"><highlight class="normal"><sp/><sp/>ros::NodeHandle&amp;<sp/><ref refid="classhateb__local__planner_1_1StatefulActionNodeROS_1ab76f9a716b3f82d7fa63e5b05ebda2cc" kindref="member">node_</ref>;<sp/><sp/></highlight><highlight class="comment">//<sp/>ROS<sp/>node<sp/>handle<sp/>for<sp/>communication</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal">};</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DerivedT&gt;</highlight></codeline>
<codeline lineno="160" refid="namespacehateb__local__planner_1a634b06994a4ecb77b1f523162e152c36" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacehateb__local__planner_1a634b06994a4ecb77b1f523162e152c36" kindref="member">RegisterStatefulActionNodeROS</ref>(BT::BehaviorTreeFactory&amp;<sp/>factory,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>registration_ID,<sp/>ros::NodeHandle&amp;<sp/>node_handle)<sp/>{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/>BT::NodeBuilder<sp/>builder<sp/>=<sp/>[&amp;node_handle](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BT::NodeConfiguration&amp;<sp/>config)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_unique&lt;DerivedT&gt;(node_handle,<sp/>name,<sp/>config);<sp/>};</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/>BT::TreeNodeManifest<sp/>manifest;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>manifest.type<sp/>=<sp/>BT::getType&lt;DerivedT&gt;();</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/>manifest.ports<sp/>=<sp/>DerivedT::providedPorts();</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/>manifest.registration_ID<sp/>=<sp/>registration_ID;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>basic_ports<sp/>=<sp/><ref refid="classhateb__local__planner_1_1StatefulActionNodeROS_1a68bca1102f4d75131dabf7f2d6b4a0b9" kindref="member">StatefulActionNodeROS::providedPorts</ref>();</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/>manifest.ports.insert(basic_ports.begin(),<sp/>basic_ports.end());</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/>factory.registerBuilder(manifest,<sp/>builder);</highlight></codeline>
<codeline lineno="170"><highlight class="normal">};</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="176" refid="namespacehateb__local__planner_1abf9d2429f0e193ae1b58a22309f8e7fa" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="namespacehateb__local__planner_1abf9d2429f0e193ae1b58a22309f8e7fa" kindref="member">PLAN</ref><sp/>:<sp/>std::uint8_t<sp/>{</highlight></codeline>
<codeline lineno="177" refid="namespacehateb__local__planner_1abf9d2429f0e193ae1b58a22309f8e7faa920a55168971579d99b33ecbc5a8818d" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespacehateb__local__planner_1abf9d2429f0e193ae1b58a22309f8e7faa920a55168971579d99b33ecbc5a8818d" kindref="member">SINGLE_BAND</ref>,<sp/><sp/></highlight></codeline>
<codeline lineno="178" refid="namespacehateb__local__planner_1abf9d2429f0e193ae1b58a22309f8e7faa2f42651e1382b441e241f275380248f8" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespacehateb__local__planner_1abf9d2429f0e193ae1b58a22309f8e7faa2f42651e1382b441e241f275380248f8" kindref="member">DUAL_BAND</ref>,<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="179" refid="namespacehateb__local__planner_1abf9d2429f0e193ae1b58a22309f8e7faaa6abe4839659313e448501949a814c22" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespacehateb__local__planner_1abf9d2429f0e193ae1b58a22309f8e7faaa6abe4839659313e448501949a814c22" kindref="member">VELOBS</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="180" refid="namespacehateb__local__planner_1abf9d2429f0e193ae1b58a22309f8e7faa0e7a6013dfd67753cefe0fbab4c82512" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespacehateb__local__planner_1abf9d2429f0e193ae1b58a22309f8e7faa0e7a6013dfd67753cefe0fbab4c82512" kindref="member">BACKOFF</ref>,<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><ref refid="namespacehateb__local__planner_1abf9d2429f0e193ae1b58a22309f8e7faaf2b794399c666f8c8779e958d7fe6179" kindref="member">PASSTHROUGH</ref><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="182" refid="namespacehateb__local__planner_1abf9d2429f0e193ae1b58a22309f8e7faaf2b794399c666f8c8779e958d7fe6179" refkind="member"><highlight class="normal">};</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="188" refid="namespacehateb__local__planner_1a9053a9eaf358ea63f7d8f3c651376a8a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="namespacehateb__local__planner_1a9053a9eaf358ea63f7d8f3c651376a8a" kindref="member">PREDICTION</ref><sp/>:<sp/>std::uint8_t<sp/>{</highlight></codeline>
<codeline lineno="189" refid="namespacehateb__local__planner_1a9053a9eaf358ea63f7d8f3c651376a8aae084372d0f97f6da8cf1b9ef9fc4b28b" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespacehateb__local__planner_1a9053a9eaf358ea63f7d8f3c651376a8aae084372d0f97f6da8cf1b9ef9fc4b28b" kindref="member">CONST_VEL</ref>,<sp/><sp/></highlight></codeline>
<codeline lineno="190" refid="namespacehateb__local__planner_1a9053a9eaf358ea63f7d8f3c651376a8aa51415e167991087447c6a0bcaa8663c8" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespacehateb__local__planner_1a9053a9eaf358ea63f7d8f3c651376a8aa51415e167991087447c6a0bcaa8663c8" kindref="member">BEHIND</ref>,<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="191" refid="namespacehateb__local__planner_1a9053a9eaf358ea63f7d8f3c651376a8aa24daee122289cc15d963dffa694e7566" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespacehateb__local__planner_1a9053a9eaf358ea63f7d8f3c651376a8aa24daee122289cc15d963dffa694e7566" kindref="member">PREDICT</ref>,<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><ref refid="namespacehateb__local__planner_1a9053a9eaf358ea63f7d8f3c651376a8aad6a95a52fdca114b7923c4a52cc38f72" kindref="member">EXTERNAL</ref><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="193" refid="namespacehateb__local__planner_1a9053a9eaf358ea63f7d8f3c651376a8aad6a95a52fdca114b7923c4a52cc38f72" refkind="member"><highlight class="normal">};</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&apos;Using&apos;<sp/>leads<sp/>to<sp/>linkage<sp/>errors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200" refid="structhateb__local__planner_1_1ModeInfo" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="201" refid="structhateb__local__planner_1_1ModeInfo_1a10f7775493e4a6f904d26d4d62ff7758" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespacehateb__local__planner_1abf9d2429f0e193ae1b58a22309f8e7fa" kindref="member">PLAN</ref><sp/><ref refid="structhateb__local__planner_1_1ModeInfo_1a10f7775493e4a6f904d26d4d62ff7758" kindref="member">plan</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="202" refid="structhateb__local__planner_1_1ModeInfo_1aea93e9ebc8ca2ab3cb21eff38583d383" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespacehateb__local__planner_1a9053a9eaf358ea63f7d8f3c651376a8a" kindref="member">PREDICTION</ref><sp/><ref refid="structhateb__local__planner_1_1ModeInfo_1aea93e9ebc8ca2ab3cb21eff38583d383" kindref="member">predict</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="203"><highlight class="normal">}<sp/><ref refid="structhateb__local__planner_1_1ModeInfo" kindref="compound">ModeInfo</ref>;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>hateb_local_planner</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/></highlight><highlight class="comment">//<sp/>BT_CORE_HH_</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/ptsingaman/ros_ws/CoHAN2.0/src/hateb_local_planner/include/hateb_local_planner/behavior_tree/bt_core.h"/>
  </compounddef>
</doxygen>
