<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classhateb__local__planner_1_1EdgeAgentRobotSafety" kind="class" language="C++" prot="public">
    <compoundname>hateb_local_planner::EdgeAgentRobotSafety</compoundname>
    <basecompoundref refid="classhateb__local__planner_1_1BaseTebBinaryEdge" prot="public" virt="non-virtual">hateb_local_planner::BaseTebBinaryEdge&lt; 1, double, VertexPose, VertexPose &gt;</basecompoundref>
    <includes refid="edge__agent__robot__safety_8h" local="no">edge_agent_robot_safety.h</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classhateb__local__planner_1_1EdgeAgentRobotSafety_1a2cb8031e36dc6dfcca474ca361155c9f" prot="protected" static="no" mutable="no">
        <type><ref refid="classhateb__local__planner_1_1Obstacle" kindref="compound">Obstacle</ref> *</type>
        <definition>Obstacle* hateb_local_planner::EdgeAgentRobotSafety::obs_</definition>
        <argsstring></argsstring>
        <name>obs_</name>
        <initializer>= new <ref refid="classhateb__local__planner_1_1PointObstacle" kindref="compound">PointObstacle</ref>()</initializer>
        <briefdescription>
<para><ref refid="classhateb__local__planner_1_1Obstacle" kindref="compound">Obstacle</ref> pointer used to represent the agent as a point obstacle for distance calculation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hateb_local_planner/include/hateb_local_planner/g2o_types/edge_agent_robot_safety.h" line="90" column="12" bodyfile="hateb_local_planner/include/hateb_local_planner/g2o_types/edge_agent_robot_safety.h" bodystart="90" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classhateb__local__planner_1_1EdgeAgentRobotSafety_1a35953cc4e30c87c414e556139708de2a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>hateb_local_planner::EdgeAgentRobotSafety::EdgeAgentRobotSafety</definition>
        <argsstring>()</argsstring>
        <name>EdgeAgentRobotSafety</name>
        <briefdescription>
<para>Construct edge and set measurement to zero (unused). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hateb_local_planner/include/hateb_local_planner/g2o_types/edge_agent_robot_safety.h" line="62" column="3" bodyfile="hateb_local_planner/include/hateb_local_planner/g2o_types/edge_agent_robot_safety.h" bodystart="62" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="classhateb__local__planner_1_1EdgeAgentRobotSafety_1a76c0e417f206afeeeb0e502db6f0a11f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void hateb_local_planner::EdgeAgentRobotSafety::computeError</definition>
        <argsstring>() override</argsstring>
        <name>computeError</name>
        <briefdescription>
<para>Compute the error / cost for the edge. </para>
        </briefdescription>
        <detaileddescription>
<para>Calculates the distance between the robot and agent, subtracts the agent radius, and applies a quadratic penalty if the result is below the minimum allowed agent-robot distance. The error is stored in _error[0]. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hateb_local_planner/include/hateb_local_planner/g2o_types/edge_agent_robot_safety.h" line="70" column="8" bodyfile="hateb_local_planner/include/hateb_local_planner/g2o_types/edge_agent_robot_safety.h" bodystart="70" bodyend="84"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Edge defining a safety constraint between a robot and an agent (e.g., human) in the optimization graph. </para>
    </briefdescription>
    <detaileddescription>
<para>This edge penalizes configurations where the robot and an agent come closer than a specified minimum distance. The cost is computed as a quadratic penalty if the distance between the robot (using its footprint model) and the agent (using its radius) is less than cfg_-&gt;hateb.min_agent_robot_dist. The edge is used to enforce social distancing or collision avoidance between the robot and agents.</para>
<para>Inherits from <ref refid="classhateb__local__planner_1_1BaseTebBinaryEdge" kindref="compound">BaseTebBinaryEdge&lt;1, double, VertexPose, VertexPose&gt;</ref>. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>hateb_local_planner::BaseTebBinaryEdge&lt; 1, double, VertexPose, VertexPose &gt;</label>
        <link refid="classhateb__local__planner_1_1BaseTebBinaryEdge"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>hateb_local_planner::EdgeAgentRobotSafety</label>
        <link refid="classhateb__local__planner_1_1EdgeAgentRobotSafety"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>g2o::BaseBinaryEdge&lt; D, double , VertexPose , VertexPose  &gt;</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>hateb_local_planner::BaseTebBinaryEdge&lt; 1, double, VertexPose, VertexPose &gt;</label>
        <link refid="classhateb__local__planner_1_1BaseTebBinaryEdge"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>hateb_local_planner::EdgeAgentRobotSafety</label>
        <link refid="classhateb__local__planner_1_1EdgeAgentRobotSafety"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>obs_</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>g2o::BaseBinaryEdge&lt; D, double , VertexPose , VertexPose  &gt;</label>
      </node>
      <node id="4">
        <label>hateb_local_planner::Obstacle</label>
        <link refid="classhateb__local__planner_1_1Obstacle"/>
      </node>
    </collaborationgraph>
    <location file="hateb_local_planner/include/hateb_local_planner/g2o_types/edge_agent_robot_safety.h" line="57" column="1" bodyfile="hateb_local_planner/include/hateb_local_planner/g2o_types/edge_agent_robot_safety.h" bodystart="57" bodyend="97"/>
    <listofallmembers>
      <member refid="classhateb__local__planner_1_1BaseTebBinaryEdge_1af5ba7be337a1f51e8f000255ffd40e71" prot="protected" virt="non-virtual"><scope>hateb_local_planner::EdgeAgentRobotSafety</scope><name>cfg_</name></member>
      <member refid="classhateb__local__planner_1_1EdgeAgentRobotSafety_1a76c0e417f206afeeeb0e502db6f0a11f" prot="public" virt="non-virtual"><scope>hateb_local_planner::EdgeAgentRobotSafety</scope><name>computeError</name></member>
      <member refid="classhateb__local__planner_1_1EdgeAgentRobotSafety_1a35953cc4e30c87c414e556139708de2a" prot="public" virt="non-virtual"><scope>hateb_local_planner::EdgeAgentRobotSafety</scope><name>EdgeAgentRobotSafety</name></member>
      <member refid="classhateb__local__planner_1_1BaseTebBinaryEdge_1a0c0f4853fd8744194a18775226f9b731" prot="public" virt="non-virtual"><scope>hateb_local_planner::EdgeAgentRobotSafety</scope><name>getError</name></member>
      <member refid="classhateb__local__planner_1_1EdgeAgentRobotSafety_1a2cb8031e36dc6dfcca474ca361155c9f" prot="protected" virt="non-virtual"><scope>hateb_local_planner::EdgeAgentRobotSafety</scope><name>obs_</name></member>
      <member refid="classhateb__local__planner_1_1BaseTebBinaryEdge_1a0b775d38f7afb0f63f9156ed241fbe25" prot="public" virt="virtual"><scope>hateb_local_planner::EdgeAgentRobotSafety</scope><name>read</name></member>
      <member refid="classhateb__local__planner_1_1BaseTebBinaryEdge_1abc6ae7a9e1fd02416a4a94cbb785ba19" prot="public" virt="non-virtual"><scope>hateb_local_planner::EdgeAgentRobotSafety</scope><name>setHATebConfig</name></member>
      <member refid="classhateb__local__planner_1_1BaseTebBinaryEdge_1a85a24cf969c90917f50cb057173527ca" prot="public" virt="virtual"><scope>hateb_local_planner::EdgeAgentRobotSafety</scope><name>write</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
