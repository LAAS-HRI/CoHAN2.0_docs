<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structhateb__local__planner_1_1HATebConfig_1_1Trajectory" kind="struct" language="C++" prot="public">
    <compoundname>hateb_local_planner::HATebConfig::Trajectory</compoundname>
    <includes refid="hateb__config_8h" local="no">hateb_config.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structhateb__local__planner_1_1HATebConfig_1_1Trajectory_1a60ded29166e97d1129e6200136138f97" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool hateb_local_planner::HATebConfig::Trajectory::teb_autosize</definition>
        <argsstring></argsstring>
        <name>teb_autosize</name>
        <briefdescription>
<para>Enable automatic resizing of the trajectory w.r.t to the temporal resolution (recommended) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hateb_local_planner/include/hateb_local_planner/hateb_config.h" line="73" column="10" bodyfile="hateb_local_planner/include/hateb_local_planner/hateb_config.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structhateb__local__planner_1_1HATebConfig_1_1Trajectory_1a822390590b5ca082bcf1f9c511fa4e94" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double hateb_local_planner::HATebConfig::Trajectory::dt_ref</definition>
        <argsstring></argsstring>
        <name>dt_ref</name>
        <briefdescription>
<para>Desired temporal resolution of the trajectory (should be in the magniture of the underlying control rate) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hateb_local_planner/include/hateb_local_planner/hateb_config.h" line="74" column="12" bodyfile="hateb_local_planner/include/hateb_local_planner/hateb_config.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structhateb__local__planner_1_1HATebConfig_1_1Trajectory_1a89f5d80b8a68a0090bde2a6af9e35ac9" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double hateb_local_planner::HATebConfig::Trajectory::dt_hysteresis</definition>
        <argsstring></argsstring>
        <name>dt_hysteresis</name>
        <briefdescription>
<para>Hysteresis for automatic resizing depending on the current temporal resolution (dt): usually 10% of dt_ref. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hateb_local_planner/include/hateb_local_planner/hateb_config.h" line="75" column="12" bodyfile="hateb_local_planner/include/hateb_local_planner/hateb_config.h" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structhateb__local__planner_1_1HATebConfig_1_1Trajectory_1a0a82f2318aec20759ad4e9d8b3d23fda" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int hateb_local_planner::HATebConfig::Trajectory::min_samples</definition>
        <argsstring></argsstring>
        <name>min_samples</name>
        <briefdescription>
<para>Minimum number of samples (should be always greater than 2) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hateb_local_planner/include/hateb_local_planner/hateb_config.h" line="76" column="9" bodyfile="hateb_local_planner/include/hateb_local_planner/hateb_config.h" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structhateb__local__planner_1_1HATebConfig_1_1Trajectory_1a4f84e93d0bd57dbfd5f32b74b33758c0" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int hateb_local_planner::HATebConfig::Trajectory::max_samples</definition>
        <argsstring></argsstring>
        <name>max_samples</name>
        <briefdescription>
<para>Maximum number of samples; Warning: if too small the discretization/resolution might not be sufficient for the given robot model or obstacle avoidance does not work anymore. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hateb_local_planner/include/hateb_local_planner/hateb_config.h" line="77" column="9" bodyfile="hateb_local_planner/include/hateb_local_planner/hateb_config.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structhateb__local__planner_1_1HATebConfig_1_1Trajectory_1ab70310b774aaf3bd819304445c8f3f75" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int hateb_local_planner::HATebConfig::Trajectory::agent_min_samples</definition>
        <argsstring></argsstring>
        <name>agent_min_samples</name>
        <briefdescription>
<para>Minimum number of samples for agent&apos;s teb (should be always greater than 2) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hateb_local_planner/include/hateb_local_planner/hateb_config.h" line="78" column="9" bodyfile="hateb_local_planner/include/hateb_local_planner/hateb_config.h" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structhateb__local__planner_1_1HATebConfig_1_1Trajectory_1add707f9f8389f1885b48fcb9766aacbe" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool hateb_local_planner::HATebConfig::Trajectory::global_plan_overwrite_orientation</definition>
        <argsstring></argsstring>
        <name>global_plan_overwrite_orientation</name>
        <briefdescription>
<para>Overwrite orientation of local subgoals provided by the global planner. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hateb_local_planner/include/hateb_local_planner/hateb_config.h" line="79" column="10" bodyfile="hateb_local_planner/include/hateb_local_planner/hateb_config.h" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structhateb__local__planner_1_1HATebConfig_1_1Trajectory_1a5427e849ae3ac295862dd25e93ddebef" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool hateb_local_planner::HATebConfig::Trajectory::allow_init_with_backwards_motion</definition>
        <argsstring></argsstring>
        <name>allow_init_with_backwards_motion</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>If true, the underlying trajectories might be initialized with backwards motions in case the goal is behind the start within the local costmap (this is only recommended if the robot is equipped with rear sensors) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hateb_local_planner/include/hateb_local_planner/hateb_config.h" line="80" column="10" bodyfile="hateb_local_planner/include/hateb_local_planner/hateb_config.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structhateb__local__planner_1_1HATebConfig_1_1Trajectory_1a6d1d0c422d199b2f23b3de02f7a08ecb" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double hateb_local_planner::HATebConfig::Trajectory::global_plan_viapoint_sep</definition>
        <argsstring></argsstring>
        <name>global_plan_viapoint_sep</name>
        <briefdescription>
<para>Min. separation between each two consecutive via-points extracted from the global plan (if negative: disabled) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hateb_local_planner/include/hateb_local_planner/hateb_config.h" line="82" column="12" bodyfile="hateb_local_planner/include/hateb_local_planner/hateb_config.h" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structhateb__local__planner_1_1HATebConfig_1_1Trajectory_1ab063790bafec214cea31ebb1d0f07ebe" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool hateb_local_planner::HATebConfig::Trajectory::via_points_ordered</definition>
        <argsstring></argsstring>
        <name>via_points_ordered</name>
        <briefdescription>
<para>If true, the planner adheres to the order of via-points in the storage container. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hateb_local_planner/include/hateb_local_planner/hateb_config.h" line="83" column="10" bodyfile="hateb_local_planner/include/hateb_local_planner/hateb_config.h" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structhateb__local__planner_1_1HATebConfig_1_1Trajectory_1ae6237665760251a16e15d98ddc9d84b8" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double hateb_local_planner::HATebConfig::Trajectory::max_global_plan_lookahead_dist</definition>
        <argsstring></argsstring>
        <name>max_global_plan_lookahead_dist</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Specify maximum length (cumulative Euclidean distances) of the subset of the global plan taken into account for optimization [if &lt;=0: disabled; the length is also bounded by the local costmap size!] </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hateb_local_planner/include/hateb_local_planner/hateb_config.h" line="84" column="12" bodyfile="hateb_local_planner/include/hateb_local_planner/hateb_config.h" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structhateb__local__planner_1_1HATebConfig_1_1Trajectory_1a108358a4e88df6fb1ebbeda5e1ede6b4" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double hateb_local_planner::HATebConfig::Trajectory::global_plan_prune_distance</definition>
        <argsstring></argsstring>
        <name>global_plan_prune_distance</name>
        <briefdescription>
<para>Distance between robot and via_points of global plan which is used for pruning. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hateb_local_planner/include/hateb_local_planner/hateb_config.h" line="86" column="12" bodyfile="hateb_local_planner/include/hateb_local_planner/hateb_config.h" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structhateb__local__planner_1_1HATebConfig_1_1Trajectory_1ae16c696f6153f59fd62d32b9f814f3da" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool hateb_local_planner::HATebConfig::Trajectory::exact_arc_length</definition>
        <argsstring></argsstring>
        <name>exact_arc_length</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>If true, the planner uses the exact arc length in velocity, acceleration and turning rate computations [-&gt; increased cpu time], otherwise the euclidean approximation is used. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hateb_local_planner/include/hateb_local_planner/hateb_config.h" line="87" column="10" bodyfile="hateb_local_planner/include/hateb_local_planner/hateb_config.h" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structhateb__local__planner_1_1HATebConfig_1_1Trajectory_1a88ef7918a8113afe897bfdb5a57263e8" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double hateb_local_planner::HATebConfig::Trajectory::force_reinit_new_goal_dist</definition>
        <argsstring></argsstring>
        <name>force_reinit_new_goal_dist</name>
        <briefdescription>
<para>Reinitialize the trajectory if a previous goal is updated with a seperation of more than the specified value in meters (skip hot-starting) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hateb_local_planner/include/hateb_local_planner/hateb_config.h" line="89" column="12" bodyfile="hateb_local_planner/include/hateb_local_planner/hateb_config.h" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structhateb__local__planner_1_1HATebConfig_1_1Trajectory_1adcff814e94e4dd62c22ab3e948d8fae1" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double hateb_local_planner::HATebConfig::Trajectory::force_reinit_new_goal_angular</definition>
        <argsstring></argsstring>
        <name>force_reinit_new_goal_angular</name>
        <briefdescription>
<para>Reinitialize the trajectory if a previous goal is updated with an angular difference of more than the specified value in radians (skip hot-starting) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hateb_local_planner/include/hateb_local_planner/hateb_config.h" line="90" column="12" bodyfile="hateb_local_planner/include/hateb_local_planner/hateb_config.h" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structhateb__local__planner_1_1HATebConfig_1_1Trajectory_1ae7e3146c5eec60002251f2c1ad90e3b2" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int hateb_local_planner::HATebConfig::Trajectory::feasibility_check_no_poses</definition>
        <argsstring></argsstring>
        <name>feasibility_check_no_poses</name>
        <briefdescription>
<para>Specify up to which pose on the predicted plan the feasibility should be checked each sampling interval. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hateb_local_planner/include/hateb_local_planner/hateb_config.h" line="91" column="9" bodyfile="hateb_local_planner/include/hateb_local_planner/hateb_config.h" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structhateb__local__planner_1_1HATebConfig_1_1Trajectory_1af307d5fdacca37ac1984f2ede23963dc" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool hateb_local_planner::HATebConfig::Trajectory::publish_feedback</definition>
        <argsstring></argsstring>
        <name>publish_feedback</name>
        <briefdescription>
<para>Publish planner feedback containing the full trajectory and a list of active obstacles (should be enabled only for evaluation or debugging purposes) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hateb_local_planner/include/hateb_local_planner/hateb_config.h" line="92" column="10" bodyfile="hateb_local_planner/include/hateb_local_planner/hateb_config.h" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structhateb__local__planner_1_1HATebConfig_1_1Trajectory_1a759bf64c3c0a01866b2df45c0d187857" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double hateb_local_planner::HATebConfig::Trajectory::min_resolution_collision_check_angular</definition>
        <argsstring></argsstring>
        <name>min_resolution_collision_check_angular</name>
        <briefdescription>
<para>Min angular resolution used during the costmap collision check. If not respected, intermediate samples are added. [rad]. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hateb_local_planner/include/hateb_local_planner/hateb_config.h" line="93" column="12" bodyfile="hateb_local_planner/include/hateb_local_planner/hateb_config.h" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structhateb__local__planner_1_1HATebConfig_1_1Trajectory_1a0aed4a0e9e478c89960f99f37c56de37" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int hateb_local_planner::HATebConfig::Trajectory::control_look_ahead_poses</definition>
        <argsstring></argsstring>
        <name>control_look_ahead_poses</name>
        <briefdescription>
<para>Index of the pose used to extract the velocity command. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hateb_local_planner/include/hateb_local_planner/hateb_config.h" line="94" column="9" bodyfile="hateb_local_planner/include/hateb_local_planner/hateb_config.h" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structhateb__local__planner_1_1HATebConfig_1_1Trajectory_1a729af3b58173ea548eb2ec8cba8cd4d2" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double hateb_local_planner::HATebConfig::Trajectory::teb_init_skip_dist</definition>
        <argsstring></argsstring>
        <name>teb_init_skip_dist</name>
        <briefdescription>
<para>How much distance needs to be skipped before calculating the plan. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hateb_local_planner/include/hateb_local_planner/hateb_config.h" line="95" column="12" bodyfile="hateb_local_planner/include/hateb_local_planner/hateb_config.h" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structhateb__local__planner_1_1HATebConfig_1_1Trajectory_1a5e2fa58cf68db42a2a44ca4e855e6319" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double hateb_local_planner::HATebConfig::Trajectory::visualize_with_time_as_z_axis_scale</definition>
        <argsstring></argsstring>
        <name>visualize_with_time_as_z_axis_scale</name>
        <briefdescription>
<para>Scaling factor for visualizing the trajectory in 3D with time as z-axis. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hateb_local_planner/include/hateb_local_planner/hateb_config.h" line="96" column="12" bodyfile="hateb_local_planner/include/hateb_local_planner/hateb_config.h" bodystart="96" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="structhateb__local__planner_1_1HATebConfig_1_1Trajectory" kindref="compound">Trajectory</ref> related parameters. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="hateb_local_planner/include/hateb_local_planner/hateb_config.h" line="72" column="3" bodyfile="hateb_local_planner/include/hateb_local_planner/hateb_config.h" bodystart="72" bodyend="97"/>
    <listofallmembers>
      <member refid="structhateb__local__planner_1_1HATebConfig_1_1Trajectory_1ab70310b774aaf3bd819304445c8f3f75" prot="public" virt="non-virtual"><scope>hateb_local_planner::HATebConfig::Trajectory</scope><name>agent_min_samples</name></member>
      <member refid="structhateb__local__planner_1_1HATebConfig_1_1Trajectory_1a5427e849ae3ac295862dd25e93ddebef" prot="public" virt="non-virtual"><scope>hateb_local_planner::HATebConfig::Trajectory</scope><name>allow_init_with_backwards_motion</name></member>
      <member refid="structhateb__local__planner_1_1HATebConfig_1_1Trajectory_1a0aed4a0e9e478c89960f99f37c56de37" prot="public" virt="non-virtual"><scope>hateb_local_planner::HATebConfig::Trajectory</scope><name>control_look_ahead_poses</name></member>
      <member refid="structhateb__local__planner_1_1HATebConfig_1_1Trajectory_1a89f5d80b8a68a0090bde2a6af9e35ac9" prot="public" virt="non-virtual"><scope>hateb_local_planner::HATebConfig::Trajectory</scope><name>dt_hysteresis</name></member>
      <member refid="structhateb__local__planner_1_1HATebConfig_1_1Trajectory_1a822390590b5ca082bcf1f9c511fa4e94" prot="public" virt="non-virtual"><scope>hateb_local_planner::HATebConfig::Trajectory</scope><name>dt_ref</name></member>
      <member refid="structhateb__local__planner_1_1HATebConfig_1_1Trajectory_1ae16c696f6153f59fd62d32b9f814f3da" prot="public" virt="non-virtual"><scope>hateb_local_planner::HATebConfig::Trajectory</scope><name>exact_arc_length</name></member>
      <member refid="structhateb__local__planner_1_1HATebConfig_1_1Trajectory_1ae7e3146c5eec60002251f2c1ad90e3b2" prot="public" virt="non-virtual"><scope>hateb_local_planner::HATebConfig::Trajectory</scope><name>feasibility_check_no_poses</name></member>
      <member refid="structhateb__local__planner_1_1HATebConfig_1_1Trajectory_1adcff814e94e4dd62c22ab3e948d8fae1" prot="public" virt="non-virtual"><scope>hateb_local_planner::HATebConfig::Trajectory</scope><name>force_reinit_new_goal_angular</name></member>
      <member refid="structhateb__local__planner_1_1HATebConfig_1_1Trajectory_1a88ef7918a8113afe897bfdb5a57263e8" prot="public" virt="non-virtual"><scope>hateb_local_planner::HATebConfig::Trajectory</scope><name>force_reinit_new_goal_dist</name></member>
      <member refid="structhateb__local__planner_1_1HATebConfig_1_1Trajectory_1add707f9f8389f1885b48fcb9766aacbe" prot="public" virt="non-virtual"><scope>hateb_local_planner::HATebConfig::Trajectory</scope><name>global_plan_overwrite_orientation</name></member>
      <member refid="structhateb__local__planner_1_1HATebConfig_1_1Trajectory_1a108358a4e88df6fb1ebbeda5e1ede6b4" prot="public" virt="non-virtual"><scope>hateb_local_planner::HATebConfig::Trajectory</scope><name>global_plan_prune_distance</name></member>
      <member refid="structhateb__local__planner_1_1HATebConfig_1_1Trajectory_1a6d1d0c422d199b2f23b3de02f7a08ecb" prot="public" virt="non-virtual"><scope>hateb_local_planner::HATebConfig::Trajectory</scope><name>global_plan_viapoint_sep</name></member>
      <member refid="structhateb__local__planner_1_1HATebConfig_1_1Trajectory_1ae6237665760251a16e15d98ddc9d84b8" prot="public" virt="non-virtual"><scope>hateb_local_planner::HATebConfig::Trajectory</scope><name>max_global_plan_lookahead_dist</name></member>
      <member refid="structhateb__local__planner_1_1HATebConfig_1_1Trajectory_1a4f84e93d0bd57dbfd5f32b74b33758c0" prot="public" virt="non-virtual"><scope>hateb_local_planner::HATebConfig::Trajectory</scope><name>max_samples</name></member>
      <member refid="structhateb__local__planner_1_1HATebConfig_1_1Trajectory_1a759bf64c3c0a01866b2df45c0d187857" prot="public" virt="non-virtual"><scope>hateb_local_planner::HATebConfig::Trajectory</scope><name>min_resolution_collision_check_angular</name></member>
      <member refid="structhateb__local__planner_1_1HATebConfig_1_1Trajectory_1a0a82f2318aec20759ad4e9d8b3d23fda" prot="public" virt="non-virtual"><scope>hateb_local_planner::HATebConfig::Trajectory</scope><name>min_samples</name></member>
      <member refid="structhateb__local__planner_1_1HATebConfig_1_1Trajectory_1af307d5fdacca37ac1984f2ede23963dc" prot="public" virt="non-virtual"><scope>hateb_local_planner::HATebConfig::Trajectory</scope><name>publish_feedback</name></member>
      <member refid="structhateb__local__planner_1_1HATebConfig_1_1Trajectory_1a60ded29166e97d1129e6200136138f97" prot="public" virt="non-virtual"><scope>hateb_local_planner::HATebConfig::Trajectory</scope><name>teb_autosize</name></member>
      <member refid="structhateb__local__planner_1_1HATebConfig_1_1Trajectory_1a729af3b58173ea548eb2ec8cba8cd4d2" prot="public" virt="non-virtual"><scope>hateb_local_planner::HATebConfig::Trajectory</scope><name>teb_init_skip_dist</name></member>
      <member refid="structhateb__local__planner_1_1HATebConfig_1_1Trajectory_1ab063790bafec214cea31ebb1d0f07ebe" prot="public" virt="non-virtual"><scope>hateb_local_planner::HATebConfig::Trajectory</scope><name>via_points_ordered</name></member>
      <member refid="structhateb__local__planner_1_1HATebConfig_1_1Trajectory_1a5e2fa58cf68db42a2a44ca4e855e6319" prot="public" virt="non-virtual"><scope>hateb_local_planner::HATebConfig::Trajectory</scope><name>visualize_with_time_as_z_axis_scale</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
