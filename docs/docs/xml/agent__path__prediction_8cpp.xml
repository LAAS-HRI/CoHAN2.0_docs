<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="agent__path__prediction_8cpp" kind="file" language="C++">
    <compoundname>agent_path_prediction.cpp</compoundname>
    <includes refid="agent__path__prediction_8h" local="no">agent_path_prediction/agent_path_prediction.h</includes>
    <includes refid="predict__goal__ros_8h" local="no">agent_path_prediction/predict_goal_ros.h</includes>
    <includes local="no">csignal</includes>
    <includes local="no">utility</includes>
    <incdepgraph>
      <node id="43">
        <label>cohan_msgs/TrackedAgent.h</label>
      </node>
      <node id="17">
        <label>cohan_msgs/AgentPathArray.h</label>
      </node>
      <node id="1">
        <label>/home/ptsingaman/ros_ws/CoHAN2.0/src/agent_path_prediction/src/agent_path_prediction.cpp</label>
        <link refid="agent__path__prediction_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>geometry_msgs/PoseArray.h</label>
      </node>
      <node id="36">
        <label>nav_msgs/GetPlan.h</label>
      </node>
      <node id="37">
        <label>std_srvs/Empty.h</label>
      </node>
      <node id="40">
        <label>tf/transform_listener.h</label>
      </node>
      <node id="41">
        <label>visualization_msgs/MarkerArray.h</label>
      </node>
      <node id="4">
        <label>agent_path_prediction/AgentPathPredictionConfig.h</label>
      </node>
      <node id="8">
        <label>agent_path_prediction/PredictedGoals.h</label>
      </node>
      <node id="22">
        <label>cohan_msgs/TrackedSegmentType.h</label>
      </node>
      <node id="7">
        <label>agent_path_prediction/PredictedGoal.h</label>
      </node>
      <node id="33">
        <label>dynamic_reconfigure/IntParameter.h</label>
      </node>
      <node id="18">
        <label>cohan_msgs/AgentTrajectory.h</label>
      </node>
      <node id="21">
        <label>cohan_msgs/TrackedAgents.h</label>
      </node>
      <node id="26">
        <label>cmath</label>
      </node>
      <node id="23">
        <label>Eigen/Core</label>
      </node>
      <node id="24">
        <label>string</label>
      </node>
      <node id="3">
        <label>agent_path_prediction/AgentGoal.h</label>
      </node>
      <node id="28">
        <label>map</label>
      </node>
      <node id="12">
        <label>tf2/utils.h</label>
      </node>
      <node id="6">
        <label>agent_path_prediction/AgentPosePredict.h</label>
      </node>
      <node id="31">
        <label>dynamic_reconfigure/Config.h</label>
      </node>
      <node id="11">
        <label>tf2/convert.h</label>
      </node>
      <node id="5">
        <label>agent_path_prediction/AgentPose.h</label>
      </node>
      <node id="35">
        <label>dynamic_reconfigure/server.h</label>
      </node>
      <node id="2">
        <label>agent_path_prediction/agent_path_prediction.h</label>
        <link refid="agent__path__prediction_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>yaml-cpp/yaml.h</label>
      </node>
      <node id="25">
        <label>agent_path_prediction/predict_goal.h</label>
        <link refid="predict__goal_8h"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>costmap_2d/costmap_2d_ros.h</label>
      </node>
      <node id="38">
        <label>std_srvs/SetBool.h</label>
      </node>
      <node id="30">
        <label>vector</label>
      </node>
      <node id="29">
        <label>utility</label>
      </node>
      <node id="10">
        <label>ros/ros.h</label>
      </node>
      <node id="16">
        <label>agent_path_prediction/AgentsInfo.h</label>
      </node>
      <node id="20">
        <label>cohan_msgs/StateArray.h</label>
      </node>
      <node id="39">
        <label>std_srvs/Trigger.h</label>
      </node>
      <node id="42">
        <label>agent_path_prediction/predict_goal_ros.h</label>
        <link refid="predict__goal__ros_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>dynamic_reconfigure/Reconfigure.h</label>
      </node>
      <node id="14">
        <label>tf2_ros/transform_listener.h</label>
      </node>
      <node id="27">
        <label>eigen3/Eigen/Core</label>
      </node>
      <node id="46">
        <label>csignal</label>
      </node>
      <node id="32">
        <label>dynamic_reconfigure/DoubleParameter.h</label>
      </node>
      <node id="13">
        <label>tf2_ros/buffer.h</label>
      </node>
      <node id="9">
        <label>agent_path_prediction/agents_class.h</label>
        <link refid="agents__class_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>cohan_msgs/AgentTrajectoryArray.h</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespaceagents">agents</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="agent__path__prediction_8cpp_1aa289a35d77148ac0299dea3bd75fc4d1" prot="public" static="no">
        <name>AGENTS_SUB_TOPIC</name>
        <initializer>&quot;/tracked_agents&quot;</initializer>
        <briefdescription>
<para>Absolute topic name for the tracked agents. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ptsingaman/ros_ws/CoHAN2.0/src/agent_path_prediction/src/agent_path_prediction.cpp" line="45" column="9" bodyfile="/home/ptsingaman/ros_ws/CoHAN2.0/src/agent_path_prediction/src/agent_path_prediction.cpp" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="agent__path__prediction_8cpp_1a28505835e5427c2308453f69c4bffa07" prot="public" static="no">
        <name>GET_PLAN_SRV_NAME</name>
        <initializer>&quot;/move_base/GlobalPlanner/make_plan&quot;</initializer>
        <briefdescription>
<para>Absolute service name for the global planner. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ptsingaman/ros_ws/CoHAN2.0/src/agent_path_prediction/src/agent_path_prediction.cpp" line="46" column="9" bodyfile="/home/ptsingaman/ros_ws/CoHAN2.0/src/agent_path_prediction/src/agent_path_prediction.cpp" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="agent__path__prediction_8cpp_1ac9a459e1cc25dd40b2d3e50d421c4e9d" prot="public" static="no">
        <name>PREDICTED_GOAL_SUB_TOPIC</name>
        <initializer>&quot;predicted_goal&quot;</initializer>
        <briefdescription>
<para>Relative topic name for the predicted goal. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ptsingaman/ros_ws/CoHAN2.0/src/agent_path_prediction/src/agent_path_prediction.cpp" line="47" column="9" bodyfile="/home/ptsingaman/ros_ws/CoHAN2.0/src/agent_path_prediction/src/agent_path_prediction.cpp" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="agent__path__prediction_8cpp_1a2783b6a2ea72933997aed59b59ae3f7f" prot="public" static="no">
        <name>EXTERNAL_PATHS_SUB_TOPIC</name>
        <initializer>&quot;external_agent_paths&quot;</initializer>
        <briefdescription>
<para>Relative topic name for the external agent paths. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ptsingaman/ros_ws/CoHAN2.0/src/agent_path_prediction/src/agent_path_prediction.cpp" line="48" column="9" bodyfile="/home/ptsingaman/ros_ws/CoHAN2.0/src/agent_path_prediction/src/agent_path_prediction.cpp" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="agent__path__prediction_8cpp_1ab68760c2385d64dcd75083f587cb32f2" prot="public" static="no">
        <name>ROBOT_FRAME_ID</name>
        <initializer>&quot;base_footprint&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ptsingaman/ros_ws/CoHAN2.0/src/agent_path_prediction/src/agent_path_prediction.cpp" line="49" column="9" bodyfile="/home/ptsingaman/ros_ws/CoHAN2.0/src/agent_path_prediction/src/agent_path_prediction.cpp" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="agent__path__prediction_8cpp_1a3923a3ded552ac37bea50521f4c0e19f" prot="public" static="no">
        <name>MAP_FRAME_ID</name>
        <initializer>&quot;map&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ptsingaman/ros_ws/CoHAN2.0/src/agent_path_prediction/src/agent_path_prediction.cpp" line="50" column="9" bodyfile="/home/ptsingaman/ros_ws/CoHAN2.0/src/agent_path_prediction/src/agent_path_prediction.cpp" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="agent__path__prediction_8cpp_1a0e63830df919f825d5d9ce05f5bac840" prot="public" static="no">
        <name>AGENT_DIST_BEHIND_ROBOT</name>
        <initializer>0.5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ptsingaman/ros_ws/CoHAN2.0/src/agent_path_prediction/src/agent_path_prediction.cpp" line="52" column="9" bodyfile="/home/ptsingaman/ros_ws/CoHAN2.0/src/agent_path_prediction/src/agent_path_prediction.cpp" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="agent__path__prediction_8cpp_1af0e126bb83c684d0b97a1a66834d78c5" prot="public" static="no">
        <name>AGENT_ANGLE_BEHIND_ROBOT</name>
        <initializer>3.14</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ptsingaman/ros_ws/CoHAN2.0/src/agent_path_prediction/src/agent_path_prediction.cpp" line="53" column="9" bodyfile="/home/ptsingaman/ros_ws/CoHAN2.0/src/agent_path_prediction/src/agent_path_prediction.cpp" bodystart="53" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="agent__path__prediction_8cpp_1a458379afdbad052bb3077d6b425d2fee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sigintHandler</definition>
        <argsstring>(int sig)</argsstring>
        <name>sigintHandler</name>
        <param>
          <type>int</type>
          <declname>sig</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ptsingaman/ros_ws/CoHAN2.0/src/agent_path_prediction/src/agent_path_prediction.cpp" line="1032" column="6" bodyfile="/home/ptsingaman/ros_ws/CoHAN2.0/src/agent_path_prediction/src/agent_path_prediction.cpp" bodystart="1032" bodyend="1037"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*********************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Software<sp/>License<sp/>Agreement<sp/>(BSD<sp/>License)</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2020<sp/>LAAS/CNRS</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/><sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/><sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/><sp/><sp/>*<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/>*<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>copyright<sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>disclaimer<sp/>in<sp/>the<sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/><sp/>*<sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>the<sp/>institute<sp/>nor<sp/>the<sp/>names<sp/>of<sp/>its</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>from<sp/>this<sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/><sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/><sp/>&quot;AS<sp/>IS&quot;<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/><sp/>LIMITED<sp/>TO,<sp/>THE<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/><sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/><sp/>COPYRIGHT<sp/>OWNER<sp/>OR<sp/>CONTRIBUTORS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/><sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/><sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/><sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/><sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/><sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING<sp/>IN</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/><sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*<sp/><sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*<sp/><sp/>Authors:<sp/>Phani<sp/>Teja<sp/>Singamaneni</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="agent__path__prediction_8h" kindref="compound">agent_path_prediction/agent_path_prediction.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="predict__goal__ros_8h" kindref="compound">agent_path_prediction/predict_goal_ros.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;csignal&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;utility&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Reconfigurable<sp/>Parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AGENTS_SUB_TOPIC<sp/>&quot;/tracked_agents&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GET_PLAN_SRV_NAME<sp/>&quot;/move_base/GlobalPlanner/make_plan&quot;</highlight><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PREDICTED_GOAL_SUB_TOPIC<sp/>&quot;predicted_goal&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EXTERNAL_PATHS_SUB_TOPIC<sp/>&quot;external_agent_paths&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ROBOT_FRAME_ID<sp/>&quot;base_footprint&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAP_FRAME_ID<sp/>&quot;map&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AGENT_DIST_BEHIND_ROBOT<sp/>0.5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AGENT_ANGLE_BEHIND_ROBOT<sp/>3.14</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceagents" kindref="compound">agents</ref><sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classagents_1_1AgentPathPrediction_1abf79deb87acd0d6ddc422cd41c8b1f12" kindref="member">AgentPathPrediction::initialize</ref>()<sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>private<sp/>node<sp/>handle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>ros::NodeHandle<sp/>private_nh(</highlight><highlight class="stringliteral">&quot;~/&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Load<sp/>params<sp/>from<sp/>the<sp/>server</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><ref refid="classagents_1_1AgentPathPrediction_1aca97abb045a6aca7039888300a4d0b02" kindref="member">loadRosParamFromNodeHandle</ref>(private_nh);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>Publishers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><ref refid="classagents_1_1AgentPathPrediction_1aa33c01aa205fc7b6c2d9b24791b73ec7" kindref="member">predicted_agents_pub_</ref><sp/>=<sp/>private_nh.advertise&lt;visualization_msgs::MarkerArray&gt;(</highlight><highlight class="stringliteral">&quot;predicted_agent_poses&quot;</highlight><highlight class="normal">,<sp/>1);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><ref refid="classagents_1_1AgentPathPrediction_1a2687e915d54148e4e53ed89e5490146d" kindref="member">front_pose_pub_</ref><sp/>=<sp/>private_nh.advertise&lt;geometry_msgs::PoseStamped&gt;(</highlight><highlight class="stringliteral">&quot;front_pose&quot;</highlight><highlight class="normal">,<sp/>1);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>Service<sp/>servers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><ref refid="classagents_1_1AgentPathPrediction_1af92b6c8fe2063d671924d74a674a3c8b" kindref="member">set_goal_srv_</ref><sp/>=<sp/>private_nh.advertiseService(</highlight><highlight class="stringliteral">&quot;set_agent_goal&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classagents_1_1AgentPathPrediction_1a1902b77fbbb4508d97b7abdb9f678d44" kindref="member">AgentPathPrediction::setGoal</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><ref refid="classagents_1_1AgentPathPrediction_1ac0aab71b6951404d22a4798791ccfd8d" kindref="member">predict_agents_server_</ref><sp/>=<sp/>private_nh.advertiseService(</highlight><highlight class="stringliteral">&quot;predict_agent_poses&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classagents_1_1AgentPathPrediction_1a8ee637e4ab1d96d544616bd486487626" kindref="member">AgentPathPrediction::predictAgents</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><ref refid="classagents_1_1AgentPathPrediction_1ab99f95b4cacbc1c0bbec69cf390d7c17" kindref="member">reset_prediction_services_server_</ref><sp/>=<sp/>private_nh.advertiseService(</highlight><highlight class="stringliteral">&quot;reset_prediction_services&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classagents_1_1AgentPathPrediction_1aaecabcfff1c9e20f2630b2df29884ec7" kindref="member">AgentPathPrediction::resetPredictionSrvs</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Need<sp/>to<sp/>remap<sp/>subscriber<sp/>properly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classagents_1_1AgentPathPrediction_1a6d79011b10a83cf459f420c4dccc9970" kindref="member">ns_</ref>.empty())<sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classagents_1_1AgentPathPrediction_1aed35715dd7ddc625f7b84fffbdaab39c" kindref="member">tracked_agents_sub_topic_</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="classagents_1_1AgentPathPrediction_1a6d79011b10a83cf459f420c4dccc9970" kindref="member">ns_</ref><sp/>+<sp/><ref refid="classagents_1_1AgentPathPrediction_1aed35715dd7ddc625f7b84fffbdaab39c" kindref="member">tracked_agents_sub_topic_</ref>;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classagents_1_1AgentPathPrediction_1a9d10d00a04ab902e039a7e604ad4d081" kindref="member">get_plan_srv_name_</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="classagents_1_1AgentPathPrediction_1a6d79011b10a83cf459f420c4dccc9970" kindref="member">ns_</ref><sp/>+<sp/><ref refid="classagents_1_1AgentPathPrediction_1a9d10d00a04ab902e039a7e604ad4d081" kindref="member">get_plan_srv_name_</ref>;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>Subscribers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><ref refid="classagents_1_1AgentPathPrediction_1a9d9f7d4a56481b5c2bbbbf41337b2e8b" kindref="member">tracked_agents_sub_</ref><sp/>=<sp/>private_nh.subscribe(<ref refid="classagents_1_1AgentPathPrediction_1aed35715dd7ddc625f7b84fffbdaab39c" kindref="member">tracked_agents_sub_topic_</ref>,<sp/>1,<sp/>&amp;<ref refid="classagents_1_1AgentPathPrediction_1a40363289d5f7d9dfa58493604ab4b91c" kindref="member">AgentPathPrediction::trackedAgentsCB</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><ref refid="classagents_1_1AgentPathPrediction_1a90fa0fd275ac50f1e1051ec9f6e1e1ea" kindref="member">external_paths_sub_</ref><sp/>=<sp/>private_nh.subscribe(<ref refid="classagents_1_1AgentPathPrediction_1aa744d899adca2e86cfde863baad35a22" kindref="member">external_paths_sub_topic_</ref>,<sp/>1,<sp/>&amp;<ref refid="classagents_1_1AgentPathPrediction_1aa44789915f8b41fb1bd7e24351df01a5" kindref="member">AgentPathPrediction::externalPathsCB</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><ref refid="classagents_1_1AgentPathPrediction_1a9254465efddb8c760ae752fddce2f342" kindref="member">predicted_goal_sub_</ref><sp/>=<sp/>private_nh.subscribe(<ref refid="classagents_1_1AgentPathPrediction_1a813c7bacce62a89d7b6e10ea17482853" kindref="member">predicted_goal_topic_</ref>,<sp/>1,<sp/>&amp;<ref refid="classagents_1_1AgentPathPrediction_1a8dd8262cfc492bfa50b9146377fd999d" kindref="member">AgentPathPrediction::predictedGoalCB</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>Service<sp/>clients</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><ref refid="classagents_1_1AgentPathPrediction_1a6f1e33b71d3cdc779a19e3c0b103868e" kindref="member">get_plan_client_</ref><sp/>=<sp/>private_nh.serviceClient&lt;nav_msgs::GetPlan&gt;(<ref refid="classagents_1_1AgentPathPrediction_1a9d10d00a04ab902e039a7e604ad4d081" kindref="member">get_plan_srv_name_</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Set-up<sp/>dynamic<sp/>reconfigure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><ref refid="classagents_1_1AgentPathPrediction_1af5c9cc3f7909ef3a853aebe2e3af4f6e" kindref="member">dsrv_</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>dynamic_reconfigure::Server&lt;agent_path_prediction::AgentPathPredictionConfig&gt;(private_nh);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/>dynamic_reconfigure::Server&lt;agent_path_prediction::AgentPathPredictionConfig&gt;::CallbackType<sp/>cb<sp/>=<sp/>boost::bind(&amp;<ref refid="classagents_1_1AgentPathPrediction_1ac49360a95819b8945c5861f8b2fe3f1c" kindref="member">AgentPathPrediction::reconfigureCB</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_1,<sp/>_2);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><ref refid="classagents_1_1AgentPathPrediction_1af5c9cc3f7909ef3a853aebe2e3af4f6e" kindref="member">dsrv_</ref>-&gt;setCallback(cb);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>properties</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><ref refid="classagents_1_1AgentPathPrediction_1aa9a691a634bc23253152db5c41c99776" kindref="member">showing_markers_</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><ref refid="classagents_1_1AgentPathPrediction_1a7bccec7ac9341244d43cac64b79e9470" kindref="member">got_new_agent_paths_</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><ref refid="classagents_1_1AgentPathPrediction_1a96786bf5f15d2267b3d2e0174726846d" kindref="member">got_external_goal_</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>ROS_DEBUG_NAMED(<ref refid="agent__path__prediction_8h_1a8cc8d559acdd2f74085b20977182d5b7" kindref="member">NODE_NAME</ref>,<sp/></highlight><highlight class="stringliteral">&quot;node<sp/>%s<sp/>initialized&quot;</highlight><highlight class="normal">,<sp/><ref refid="agent__path__prediction_8h_1a8cc8d559acdd2f74085b20977182d5b7" kindref="member">NODE_NAME</ref>);</highlight></codeline>
<codeline lineno="98"><highlight class="normal">}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classagents_1_1AgentPathPrediction_1a40363289d5f7d9dfa58493604ab4b91c" kindref="member">AgentPathPrediction::trackedAgentsCB</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cohan_msgs::TrackedAgents<sp/>&amp;tracked_agents)<sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>ROS_INFO_ONCE_NAMED(<ref refid="agent__path__prediction_8h_1a8cc8d559acdd2f74085b20977182d5b7" kindref="member">NODE_NAME</ref>,<sp/></highlight><highlight class="stringliteral">&quot;agent_path_prediction:<sp/>received<sp/>agents&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><ref refid="classagents_1_1AgentPathPrediction_1a0dbc4afec33d4b2af269c3853dca8747" kindref="member">tracked_agents_</ref><sp/>=<sp/>tracked_agents;</highlight></codeline>
<codeline lineno="103"><highlight class="normal">}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classagents_1_1AgentPathPrediction_1aa44789915f8b41fb1bd7e24351df01a5" kindref="member">AgentPathPrediction::externalPathsCB</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cohan_msgs::AgentPathArray::ConstPtr<sp/>&amp;external_paths)<sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/>ROS_INFO_ONCE_NAMED(<ref refid="agent__path__prediction_8h_1a8cc8d559acdd2f74085b20977182d5b7" kindref="member">NODE_NAME</ref>,<sp/></highlight><highlight class="stringliteral">&quot;agent_path_prediction:<sp/>received<sp/>agent<sp/>paths&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><ref refid="classagents_1_1AgentPathPrediction_1aa9ea4b0c1dce20b9c941795d76a90bf5" kindref="member">external_paths_</ref><sp/>=<sp/>external_paths;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><ref refid="classagents_1_1AgentPathPrediction_1a7bccec7ac9341244d43cac64b79e9470" kindref="member">got_new_agent_paths_</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="109"><highlight class="normal">}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classagents_1_1AgentPathPrediction_1a8dd8262cfc492bfa50b9146377fd999d" kindref="member">AgentPathPrediction::predictedGoalCB</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>agent_path_prediction::PredictedGoals::ConstPtr<sp/>&amp;predicted_goals)<sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>ROS_INFO_ONCE_NAMED(<ref refid="agent__path__prediction_8h_1a8cc8d559acdd2f74085b20977182d5b7" kindref="member">NODE_NAME</ref>,<sp/></highlight><highlight class="stringliteral">&quot;agent_path_prediction:<sp/>received<sp/>predicted<sp/>goal&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><ref refid="classagents_1_1AgentPathPrediction_1a01a4ae3f6114bc5d764a2df955d23077" kindref="member">predicted_goals_</ref><sp/>=<sp/>*predicted_goals;</highlight></codeline>
<codeline lineno="114"><highlight class="normal">}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classagents_1_1AgentPathPrediction_1a8ee637e4ab1d96d544616bd486487626" kindref="member">AgentPathPrediction::predictAgents</ref>(agent_path_prediction::AgentPosePredict::Request<sp/>&amp;req,<sp/>agent_path_prediction::AgentPosePredict::Response<sp/>&amp;res)<sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/>boost::function&lt;bool(agent_path_prediction::AgentPosePredict::Request<sp/>&amp;<sp/>req,<sp/>agent_path_prediction::AgentPosePredict::Response<sp/>&amp;<sp/>res)&gt;<sp/>prediction_function;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(req.type)<sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>agent_path_prediction::AgentPosePredictRequest::VELOCITY_OBSTACLE:</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>prediction_function<sp/>=<sp/>boost::bind(&amp;<ref refid="classagents_1_1AgentPathPrediction_1a4cfc5aa7e14d42a5273716fa7f2ddcc9" kindref="member">AgentPathPrediction::predictAgentsVelObs</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_1,<sp/>_2);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespacehateb__local__planner_1a9053a9eaf358ea63f7d8f3c651376a8aad6a95a52fdca114b7923c4a52cc38f72" kindref="member">agent_path_prediction::AgentPosePredictRequest::EXTERNAL</ref>:</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>prediction_function<sp/>=<sp/>boost::bind(&amp;<ref refid="classagents_1_1AgentPathPrediction_1a3267867c0d12e71be67b82cefa349132" kindref="member">AgentPathPrediction::predictAgentsExternal</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_1,<sp/>_2);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>agent_path_prediction::AgentPosePredictRequest::BEHIND_ROBOT:</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>prediction_function<sp/>=<sp/>boost::bind(&amp;<ref refid="classagents_1_1AgentPathPrediction_1aa6cdef23af43d6db3daf6f776bd26a15" kindref="member">AgentPathPrediction::predictAgentsBehind</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_1,<sp/>_2);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>agent_path_prediction::AgentPosePredictRequest::PREDICTED_GOAL:</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>prediction_function<sp/>=<sp/>boost::bind(&amp;<ref refid="classagents_1_1AgentPathPrediction_1a4457ce94684aecde720679bfd9f92769" kindref="member">AgentPathPrediction::predictAgentsGoal</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_1,<sp/>_2);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ROS_ERROR_NAMED(<ref refid="agent__path__prediction_8h_1a8cc8d559acdd2f74085b20977182d5b7" kindref="member">NODE_NAME</ref>,<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>unkonwn<sp/>prediction<sp/>type<sp/>%d&quot;</highlight><highlight class="normal">,<sp/><ref refid="agent__path__prediction_8h_1a8cc8d559acdd2f74085b20977182d5b7" kindref="member">NODE_NAME</ref>,<sp/>req.type);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!prediction_function.empty()<sp/>&amp;&amp;<sp/>prediction_function(req,<sp/>res))<sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classagents_1_1AgentPathPrediction_1a0e67a329d28183630b0ffe369f4b29d5" kindref="member">publish_markers_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>new<sp/>markers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classagents_1_1AgentPathPrediction_1a656edefd5e3bc6e18d1e609ecca0e48c" kindref="member">predicted_agents_markers_</ref>.markers.clear();</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>predicted_agent<sp/>:<sp/>res.predicted_agents_poses)<sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!predicted_agent.poses.empty())<sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>first_pose_time<sp/>=<sp/>predicted_agent.poses[0].header.stamp;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>marker_id<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>predicted_agent_pose<sp/>:<sp/>predicted_agent.poses)<sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>visualization_msgs::Marker<sp/>predicted_agent_marker;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>predicted_agent_marker.header.frame_id<sp/>=<sp/>predicted_agent_pose.header.frame_id;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>predicted_agent_marker.header.stamp<sp/>=<sp/>first_pose_time;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>predicted_agent_marker.id<sp/>=<sp/>(predicted_agent.id<sp/>*<sp/><ref refid="agent__path__prediction_8h_1af894f6c65704c92b68ed56dadb9afd02" kindref="member">MAX_AGENT_MARKERS</ref>)<sp/>+<sp/>marker_id++;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>predicted_agent_marker.type<sp/>=<sp/>visualization_msgs::Marker::CYLINDER;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>predicted_agent_marker.action<sp/>=<sp/>visualization_msgs::Marker::MODIFY;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>assuming<sp/>diagonal<sp/>covariance<sp/>matrix<sp/>(with<sp/>row-major<sp/>order)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>predicted_agent_marker.scale.x<sp/>=<sp/>std::max(predicted_agent_pose.pose.covariance[0],<sp/><ref refid="agent__path__prediction_8h_1a33f9de4ddabe0c954c7be6d7d593e00e" kindref="member">MINIMUM_COVARIANCE_MARKERS</ref>);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>predicted_agent_marker.scale.y<sp/>=<sp/>std::max(predicted_agent_pose.pose.covariance[7],<sp/><ref refid="agent__path__prediction_8h_1a33f9de4ddabe0c954c7be6d7d593e00e" kindref="member">MINIMUM_COVARIANCE_MARKERS</ref>);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>predicted_agent_marker.scale.z<sp/>=<sp/>0.01;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>predicted_agent_marker.color.a<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>predicted_agent_marker.color.r<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>predicted_agent_marker.color.g<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>predicted_agent_marker.color.b<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>predicted_agent_marker.lifetime<sp/>=<sp/>ros::Duration(<ref refid="agent__path__prediction_8h_1a16e1bbd9c734c79d0a08824bf14036f7" kindref="member">MIN_MARKER_LIFETIME</ref>)<sp/>+<sp/>(predicted_agent_pose.header.stamp<sp/>-<sp/>first_pose_time);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>predicted_agent_marker.pose.position.x<sp/>=<sp/>predicted_agent_pose.pose.pose.position.x;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>predicted_agent_marker.pose.position.y<sp/>=<sp/>predicted_agent_pose.pose.pose.position.y;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>time<sp/>on<sp/>z<sp/>axis</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>predicted_agent_marker.pose.position.z<sp/>=<sp/>(predicted_agent_pose.header.stamp<sp/>-<sp/>first_pose_time).toSec();</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classagents_1_1AgentPathPrediction_1a656edefd5e3bc6e18d1e609ecca0e48c" kindref="member">predicted_agents_markers_</ref>.markers.push_back(predicted_agent_marker);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/><ref refid="classagents_1_1AgentPathPrediction_1a983b614e8b93ca742840cadb933c96e7" kindref="member">last_markers_size_map_</ref>.find(predicted_agent.id);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it<sp/>!=<sp/><ref refid="classagents_1_1AgentPathPrediction_1a983b614e8b93ca742840cadb933c96e7" kindref="member">last_markers_size_map_</ref>.end())<sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(it-&gt;second<sp/>&gt;=<sp/>marker_id)<sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>visualization_msgs::Marker<sp/>delete_agent_marker;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delete_agent_marker.id<sp/>=<sp/>(predicted_agent.id<sp/>*<sp/><ref refid="agent__path__prediction_8h_1af894f6c65704c92b68ed56dadb9afd02" kindref="member">MAX_AGENT_MARKERS</ref>)<sp/>+<sp/>marker_id++;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delete_agent_marker.action<sp/>=<sp/>visualization_msgs::Marker::DELETE;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classagents_1_1AgentPathPrediction_1a656edefd5e3bc6e18d1e609ecca0e48c" kindref="member">predicted_agents_markers_</ref>.markers.push_back(delete_agent_marker);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classagents_1_1AgentPathPrediction_1a983b614e8b93ca742840cadb933c96e7" kindref="member">last_markers_size_map_</ref>[predicted_agent.id]<sp/>=<sp/>--marker_id;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ROS_WARN_NAMED(<ref refid="agent__path__prediction_8h_1a8cc8d559acdd2f74085b20977182d5b7" kindref="member">NODE_NAME</ref>,<sp/></highlight><highlight class="stringliteral">&quot;no<sp/>predicted<sp/>poses<sp/>fro<sp/>agent<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>predicted_agent.id);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classagents_1_1AgentPathPrediction_1aa33c01aa205fc7b6c2d9b24791b73ec7" kindref="member">predicted_agents_pub_</ref>.publish(<ref refid="classagents_1_1AgentPathPrediction_1a656edefd5e3bc6e18d1e609ecca0e48c" kindref="member">predicted_agents_markers_</ref>);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classagents_1_1AgentPathPrediction_1aa9a691a634bc23253152db5c41c99776" kindref="member">showing_markers_</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ROS_DEBUG_NAMED(<ref refid="agent__path__prediction_8h_1a8cc8d559acdd2f74085b20977182d5b7" kindref="member">NODE_NAME</ref>,<sp/></highlight><highlight class="stringliteral">&quot;published<sp/>predicted<sp/>agents&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classagents_1_1AgentPathPrediction_1aa9a691a634bc23253152db5c41c99776" kindref="member">showing_markers_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classagents_1_1AgentPathPrediction_1a656edefd5e3bc6e18d1e609ecca0e48c" kindref="member">predicted_agents_markers_</ref>.markers.clear();</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>visualization_msgs::Marker<sp/>delete_agent_markers;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delete_agent_markers.action<sp/>=<sp/>3;<sp/><sp/></highlight><highlight class="comment">//<sp/>visualization_msgs::Marker::DELETEALL;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classagents_1_1AgentPathPrediction_1a656edefd5e3bc6e18d1e609ecca0e48c" kindref="member">predicted_agents_markers_</ref>.markers.push_back(delete_agent_markers);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classagents_1_1AgentPathPrediction_1aa33c01aa205fc7b6c2d9b24791b73ec7" kindref="member">predicted_agents_pub_</ref>.publish(<ref refid="classagents_1_1AgentPathPrediction_1a656edefd5e3bc6e18d1e609ecca0e48c" kindref="member">predicted_agents_markers_</ref>);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classagents_1_1AgentPathPrediction_1aa9a691a634bc23253152db5c41c99776" kindref="member">showing_markers_</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="202"><highlight class="normal">}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classagents_1_1AgentPathPrediction_1a4cfc5aa7e14d42a5273716fa7f2ddcc9" kindref="member">AgentPathPrediction::predictAgentsVelObs</ref>(agent_path_prediction::AgentPosePredict::Request<sp/>&amp;req,<sp/>agent_path_prediction::AgentPosePredict::Response<sp/>&amp;res)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>validate<sp/>prediction<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(req.predict_times.empty())<sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>ROS_ERROR_NAMED(<ref refid="agent__path__prediction_8h_1a8cc8d559acdd2f74085b20977182d5b7" kindref="member">NODE_NAME</ref>,<sp/></highlight><highlight class="stringliteral">&quot;prediction<sp/>times<sp/>cannot<sp/>be<sp/>empty&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*std::min_element(req.predict_times.begin(),<sp/>req.predict_times.end())<sp/>&lt;<sp/>0.0)<sp/>{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>ROS_ERROR_NAMED(<ref refid="agent__path__prediction_8h_1a8cc8d559acdd2f74085b20977182d5b7" kindref="member">NODE_NAME</ref>,<sp/></highlight><highlight class="stringliteral">&quot;prediction<sp/>time<sp/>cannot<sp/>be<sp/>negative&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>local<sp/>refrence<sp/>of<sp/>agents</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="namespaceagents" kindref="compound">agents</ref><sp/>=<sp/><ref refid="classagents_1_1AgentPathPrediction_1a0dbc4afec33d4b2af269c3853dca8747" kindref="member">tracked_agents_</ref>.agents;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>track_frame<sp/>=<sp/><ref refid="classagents_1_1AgentPathPrediction_1a0dbc4afec33d4b2af269c3853dca8747" kindref="member">tracked_agents_</ref>.header.frame_id;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>track_time<sp/>=<sp/><ref refid="classagents_1_1AgentPathPrediction_1a0dbc4afec33d4b2af269c3853dca8747" kindref="member">tracked_agents_</ref>.header.stamp;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((ros::Time::now()<sp/>-<sp/>track_time).toSec()<sp/>&gt;<sp/>*std::max_element(req.predict_times.begin(),<sp/>req.predict_times.end()))<sp/>{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>ROS_DEBUG_NAMED(<ref refid="agent__path__prediction_8h_1a8cc8d559acdd2f74085b20977182d5b7" kindref="member">NODE_NAME</ref>,</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;agent<sp/>data<sp/>is<sp/>older<sp/>than<sp/>maximum<sp/>given<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;prediction<sp/>time,<sp/>predicting<sp/>nothing&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;agent<sp/>:<sp/><ref refid="namespaceagents" kindref="compound">agents</ref>)<sp/>{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::find(req.ids.begin(),<sp/>req.ids.end(),<sp/>agent.track_id)<sp/>==<sp/>req.ids.end())<sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>segment<sp/>:<sp/>agent.segments)<sp/>{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(segment.type<sp/>==<sp/><ref refid="classagents_1_1AgentPathPrediction_1a5568632bb235b095c5fd80552a66fee4" kindref="member">default_agent_part_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>calculate<sp/>future<sp/>agent<sp/>poses<sp/>based<sp/>on<sp/>current<sp/>velocity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>agent_path_prediction::PredictedPoses<sp/>predicted_poses;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>predicted_poses.id<sp/>=<sp/>agent.track_id;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>linear<sp/>velocity<sp/>of<sp/>the<sp/>agent</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tf::Vector3<sp/>linear_vel(segment.twist.twist.linear.x,<sp/>segment.twist.twist.linear.y,<sp/>segment.twist.twist.linear.z);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>predict_time<sp/>:<sp/>req.predict_times)<sp/>{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>validate<sp/>prediction<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(predict_time<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ROS_ERROR_NAMED(<ref refid="agent__path__prediction_8h_1a8cc8d559acdd2f74085b20977182d5b7" kindref="member">NODE_NAME</ref>,<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>prediction<sp/>time<sp/>cannot<sp/>be<sp/>negative<sp/>(give<sp/>%f)&quot;</highlight><highlight class="normal">,<sp/><ref refid="agent__path__prediction_8h_1a8cc8d559acdd2f74085b20977182d5b7" kindref="member">NODE_NAME</ref>,<sp/>predict_time);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>geometry_msgs::PoseWithCovarianceStamped<sp/>predicted_pose;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>predicted_pose.header.frame_id<sp/>=<sp/>track_frame;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>predicted_pose.header.stamp<sp/>=<sp/>track_time<sp/>+<sp/>ros::Duration(predict_time);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classagents_1_1AgentPathPrediction_1a1c9ae4182a095c3fd8539b9a37940429" kindref="member">velobs_use_ang_</ref><sp/>&amp;&amp;<sp/>std::abs(segment.twist.twist.angular.z)<sp/>&gt;<sp/><ref refid="agent__path__prediction_8h_1af331ec1c592c921393cc8e9e1b75c33f" kindref="member">ANG_VEL_EPS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>velocity<sp/>multiplier<sp/>is<sp/>only<sp/>applied<sp/>to<sp/>linear<sp/>velocities</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>r<sp/>=<sp/>(std::hypot(linear_vel[0],<sp/>linear_vel[1])<sp/>*<sp/><ref refid="classagents_1_1AgentPathPrediction_1a8524832c3d92ccb2c06adb8bd32838cf" kindref="member">velobs_mul_</ref>)<sp/>/<sp/>segment.twist.twist.angular.z;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>theta<sp/>=<sp/>segment.twist.twist.angular.z<sp/>*<sp/>predict_time;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>crd<sp/>=<sp/>r<sp/>*<sp/>2<sp/>*<sp/>std::sin(theta<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>alpha<sp/>=<sp/>std::atan2(linear_vel[1],<sp/>linear_vel[0])<sp/>+<sp/>(theta<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>predicted_pose.pose.pose.position.x<sp/>=<sp/>segment.pose.pose.position.x<sp/>+<sp/>crd<sp/>*<sp/>std::cos(alpha);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>predicted_pose.pose.pose.position.y<sp/>=<sp/>segment.pose.pose.position.y<sp/>+<sp/>crd<sp/>*<sp/>std::sin(alpha);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>predicted_pose.pose.pose.orientation<sp/>=<sp/>tf::createQuaternionMsgFromYaw(tf::getYaw(segment.pose.pose.orientation)<sp/>+<sp/>theta);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>predicted_pose.pose.pose.position.x<sp/>=<sp/>segment.pose.pose.position.x<sp/>+<sp/>linear_vel[0]<sp/>*<sp/>predict_time<sp/>*<sp/><ref refid="classagents_1_1AgentPathPrediction_1a8524832c3d92ccb2c06adb8bd32838cf" kindref="member">velobs_mul_</ref>;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>predicted_pose.pose.pose.position.y<sp/>=<sp/>segment.pose.pose.position.y<sp/>+<sp/>linear_vel[1]<sp/>*<sp/>predict_time<sp/>*<sp/><ref refid="classagents_1_1AgentPathPrediction_1a8524832c3d92ccb2c06adb8bd32838cf" kindref="member">velobs_mul_</ref>;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>predicted_pose.pose.pose.orientation<sp/>=<sp/>segment.pose.pose.orientation;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>using<sp/>velocity<sp/>multiplier<sp/>for<sp/>covariance<sp/>matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>xy_vel<sp/>=<sp/>hypot(linear_vel[0]<sp/>*<sp/>predict_time,<sp/>linear_vel[1]<sp/>*<sp/>predict_time);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>storing<sp/>only<sp/>x,<sp/>y<sp/>covariance<sp/>in<sp/>diagonal<sp/>matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>predicted_pose.pose.covariance[0]<sp/>=<sp/><ref refid="classagents_1_1AgentPathPrediction_1ab8bf79bf0ef7d70002a7ce3c8cbf84d7" kindref="member">velobs_min_rad_</ref><sp/>+<sp/>(<ref refid="classagents_1_1AgentPathPrediction_1a3291bcf9f3eb437156ec8681775f4e54" kindref="member">velobs_max_rad_</ref><sp/>-<sp/><ref refid="classagents_1_1AgentPathPrediction_1ab8bf79bf0ef7d70002a7ce3c8cbf84d7" kindref="member">velobs_min_rad_</ref>)<sp/>*<sp/>(predict_time<sp/>/<sp/><ref refid="classagents_1_1AgentPathPrediction_1a6fd66ba5b372a473849f825ddfb05a57" kindref="member">velobs_max_rad_time_</ref>)<sp/>*<sp/>xy_vel;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>predicted_pose.pose.covariance[7]<sp/>=<sp/>predicted_pose.pose.covariance[0];</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>predicted_poses.poses.push_back(predicted_pose);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ROS_DEBUG_NAMED(<ref refid="agent__path__prediction_8h_1a8cc8d559acdd2f74085b20977182d5b7" kindref="member">NODE_NAME</ref>,</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>predected<sp/>agent<sp/>(%lu)<sp/>segment<sp/>(%d)&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>pose:<sp/>x=%f,<sp/>y=%f,<sp/>theta=%f,<sp/>predict-time=%f&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="agent__path__prediction_8h_1a8cc8d559acdd2f74085b20977182d5b7" kindref="member">NODE_NAME</ref>,<sp/>agent.track_id,<sp/>segment.type,<sp/>predicted_pose.pose.pose.position.x,<sp/>predicted_pose.pose.pose.position.y,<sp/>tf::getYaw(predicted_pose.pose.pose.orientation),</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>predict_time);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>geometry_msgs::TwistStamped<sp/>current_twist;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_twist.header.frame_id<sp/>=<sp/>track_frame;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_twist.header.stamp<sp/>=<sp/>track_time;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_twist.twist<sp/>=<sp/>segment.twist.twist;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>predicted_poses.start_velocity<sp/>=<sp/>current_twist;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res.predicted_agents_poses.push_back(predicted_poses);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="292"><highlight class="normal">}</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classagents_1_1AgentPathPrediction_1a3267867c0d12e71be67b82cefa349132" kindref="member">AgentPathPrediction::predictAgentsExternal</ref>(agent_path_prediction::AgentPosePredict::Request<sp/>&amp;req,<sp/>agent_path_prediction::AgentPosePredict::Response<sp/>&amp;res)<sp/>{</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Using<sp/>external<sp/>paths</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classagents_1_1AgentPathPrediction_1aa9ea4b0c1dce20b9c941795d76a90bf5" kindref="member">external_paths_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>external_paths<sp/>=<sp/><ref refid="classagents_1_1AgentPathPrediction_1aa9ea4b0c1dce20b9c941795d76a90bf5" kindref="member">external_paths_</ref>;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>tracked_agents<sp/>=<sp/><ref refid="classagents_1_1AgentPathPrediction_1a0dbc4afec33d4b2af269c3853dca8747" kindref="member">tracked_agents_</ref>;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;AgentPathVel&gt;<sp/>agent_path_vel_array;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;path<sp/>:<sp/>external_paths-&gt;paths)<sp/>{</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>AgentPathVel<sp/>agent_path_vel{.id<sp/>=<sp/>path.id,<sp/>.path<sp/>=<sp/>path.path};</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>starting<sp/>velocity<sp/>of<sp/>the<sp/>agent<sp/>if<sp/>we<sp/>find<sp/>them</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>do<sp/>not<sp/>add<sp/>current<sp/>pose<sp/>at<sp/>first<sp/>pose<sp/>in<sp/>this<sp/>case</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;agent<sp/>:<sp/>tracked_agents.agents)<sp/>{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(agent.track_id<sp/>==<sp/>path.id)<sp/>{</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;segment<sp/>:<sp/>agent.segments)<sp/>{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(segment.type<sp/>==<sp/><ref refid="classagents_1_1AgentPathPrediction_1a5568632bb235b095c5fd80552a66fee4" kindref="member">default_agent_part_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>agent_path_vel.start_vel<sp/>=<sp/>segment.twist;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>agent_path_vel_array.push_back(agent_path_vel);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classagents_1_1AgentPathPrediction_1a0776895e9f6212da8bf8c1b2eff6d7d6" kindref="member">predictAgentsFromPaths</ref>(req,<sp/>res,<sp/>agent_path_vel_array);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Using<sp/>an<sp/>external<sp/>goal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classagents_1_1AgentPathPrediction_1a96786bf5f15d2267b3d2e0174726846d" kindref="member">got_external_goal_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>now<sp/>=<sp/>ros::Time::now();</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>tracked_agents<sp/>=<sp/><ref refid="classagents_1_1AgentPathPrediction_1a0dbc4afec33d4b2af269c3853dca8747" kindref="member">tracked_agents_</ref>;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;uint64_t,<sp/>geometry_msgs::PoseStamped&gt;<sp/>ext_goal;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>robot<sp/>pose</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>tf::StampedTransform<sp/>robot_to_map_tf;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/>tf::StampedTransform<sp/>agent_to_map_tf;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>transforms_found<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classagents_1_1AgentPathPrediction_1adbd56e5ff1e91aec6775d519890955c4" kindref="member">tf_</ref>.lookupTransform(<ref refid="classagents_1_1AgentPathPrediction_1aea296f3d06cb663f04e8cadb52f4bc25" kindref="member">map_frame_id_</ref>,<sp/><ref refid="classagents_1_1AgentPathPrediction_1a6d5084936b596eeea8889a53b6d5e890" kindref="member">robot_frame_id_</ref>,<sp/>ros::Time(0),<sp/>robot_to_map_tf);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>agents_frame<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;map&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!tracked_agents.header.frame_id.empty())<sp/>{</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>agents_frame<sp/>=<sp/>tracked_agents.header.frame_id;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classagents_1_1AgentPathPrediction_1adbd56e5ff1e91aec6775d519890955c4" kindref="member">tf_</ref>.lookupTransform(<ref refid="classagents_1_1AgentPathPrediction_1aea296f3d06cb663f04e8cadb52f4bc25" kindref="member">map_frame_id_</ref>,<sp/>agents_frame,<sp/>ros::Time(0),<sp/>agent_to_map_tf);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>transforms_found<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(tf::LookupException<sp/>&amp;ex)<sp/>{</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ROS_ERROR_NAMED(<ref refid="agent__path__prediction_8h_1a8cc8d559acdd2f74085b20977182d5b7" kindref="member">NODE_NAME</ref>,<sp/></highlight><highlight class="stringliteral">&quot;No<sp/>Transform<sp/>available<sp/>Error:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>ex.what());</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(tf::ConnectivityException<sp/>&amp;ex)<sp/>{</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ROS_ERROR_NAMED(<ref refid="agent__path__prediction_8h_1a8cc8d559acdd2f74085b20977182d5b7" kindref="member">NODE_NAME</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Connectivity<sp/>Error:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>ex.what());</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(tf::ExtrapolationException<sp/>&amp;ex)<sp/>{</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ROS_ERROR_NAMED(<ref refid="agent__path__prediction_8h_1a8cc8d559acdd2f74085b20977182d5b7" kindref="member">NODE_NAME</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Extrapolation<sp/>Error:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>ex.what());</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>first<sp/>check<sp/>if<sp/>path<sp/>calculation<sp/>is<sp/>needed,<sp/>and<sp/>for<sp/>whom</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;AgentStartPoseVel&gt;<sp/>agent_start_pose_vels;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;bool&gt;<sp/>start_poses_far;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx_order<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;agent<sp/>:<sp/>tracked_agents.agents)<sp/>{</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classagents_1_1AgentPathPrediction_1a46d3187082c971c29b328168a05de302" kindref="member">path_vels_pos_</ref>.push_back(-1);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::find(req.ids.begin(),<sp/>req.ids.end(),<sp/>agent.track_id)<sp/>==<sp/>req.ids.end())<sp/>{</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>path_exist<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;ex_gl<sp/>:<sp/><ref refid="classagents_1_1AgentPathPrediction_1a0a552e1522d29105854cb7058bb3bd6e" kindref="member">external_goals_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ex_gl.id<sp/>==<sp/>agent.track_id)<sp/>{</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ext_goal[ex_gl.id]<sp/>=<sp/>ex_gl.pose;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;path_vel<sp/>:<sp/><ref refid="classagents_1_1AgentPathPrediction_1a00d24ac50f4b80361f95c43c2fb38b66" kindref="member">path_vels_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(path_vel.id<sp/>==<sp/>agent.track_id)<sp/>{</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>path_exist<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>agent<sp/>pose</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;segment<sp/>:<sp/>agent.segments)<sp/>{</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(segment.type<sp/>==<sp/><ref refid="classagents_1_1AgentPathPrediction_1a5568632bb235b095c5fd80552a66fee4" kindref="member">default_agent_part_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>geometry_msgs::PoseStamped<sp/>agent_start;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>agent_start.header.frame_id<sp/>=<sp/>tracked_agents.header.frame_id;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>agent_start.header.stamp<sp/>=<sp/>now;</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>agent_start.pose<sp/>=<sp/>segment.pose.pose;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tf::Pose<sp/>start_pose_tf;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_pose_tf.setRotation(tf::Quaternion(0.0,<sp/>0.0,<sp/>0.0,<sp/>1.0));</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>geometry_msgs::Pose<sp/>start_pose;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_pose.orientation.w<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tf::poseMsgToTF(agent_start.pose,<sp/>start_pose_tf);</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_pose_tf<sp/>=<sp/>agent_to_map_tf<sp/>*<sp/>start_pose_tf;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tf::poseTFToMsg(start_pose_tf,<sp/>start_pose);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!path_exist)<sp/>{</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AgentStartPoseVel<sp/>agent_start_pose_vel<sp/>=<sp/>{.id<sp/>=<sp/>agent.track_id,<sp/>.pose<sp/>=<sp/>agent_start,<sp/>.vel<sp/>=<sp/>segment.twist};</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>agent_start_pose_vels.push_back(agent_start_pose_vel);</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classagents_1_1AgentPathPrediction_1a46d3187082c971c29b328168a05de302" kindref="member">path_vels_pos_</ref>[agent.track_id<sp/>-<sp/>1]<sp/>=<sp/>idx_order;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::find(req.ids.begin(),<sp/>req.ids.end(),<sp/>agent.track_id)<sp/>!=<sp/>req.ids.end())<sp/>{</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dist_far<sp/>=<sp/>std::hypot(agent_start.pose.position.x<sp/>-<sp/><ref refid="classagents_1_1AgentPathPrediction_1a00d24ac50f4b80361f95c43c2fb38b66" kindref="member">path_vels_</ref>[<ref refid="classagents_1_1AgentPathPrediction_1a46d3187082c971c29b328168a05de302" kindref="member">path_vels_pos_</ref>[agent.track_id<sp/>-<sp/>1]].path.poses[0].pose.position.x,</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>agent_start.pose.position.y<sp/>-<sp/><ref refid="classagents_1_1AgentPathPrediction_1a00d24ac50f4b80361f95c43c2fb38b66" kindref="member">path_vels_</ref>[<ref refid="classagents_1_1AgentPathPrediction_1a46d3187082c971c29b328168a05de302" kindref="member">path_vels_pos_</ref>[agent.track_id<sp/>-<sp/>1]].path.poses[0].pose.position.y);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dist_far<sp/>&gt;<sp/><ref refid="agent__path__prediction_8h_1a70d5ea5ea8c43ed32d3d28e41567b81e" kindref="member">RECALC_DIST</ref>)<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>To<sp/>ensure<sp/>that<sp/>the<sp/>path<sp/>is<sp/>recalculated<sp/>only<sp/>if<sp/>the<sp/>agent<sp/>is<sp/>deviating<sp/>from<sp/>the<sp/>path</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_poses_far.push_back(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AgentStartPoseVel<sp/>agent_start_pose_vel<sp/>=<sp/>{.id<sp/>=<sp/>agent.track_id,<sp/>.pose<sp/>=<sp/>agent_start,<sp/>.vel<sp/>=<sp/>segment.twist};</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>agent_start_pose_vels.push_back(agent_start_pose_vel);</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classagents_1_1AgentPathPrediction_1a46d3187082c971c29b328168a05de302" kindref="member">path_vels_pos_</ref>[agent.track_id<sp/>-<sp/>1]<sp/>=<sp/>idx_order;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classagents_1_1AgentPathPrediction_1a00d24ac50f4b80361f95c43c2fb38b66" kindref="member">path_vels_</ref>.clear();</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>idx_order++;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!agent_start_pose_vels.empty())<sp/>{</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(transforms_found)<sp/>{</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;agent_start_pose_vel<sp/>:<sp/>agent_start_pose_vels)<sp/>{</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nav_msgs::GetPlan<sp/>get_plan_srv;</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ext_goal.find(agent_start_pose_vel.id)<sp/>==<sp/>ext_goal.end())<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>agent<sp/>pose<sp/>in<sp/>map<sp/>frame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tf::Pose<sp/>start_pose_tf;</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_pose_tf.setRotation(tf::Quaternion(0.0,<sp/>0.0,<sp/>0.0,<sp/>1.0));</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tf::poseMsgToTF(agent_start_pose_vel.pose.pose,<sp/>start_pose_tf);</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_pose_tf<sp/>=<sp/>agent_to_map_tf<sp/>*<sp/>start_pose_tf;</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>start_pose_stamped<sp/>=<sp/>agent_start_pose_vel.pose;</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tf::poseTFToMsg(start_pose_tf,<sp/>start_pose_stamped.pose);</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>start_path<sp/>=<sp/><ref refid="classagents_1_1AgentPathPrediction_1acb6a7bcfe957c55140c73f98ed71005d" kindref="member">setFixedPath</ref>(start_pose_stamped);</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_plan_srv.request.start.header.frame_id<sp/>=<sp/><ref refid="classagents_1_1AgentPathPrediction_1aea296f3d06cb663f04e8cadb52f4bc25" kindref="member">map_frame_id_</ref>;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_plan_srv.request.start.header.stamp<sp/>=<sp/>now;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_plan_srv.request.start.pose<sp/>=<sp/>start_path.poses.back().pose;</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classagents_1_1AgentPathPrediction_1a2687e915d54148e4e53ed89e5490146d" kindref="member">front_pose_pub_</ref>.publish(start_path.poses.back());</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_plan_srv.request.goal.header.frame_id<sp/>=<sp/><ref refid="classagents_1_1AgentPathPrediction_1aea296f3d06cb663f04e8cadb52f4bc25" kindref="member">map_frame_id_</ref>;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_plan_srv.request.goal.header.stamp<sp/>=<sp/>now;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_plan_srv.request.goal.pose.position.x<sp/>=<sp/>ext_goal[agent_start_pose_vel.id].pose.position.x;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_plan_srv.request.goal.pose.position.y<sp/>=<sp/>ext_goal[agent_start_pose_vel.id].pose.position.y;</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_plan_srv.request.goal.pose.position.z<sp/>=<sp/>ext_goal[agent_start_pose_vel.id].pose.position.z;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_plan_srv.request.goal.pose.orientation<sp/>=<sp/>ext_goal[agent_start_pose_vel.id].pose.orientation;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ROS_DEBUG_NAMED(<ref refid="agent__path__prediction_8h_1a8cc8d559acdd2f74085b20977182d5b7" kindref="member">NODE_NAME</ref>,</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;agent<sp/>start:<sp/>x=%.2f,<sp/>y=%.2f,<sp/>theta=%.2f,<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;goal:<sp/>x=%.2f,<sp/>y=%.2f,<sp/>theta=%.2f&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_plan_srv.request.start.pose.position.x,<sp/>get_plan_srv.request.start.pose.position.y,<sp/>tf::getYaw(get_plan_srv.request.start.pose.orientation),</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_plan_srv.request.goal.pose.position.x,<sp/>get_plan_srv.request.goal.pose.position.y,<sp/>tf::getYaw(get_plan_srv.request.goal.pose.orientation));</highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>plan<sp/>for<sp/>agent</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classagents_1_1AgentPathPrediction_1a6f1e33b71d3cdc779a19e3c0b103868e" kindref="member">get_plan_client_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classagents_1_1AgentPathPrediction_1a6f1e33b71d3cdc779a19e3c0b103868e" kindref="member">get_plan_client_</ref>.call(get_plan_srv))<sp/>{</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!get_plan_srv.response.plan.poses.empty())<sp/>{</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AgentPathVel<sp/>agent_path_vel;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>agent_path_vel.id<sp/>=<sp/>agent_start_pose_vel.id;</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>agent_path_vel.path<sp/>=<sp/>get_plan_srv.response.plan;</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>agent_path_vel.start_vel<sp/>=<sp/>agent_start_pose_vel.vel;</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classagents_1_1AgentPathPrediction_1a00d24ac50f4b80361f95c43c2fb38b66" kindref="member">path_vels_</ref>.push_back(agent_path_vel);</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classagents_1_1AgentPathPrediction_1a7bccec7ac9341244d43cac64b79e9470" kindref="member">got_new_agent_paths_</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ROS_WARN_NAMED(<ref refid="agent__path__prediction_8h_1a8cc8d559acdd2f74085b20977182d5b7" kindref="member">NODE_NAME</ref>,</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Got<sp/>empty<sp/>path<sp/>for<sp/>agent,<sp/>start<sp/>or<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;goal<sp/>position<sp/>is<sp/>probably<sp/>invalid&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ROS_WARN_NAMED(<ref refid="agent__path__prediction_8h_1a8cc8d559acdd2f74085b20977182d5b7" kindref="member">NODE_NAME</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>call<sp/>%s<sp/>service&quot;</highlight><highlight class="normal">,<sp/><ref refid="classagents_1_1AgentPathPrediction_1a9d10d00a04ab902e039a7e604ad4d081" kindref="member">get_plan_srv_name_</ref>.c_str());</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ROS_WARN_NAMED(<ref refid="agent__path__prediction_8h_1a8cc8d559acdd2f74085b20977182d5b7" kindref="member">NODE_NAME</ref>,<sp/></highlight><highlight class="stringliteral">&quot;%s<sp/>service<sp/>does<sp/>not<sp/>exist,<sp/>re-trying<sp/>to<sp/>subscribe&quot;</highlight><highlight class="normal">,<sp/><ref refid="classagents_1_1AgentPathPrediction_1a9d10d00a04ab902e039a7e604ad4d081" kindref="member">get_plan_srv_name_</ref>.c_str());</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ros::NodeHandle<sp/>private_nh(</highlight><highlight class="stringliteral">&quot;~/&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classagents_1_1AgentPathPrediction_1a6f1e33b71d3cdc779a19e3c0b103868e" kindref="member">get_plan_client_</ref><sp/>=<sp/>private_nh.serviceClient&lt;nav_msgs::GetPlan&gt;(<ref refid="classagents_1_1AgentPathPrediction_1a9d10d00a04ab902e039a7e604ad4d081" kindref="member">get_plan_srv_name_</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classagents_1_1AgentPathPrediction_1a0776895e9f6212da8bf8c1b2eff6d7d6" kindref="member">predictAgentsFromPaths</ref>(req,<sp/>res,<sp/><ref refid="classagents_1_1AgentPathPrediction_1a00d24ac50f4b80361f95c43c2fb38b66" kindref="member">path_vels_</ref>);</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/>std::vector&lt;AgentPathVel&gt;<sp/>empty_path_vels;</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classagents_1_1AgentPathPrediction_1a0776895e9f6212da8bf8c1b2eff6d7d6" kindref="member">predictAgentsFromPaths</ref>(req,<sp/>res,<sp/>empty_path_vels);</highlight></codeline>
<codeline lineno="475"><highlight class="normal">}</highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classagents_1_1AgentPathPrediction_1aa6cdef23af43d6db3daf6f776bd26a15" kindref="member">AgentPathPrediction::predictAgentsBehind</ref>(agent_path_prediction::AgentPosePredict::Request<sp/>&amp;req,<sp/>agent_path_prediction::AgentPosePredict::Response<sp/>&amp;res)<sp/>{</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>now<sp/>=<sp/>ros::Time::now();</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>tracked_agents<sp/>=<sp/><ref refid="classagents_1_1AgentPathPrediction_1a0dbc4afec33d4b2af269c3853dca8747" kindref="member">tracked_agents_</ref>;</highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>robot<sp/>pose</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/>tf::StampedTransform<sp/>robot_to_map_tf;</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/>tf::StampedTransform<sp/>agent_to_map_tf;</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>transforms_found<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classagents_1_1AgentPathPrediction_1adbd56e5ff1e91aec6775d519890955c4" kindref="member">tf_</ref>.lookupTransform(<ref refid="classagents_1_1AgentPathPrediction_1aea296f3d06cb663f04e8cadb52f4bc25" kindref="member">map_frame_id_</ref>,<sp/><ref refid="classagents_1_1AgentPathPrediction_1a6d5084936b596eeea8889a53b6d5e890" kindref="member">robot_frame_id_</ref>,<sp/>ros::Time(0),<sp/>robot_to_map_tf);</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>agents_frame<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;map&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!tracked_agents.header.frame_id.empty())<sp/>{</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>agents_frame<sp/>=<sp/>tracked_agents.header.frame_id;</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classagents_1_1AgentPathPrediction_1adbd56e5ff1e91aec6775d519890955c4" kindref="member">tf_</ref>.lookupTransform(<ref refid="classagents_1_1AgentPathPrediction_1aea296f3d06cb663f04e8cadb52f4bc25" kindref="member">map_frame_id_</ref>,<sp/>agents_frame,<sp/>ros::Time(0),<sp/>agent_to_map_tf);</highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/>transforms_found<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(tf::LookupException<sp/>&amp;ex)<sp/>{</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/>ROS_ERROR_NAMED(<ref refid="agent__path__prediction_8h_1a8cc8d559acdd2f74085b20977182d5b7" kindref="member">NODE_NAME</ref>,<sp/></highlight><highlight class="stringliteral">&quot;No<sp/>Transform<sp/>available<sp/>Error:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>ex.what());</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(tf::ConnectivityException<sp/>&amp;ex)<sp/>{</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/>ROS_ERROR_NAMED(<ref refid="agent__path__prediction_8h_1a8cc8d559acdd2f74085b20977182d5b7" kindref="member">NODE_NAME</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Connectivity<sp/>Error:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>ex.what());</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(tf::ExtrapolationException<sp/>&amp;ex)<sp/>{</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/>ROS_ERROR_NAMED(<ref refid="agent__path__prediction_8h_1a8cc8d559acdd2f74085b20977182d5b7" kindref="member">NODE_NAME</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Extrapolation<sp/>Error:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>ex.what());</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>first<sp/>check<sp/>if<sp/>path<sp/>calculation<sp/>is<sp/>needed,<sp/>and<sp/>for<sp/>whom</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/>std::vector&lt;AgentStartPoseVel&gt;<sp/>agent_start_pose_vels;</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/>std::vector&lt;bool&gt;<sp/>start_poses_far;</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx_order<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;agent<sp/>:<sp/>tracked_agents.agents)<sp/>{</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classagents_1_1AgentPathPrediction_1a46d3187082c971c29b328168a05de302" kindref="member">path_vels_pos_</ref>.push_back(-1);</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::find(req.ids.begin(),<sp/>req.ids.end(),<sp/>agent.track_id)<sp/>==<sp/>req.ids.end())<sp/>{</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>path_exist<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;path_vel<sp/>:<sp/><ref refid="classagents_1_1AgentPathPrediction_1a00d24ac50f4b80361f95c43c2fb38b66" kindref="member">path_vels_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(path_vel.id<sp/>==<sp/>agent.track_id)<sp/>{</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>path_exist<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>agent<sp/>pose</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;segment<sp/>:<sp/>agent.segments)<sp/>{</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(segment.type<sp/>==<sp/><ref refid="classagents_1_1AgentPathPrediction_1a5568632bb235b095c5fd80552a66fee4" kindref="member">default_agent_part_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>geometry_msgs::PoseStamped<sp/>agent_start;</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>agent_start.header.frame_id<sp/>=<sp/>tracked_agents.header.frame_id;</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>agent_start.header.stamp<sp/>=<sp/>now;</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>agent_start.pose<sp/>=<sp/>segment.pose.pose;</highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tf::Pose<sp/>start_pose_tf;</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_pose_tf.setRotation(tf::Quaternion(0.0,<sp/>0.0,<sp/>0.0,<sp/>1.0));</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>geometry_msgs::Pose<sp/>start_pose;</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_pose.orientation.w<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tf::poseMsgToTF(agent_start.pose,<sp/>start_pose_tf);</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_pose_tf<sp/>=<sp/>agent_to_map_tf<sp/>*<sp/>start_pose_tf;</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tf::poseTFToMsg(start_pose_tf,<sp/>start_pose);</highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!path_exist)<sp/>{</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AgentStartPoseVel<sp/>agent_start_pose_vel<sp/>=<sp/>{.id<sp/>=<sp/>agent.track_id,<sp/>.pose<sp/>=<sp/>agent_start,<sp/>.vel<sp/>=<sp/>segment.twist};</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>agent_start_pose_vels.push_back(agent_start_pose_vel);</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classagents_1_1AgentPathPrediction_1a46d3187082c971c29b328168a05de302" kindref="member">path_vels_pos_</ref>[agent.track_id<sp/>-<sp/>1]<sp/>=<sp/>idx_order;</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::find(req.ids.begin(),<sp/>req.ids.end(),<sp/>agent.track_id)<sp/>!=<sp/>req.ids.end())<sp/>{</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dist_far<sp/>=<sp/>std::hypot(agent_start.pose.position.x<sp/>-<sp/><ref refid="classagents_1_1AgentPathPrediction_1a00d24ac50f4b80361f95c43c2fb38b66" kindref="member">path_vels_</ref>[<ref refid="classagents_1_1AgentPathPrediction_1a46d3187082c971c29b328168a05de302" kindref="member">path_vels_pos_</ref>[agent.track_id<sp/>-<sp/>1]].path.poses[0].pose.position.x,</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>agent_start.pose.position.y<sp/>-<sp/><ref refid="classagents_1_1AgentPathPrediction_1a00d24ac50f4b80361f95c43c2fb38b66" kindref="member">path_vels_</ref>[<ref refid="classagents_1_1AgentPathPrediction_1a46d3187082c971c29b328168a05de302" kindref="member">path_vels_pos_</ref>[agent.track_id<sp/>-<sp/>1]].path.poses[0].pose.position.y);</highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dist_far<sp/>&gt;<sp/><ref refid="agent__path__prediction_8h_1a70d5ea5ea8c43ed32d3d28e41567b81e" kindref="member">RECALC_DIST</ref>)<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>To<sp/>ensure<sp/>that<sp/>the<sp/>path<sp/>is<sp/>recalculated<sp/>only<sp/>if<sp/>the<sp/>agent<sp/>is<sp/>deviating<sp/>from<sp/>the<sp/>path</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_poses_far.push_back(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AgentStartPoseVel<sp/>agent_start_pose_vel<sp/>=<sp/>{.id<sp/>=<sp/>agent.track_id,<sp/>.pose<sp/>=<sp/>agent_start,<sp/>.vel<sp/>=<sp/>segment.twist};</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>agent_start_pose_vels.push_back(agent_start_pose_vel);</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classagents_1_1AgentPathPrediction_1a46d3187082c971c29b328168a05de302" kindref="member">path_vels_pos_</ref>[agent.track_id<sp/>-<sp/>1]<sp/>=<sp/>idx_order;</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classagents_1_1AgentPathPrediction_1a00d24ac50f4b80361f95c43c2fb38b66" kindref="member">path_vels_</ref>.clear();</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/>idx_order++;</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!agent_start_pose_vels.empty())<sp/>{</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(transforms_found)<sp/>{</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;agent_start_pose_vel<sp/>:<sp/>agent_start_pose_vels)<sp/>{</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nav_msgs::GetPlan<sp/>get_plan_srv;</highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>hum_id<sp/>=<sp/>agent_start_pose_vel.id;</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>agent<sp/>pose<sp/>in<sp/>map<sp/>frame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tf::Pose<sp/>start_pose_tf;</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_pose_tf.setRotation(tf::Quaternion(0.0,<sp/>0.0,<sp/>0.0,<sp/>1.0));</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tf::poseMsgToTF(agent_start_pose_vel.pose.pose,<sp/>start_pose_tf);</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_pose_tf<sp/>=<sp/>agent_to_map_tf<sp/>*<sp/>start_pose_tf;</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>start_pose_stamped<sp/>=<sp/>agent_start_pose_vel.pose;</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tf::poseTFToMsg(start_pose_tf,<sp/>start_pose_stamped.pose);</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>start_path<sp/>=<sp/><ref refid="classagents_1_1AgentPathPrediction_1acb6a7bcfe957c55140c73f98ed71005d" kindref="member">setFixedPath</ref>(start_pose_stamped);</highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_plan_srv.request.start.header.frame_id<sp/>=<sp/><ref refid="classagents_1_1AgentPathPrediction_1aea296f3d06cb663f04e8cadb52f4bc25" kindref="member">map_frame_id_</ref>;</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_plan_srv.request.start.header.stamp<sp/>=<sp/>now;</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_plan_srv.request.start.pose<sp/>=<sp/>start_path.poses.back().pose;</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classagents_1_1AgentPathPrediction_1a2687e915d54148e4e53ed89e5490146d" kindref="member">front_pose_pub_</ref>.publish(start_path.poses.back());</highlight></codeline>
<codeline lineno="577"><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>calculate<sp/>agent<sp/>pose<sp/>behind<sp/>robot</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classagents_1_1AgentPathPrediction_1aa622c90bab0162345496d6fd2a0b940e" kindref="member">check_path_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classagents_1_1AgentPathPrediction_1aa622c90bab0162345496d6fd2a0b940e" kindref="member">check_path_</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tf::Transform<sp/>behind_tr;</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>behind_tr.setOrigin(tf::Vector3(-<ref refid="classagents_1_1AgentPathPrediction_1a72819f6e0c25db8988e96a2918a24ec4" kindref="member">agent_dist_behind_robot_</ref>,<sp/>0.0,<sp/>0.0));</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>behind_tr.setRotation(tf::createQuaternionFromYaw(<ref refid="classagents_1_1AgentPathPrediction_1a178ea0a5a7e658e2e81cf57ddef61b6a" kindref="member">agent_angle_behind_robot_</ref>));</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>behind_tr<sp/>=<sp/>robot_to_map_tf<sp/>*<sp/>behind_tr;</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tf::transformTFToMsg(behind_tr,<sp/><ref refid="classagents_1_1AgentPathPrediction_1ab8cb8d125e5d3c2b2264fc5b7de778c3" kindref="member">behind_pose_</ref>);</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_plan_srv.request.goal.header.frame_id<sp/>=<sp/><ref refid="classagents_1_1AgentPathPrediction_1aea296f3d06cb663f04e8cadb52f4bc25" kindref="member">map_frame_id_</ref>;</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_plan_srv.request.goal.header.stamp<sp/>=<sp/>now;</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_plan_srv.request.goal.pose.position.x<sp/>=<sp/><ref refid="classagents_1_1AgentPathPrediction_1ab8cb8d125e5d3c2b2264fc5b7de778c3" kindref="member">behind_pose_</ref>.translation.x;</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_plan_srv.request.goal.pose.position.y<sp/>=<sp/><ref refid="classagents_1_1AgentPathPrediction_1ab8cb8d125e5d3c2b2264fc5b7de778c3" kindref="member">behind_pose_</ref>.translation.y;</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_plan_srv.request.goal.pose.position.z<sp/>=<sp/><ref refid="classagents_1_1AgentPathPrediction_1ab8cb8d125e5d3c2b2264fc5b7de778c3" kindref="member">behind_pose_</ref>.translation.z;</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_plan_srv.request.goal.pose.orientation<sp/>=<sp/><ref refid="classagents_1_1AgentPathPrediction_1ab8cb8d125e5d3c2b2264fc5b7de778c3" kindref="member">behind_pose_</ref>.rotation;</highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ROS_DEBUG_NAMED(<ref refid="agent__path__prediction_8h_1a8cc8d559acdd2f74085b20977182d5b7" kindref="member">NODE_NAME</ref>,</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;agent<sp/>start:<sp/>x=%.2f,<sp/>y=%.2f,<sp/>theta=%.2f,<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;goal:<sp/>x=%.2f,<sp/>y=%.2f,<sp/>theta=%.2f&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_plan_srv.request.start.pose.position.x,<sp/>get_plan_srv.request.start.pose.position.y,<sp/>tf::getYaw(get_plan_srv.request.start.pose.orientation),</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_plan_srv.request.goal.pose.position.x,<sp/>get_plan_srv.request.goal.pose.position.y,<sp/>tf::getYaw(get_plan_srv.request.goal.pose.orientation));</highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>plan<sp/>for<sp/>agent</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classagents_1_1AgentPathPrediction_1a6f1e33b71d3cdc779a19e3c0b103868e" kindref="member">get_plan_client_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classagents_1_1AgentPathPrediction_1a6f1e33b71d3cdc779a19e3c0b103868e" kindref="member">get_plan_client_</ref>.call(get_plan_srv))<sp/>{</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!get_plan_srv.response.plan.poses.empty())<sp/>{</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AgentPathVel<sp/>agent_path_vel;</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>agent_path_vel.id<sp/>=<sp/>agent_start_pose_vel.id;</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>agent_path_vel.path<sp/>=<sp/>get_plan_srv.response.plan;</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>agent_path_vel.start_vel<sp/>=<sp/>agent_start_pose_vel.vel;</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classagents_1_1AgentPathPrediction_1a00d24ac50f4b80361f95c43c2fb38b66" kindref="member">path_vels_</ref>.push_back(agent_path_vel);</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classagents_1_1AgentPathPrediction_1a7bccec7ac9341244d43cac64b79e9470" kindref="member">got_new_agent_paths_</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ROS_WARN_NAMED(<ref refid="agent__path__prediction_8h_1a8cc8d559acdd2f74085b20977182d5b7" kindref="member">NODE_NAME</ref>,</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Got<sp/>empty<sp/>path<sp/>for<sp/>agent,<sp/>start<sp/>or<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;goal<sp/>position<sp/>is<sp/>probably<sp/>invalid&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ROS_WARN_NAMED(<ref refid="agent__path__prediction_8h_1a8cc8d559acdd2f74085b20977182d5b7" kindref="member">NODE_NAME</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>call<sp/>%s<sp/>service&quot;</highlight><highlight class="normal">,<sp/><ref refid="classagents_1_1AgentPathPrediction_1a9d10d00a04ab902e039a7e604ad4d081" kindref="member">get_plan_srv_name_</ref>.c_str());</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ROS_WARN_NAMED(<ref refid="agent__path__prediction_8h_1a8cc8d559acdd2f74085b20977182d5b7" kindref="member">NODE_NAME</ref>,<sp/></highlight><highlight class="stringliteral">&quot;%s<sp/>service<sp/>does<sp/>not<sp/>exist,<sp/>re-trying<sp/>to<sp/>subscribe&quot;</highlight><highlight class="normal">,<sp/><ref refid="classagents_1_1AgentPathPrediction_1a9d10d00a04ab902e039a7e604ad4d081" kindref="member">get_plan_srv_name_</ref>.c_str());</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ros::NodeHandle<sp/>private_nh(</highlight><highlight class="stringliteral">&quot;~/&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classagents_1_1AgentPathPrediction_1a6f1e33b71d3cdc779a19e3c0b103868e" kindref="member">get_plan_client_</ref><sp/>=<sp/>private_nh.serviceClient&lt;nav_msgs::GetPlan&gt;(<ref refid="classagents_1_1AgentPathPrediction_1a9d10d00a04ab902e039a7e604ad4d081" kindref="member">get_plan_srv_name_</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classagents_1_1AgentPathPrediction_1a0776895e9f6212da8bf8c1b2eff6d7d6" kindref="member">predictAgentsFromPaths</ref>(req,<sp/>res,<sp/><ref refid="classagents_1_1AgentPathPrediction_1a00d24ac50f4b80361f95c43c2fb38b66" kindref="member">path_vels_</ref>);</highlight></codeline>
<codeline lineno="628"><highlight class="normal">}</highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classagents_1_1AgentPathPrediction_1a4457ce94684aecde720679bfd9f92769" kindref="member">AgentPathPrediction::predictAgentsGoal</ref>(agent_path_prediction::AgentPosePredict::Request<sp/>&amp;req,<sp/>agent_path_prediction::AgentPosePredict::Response<sp/>&amp;res)<sp/>{</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>now<sp/>=<sp/>ros::Time::now();</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>tracked_agents<sp/>=<sp/><ref refid="classagents_1_1AgentPathPrediction_1a0dbc4afec33d4b2af269c3853dca8747" kindref="member">tracked_agents_</ref>;</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/>std::map&lt;int,<sp/>geometry_msgs::Pose&gt;<sp/>predicted_goals;</highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;goal<sp/>:<sp/><ref refid="classagents_1_1AgentPathPrediction_1a01a4ae3f6114bc5d764a2df955d23077" kindref="member">predicted_goals_</ref>.goals)<sp/>{</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/>predicted_goals[goal.id]<sp/>=<sp/>goal.goal;</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="638"><highlight class="normal"></highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>robot<sp/>pose</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/>tf::StampedTransform<sp/>robot_to_map_tf;</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/>tf::StampedTransform<sp/>agent_to_map_tf;</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>transforms_found<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classagents_1_1AgentPathPrediction_1adbd56e5ff1e91aec6775d519890955c4" kindref="member">tf_</ref>.lookupTransform(<ref refid="classagents_1_1AgentPathPrediction_1aea296f3d06cb663f04e8cadb52f4bc25" kindref="member">map_frame_id_</ref>,<sp/><ref refid="classagents_1_1AgentPathPrediction_1a6d5084936b596eeea8889a53b6d5e890" kindref="member">robot_frame_id_</ref>,<sp/>ros::Time(0),<sp/>robot_to_map_tf);</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>agents_frame<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;map&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!tracked_agents.header.frame_id.empty())<sp/>{</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>agents_frame<sp/>=<sp/>tracked_agents.header.frame_id;</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classagents_1_1AgentPathPrediction_1adbd56e5ff1e91aec6775d519890955c4" kindref="member">tf_</ref>.lookupTransform(<ref refid="classagents_1_1AgentPathPrediction_1aea296f3d06cb663f04e8cadb52f4bc25" kindref="member">map_frame_id_</ref>,<sp/>agents_frame,<sp/>ros::Time(0),<sp/>agent_to_map_tf);</highlight></codeline>
<codeline lineno="650"><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/>transforms_found<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(tf::LookupException<sp/>&amp;ex)<sp/>{</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/>ROS_ERROR_NAMED(<ref refid="agent__path__prediction_8h_1a8cc8d559acdd2f74085b20977182d5b7" kindref="member">NODE_NAME</ref>,<sp/></highlight><highlight class="stringliteral">&quot;No<sp/>Transform<sp/>available<sp/>Error:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>ex.what());</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(tf::ConnectivityException<sp/>&amp;ex)<sp/>{</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/>ROS_ERROR_NAMED(<ref refid="agent__path__prediction_8h_1a8cc8d559acdd2f74085b20977182d5b7" kindref="member">NODE_NAME</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Connectivity<sp/>Error:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>ex.what());</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(tf::ExtrapolationException<sp/>&amp;ex)<sp/>{</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/>ROS_ERROR_NAMED(<ref refid="agent__path__prediction_8h_1a8cc8d559acdd2f74085b20977182d5b7" kindref="member">NODE_NAME</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Extrapolation<sp/>Error:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>ex.what());</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="659"><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>first<sp/>check<sp/>if<sp/>path<sp/>calculation<sp/>is<sp/>needed,<sp/>and<sp/>for<sp/>whom</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/>std::vector&lt;AgentStartPoseVel&gt;<sp/>agent_start_pose_vels;</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/>std::vector&lt;bool&gt;<sp/>start_poses_far;</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx_order<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="664"><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;agent<sp/>:<sp/>tracked_agents.agents)<sp/>{</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classagents_1_1AgentPathPrediction_1a46d3187082c971c29b328168a05de302" kindref="member">path_vels_pos_</ref>.push_back(-1);</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::find(req.ids.begin(),<sp/>req.ids.end(),<sp/>agent.track_id)<sp/>==<sp/>req.ids.end())<sp/>{</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>path_exist<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;path_vel<sp/>:<sp/><ref refid="classagents_1_1AgentPathPrediction_1a00d24ac50f4b80361f95c43c2fb38b66" kindref="member">path_vels_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(path_vel.id<sp/>==<sp/>agent.track_id)<sp/>{</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>path_exist<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="677"><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>agent<sp/>pose</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;segment<sp/>:<sp/>agent.segments)<sp/>{</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(segment.type<sp/>==<sp/><ref refid="classagents_1_1AgentPathPrediction_1a5568632bb235b095c5fd80552a66fee4" kindref="member">default_agent_part_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>geometry_msgs::PoseStamped<sp/>agent_start;</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>agent_start.header.frame_id<sp/>=<sp/>tracked_agents.header.frame_id;</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>agent_start.header.stamp<sp/>=<sp/>now;</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>agent_start.pose<sp/>=<sp/>segment.pose.pose;</highlight></codeline>
<codeline lineno="685"><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tf::Pose<sp/>start_pose_tf;</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_pose_tf.setRotation(tf::Quaternion(0.0,<sp/>0.0,<sp/>0.0,<sp/>1.0));</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>geometry_msgs::Pose<sp/>start_pose;</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_pose.orientation.w<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tf::poseMsgToTF(agent_start.pose,<sp/>start_pose_tf);</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_pose_tf<sp/>=<sp/>agent_to_map_tf<sp/>*<sp/>start_pose_tf;</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tf::poseTFToMsg(start_pose_tf,<sp/>start_pose);</highlight></codeline>
<codeline lineno="693"><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!path_exist<sp/>||<sp/><ref refid="classagents_1_1AgentPathPrediction_1a01a4ae3f6114bc5d764a2df955d23077" kindref="member">predicted_goals_</ref>.header.stamp.toSec()<sp/>&lt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AgentStartPoseVel<sp/>agent_start_pose_vel<sp/>=<sp/>{.id<sp/>=<sp/>agent.track_id,<sp/>.pose<sp/>=<sp/>agent_start,<sp/>.vel<sp/>=<sp/>segment.twist};</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>agent_start_pose_vels.push_back(agent_start_pose_vel);</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classagents_1_1AgentPathPrediction_1a46d3187082c971c29b328168a05de302" kindref="member">path_vels_pos_</ref>[agent.track_id<sp/>-<sp/>1]<sp/>=<sp/>idx_order;</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::find(req.ids.begin(),<sp/>req.ids.end(),<sp/>agent.track_id)<sp/>!=<sp/>req.ids.end())<sp/>{</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dist_far<sp/>=<sp/>std::hypot(agent_start.pose.position.x<sp/>-<sp/><ref refid="classagents_1_1AgentPathPrediction_1a00d24ac50f4b80361f95c43c2fb38b66" kindref="member">path_vels_</ref>[<ref refid="classagents_1_1AgentPathPrediction_1a46d3187082c971c29b328168a05de302" kindref="member">path_vels_pos_</ref>[agent.track_id<sp/>-<sp/>1]].path.poses[0].pose.position.x,</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>agent_start.pose.position.y<sp/>-<sp/><ref refid="classagents_1_1AgentPathPrediction_1a00d24ac50f4b80361f95c43c2fb38b66" kindref="member">path_vels_</ref>[<ref refid="classagents_1_1AgentPathPrediction_1a46d3187082c971c29b328168a05de302" kindref="member">path_vels_pos_</ref>[agent.track_id<sp/>-<sp/>1]].path.poses[0].pose.position.y);</highlight></codeline>
<codeline lineno="702"><highlight class="normal"></highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dist_far<sp/>&gt;<sp/><ref refid="agent__path__prediction_8h_1a70d5ea5ea8c43ed32d3d28e41567b81e" kindref="member">RECALC_DIST</ref>)<sp/>{</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_poses_far.push_back(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AgentStartPoseVel<sp/>agent_start_pose_vel<sp/>=<sp/>{.id<sp/>=<sp/>agent.track_id,<sp/>.pose<sp/>=<sp/>agent_start,<sp/>.vel<sp/>=<sp/>segment.twist};</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>agent_start_pose_vels.push_back(agent_start_pose_vel);</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classagents_1_1AgentPathPrediction_1a46d3187082c971c29b328168a05de302" kindref="member">path_vels_pos_</ref>[agent.track_id<sp/>-<sp/>1]<sp/>=<sp/>idx_order;</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classagents_1_1AgentPathPrediction_1a00d24ac50f4b80361f95c43c2fb38b66" kindref="member">path_vels_</ref>.clear();</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/>idx_order++;</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="717"><highlight class="normal"></highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!agent_start_pose_vels.empty())<sp/>{</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(transforms_found)<sp/>{</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;agent_start_pose_vel<sp/>:<sp/>agent_start_pose_vels)<sp/>{</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nav_msgs::GetPlan<sp/>get_plan_srv;</highlight></codeline>
<codeline lineno="722"><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>agent<sp/>pose<sp/>in<sp/>map<sp/>frame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tf::Pose<sp/>start_pose_tf;</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_pose_tf.setRotation(tf::Quaternion(0.0,<sp/>0.0,<sp/>0.0,<sp/>1.0));</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tf::poseMsgToTF(agent_start_pose_vel.pose.pose,<sp/>start_pose_tf);</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_pose_tf<sp/>=<sp/>agent_to_map_tf<sp/>*<sp/>start_pose_tf;</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>start_pose_stamped<sp/>=<sp/>agent_start_pose_vel.pose;</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tf::poseTFToMsg(start_pose_tf,<sp/>start_pose_stamped.pose);</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>start_path<sp/>=<sp/><ref refid="classagents_1_1AgentPathPrediction_1acb6a7bcfe957c55140c73f98ed71005d" kindref="member">setFixedPath</ref>(start_pose_stamped);</highlight></codeline>
<codeline lineno="731"><highlight class="normal"></highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_plan_srv.request.start.header.frame_id<sp/>=<sp/><ref refid="classagents_1_1AgentPathPrediction_1aea296f3d06cb663f04e8cadb52f4bc25" kindref="member">map_frame_id_</ref>;</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_plan_srv.request.start.header.stamp<sp/>=<sp/>now;</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_plan_srv.request.start.pose<sp/>=<sp/>start_path.poses.back().pose;</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classagents_1_1AgentPathPrediction_1a2687e915d54148e4e53ed89e5490146d" kindref="member">front_pose_pub_</ref>.publish(start_path.poses.back());</highlight></codeline>
<codeline lineno="736"><highlight class="normal"></highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_plan_srv.request.goal.header.frame_id<sp/>=<sp/><ref refid="classagents_1_1AgentPathPrediction_1aea296f3d06cb663f04e8cadb52f4bc25" kindref="member">map_frame_id_</ref>;</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_plan_srv.request.goal.header.stamp<sp/>=<sp/>now;</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_plan_srv.request.goal.pose<sp/>=<sp/>predicted_goals[agent_start_pose_vel.id];</highlight></codeline>
<codeline lineno="740"><highlight class="normal"></highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ROS_DEBUG_NAMED(<ref refid="agent__path__prediction_8h_1a8cc8d559acdd2f74085b20977182d5b7" kindref="member">NODE_NAME</ref>,</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;agent<sp/>start:<sp/>x=%.2f,<sp/>y=%.2f,<sp/>theta=%.2f,<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;goal:<sp/>x=%.2f,<sp/>y=%.2f,<sp/>theta=%.2f&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_plan_srv.request.start.pose.position.x,<sp/>get_plan_srv.request.start.pose.position.y,<sp/>tf::getYaw(get_plan_srv.request.start.pose.orientation),</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_plan_srv.request.goal.pose.position.x,<sp/>get_plan_srv.request.goal.pose.position.y,<sp/>tf::getYaw(get_plan_srv.request.goal.pose.orientation));</highlight></codeline>
<codeline lineno="746"><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>plan<sp/>for<sp/>agent</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classagents_1_1AgentPathPrediction_1a6f1e33b71d3cdc779a19e3c0b103868e" kindref="member">get_plan_client_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classagents_1_1AgentPathPrediction_1a6f1e33b71d3cdc779a19e3c0b103868e" kindref="member">get_plan_client_</ref>.call(get_plan_srv))<sp/>{</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!get_plan_srv.response.plan.poses.empty())<sp/>{</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AgentPathVel<sp/>agent_path_vel;</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>agent_path_vel.id<sp/>=<sp/>agent_start_pose_vel.id;</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>agent_path_vel.path<sp/>=<sp/>get_plan_srv.response.plan;</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>agent_path_vel.start_vel<sp/>=<sp/>agent_start_pose_vel.vel;</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classagents_1_1AgentPathPrediction_1a00d24ac50f4b80361f95c43c2fb38b66" kindref="member">path_vels_</ref>.push_back(agent_path_vel);</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classagents_1_1AgentPathPrediction_1a7bccec7ac9341244d43cac64b79e9470" kindref="member">got_new_agent_paths_</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ROS_WARN_NAMED(<ref refid="agent__path__prediction_8h_1a8cc8d559acdd2f74085b20977182d5b7" kindref="member">NODE_NAME</ref>,</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Got<sp/>empty<sp/>path<sp/>for<sp/>agent,<sp/>start<sp/>or<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;goal<sp/>position<sp/>is<sp/>probably<sp/>invalid&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ROS_WARN_NAMED(<ref refid="agent__path__prediction_8h_1a8cc8d559acdd2f74085b20977182d5b7" kindref="member">NODE_NAME</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>call<sp/>%s<sp/>service&quot;</highlight><highlight class="normal">,<sp/><ref refid="classagents_1_1AgentPathPrediction_1a9d10d00a04ab902e039a7e604ad4d081" kindref="member">get_plan_srv_name_</ref>.c_str());</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ROS_WARN_NAMED(<ref refid="agent__path__prediction_8h_1a8cc8d559acdd2f74085b20977182d5b7" kindref="member">NODE_NAME</ref>,<sp/></highlight><highlight class="stringliteral">&quot;%s<sp/>service<sp/>does<sp/>not<sp/>exist,<sp/>re-trying<sp/>to<sp/>subscribe&quot;</highlight><highlight class="normal">,<sp/><ref refid="classagents_1_1AgentPathPrediction_1a9d10d00a04ab902e039a7e604ad4d081" kindref="member">get_plan_srv_name_</ref>.c_str());</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ros::NodeHandle<sp/>private_nh(</highlight><highlight class="stringliteral">&quot;~/&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classagents_1_1AgentPathPrediction_1a6f1e33b71d3cdc779a19e3c0b103868e" kindref="member">get_plan_client_</ref><sp/>=<sp/>private_nh.serviceClient&lt;nav_msgs::GetPlan&gt;(<ref refid="classagents_1_1AgentPathPrediction_1a9d10d00a04ab902e039a7e604ad4d081" kindref="member">get_plan_srv_name_</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="773"><highlight class="normal"></highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classagents_1_1AgentPathPrediction_1a0776895e9f6212da8bf8c1b2eff6d7d6" kindref="member">predictAgentsFromPaths</ref>(req,<sp/>res,<sp/><ref refid="classagents_1_1AgentPathPrediction_1a00d24ac50f4b80361f95c43c2fb38b66" kindref="member">path_vels_</ref>);</highlight></codeline>
<codeline lineno="775"><highlight class="normal">}</highlight></codeline>
<codeline lineno="776"><highlight class="normal"></highlight></codeline>
<codeline lineno="777"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classagents_1_1AgentPathPrediction_1a0776895e9f6212da8bf8c1b2eff6d7d6" kindref="member">AgentPathPrediction::predictAgentsFromPaths</ref>(agent_path_prediction::AgentPosePredict::Request<sp/>&amp;<sp/></highlight><highlight class="comment">/*req*/</highlight><highlight class="normal">,<sp/>agent_path_prediction::AgentPosePredict::Response<sp/>&amp;res,</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;AgentPathVel&gt;<sp/>&amp;path_vels)<sp/>{</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>tracked_agents<sp/>=<sp/><ref refid="classagents_1_1AgentPathPrediction_1a0dbc4afec33d4b2af269c3853dca8747" kindref="member">tracked_agents_</ref>;</highlight></codeline>
<codeline lineno="780"><highlight class="normal"></highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classagents_1_1AgentPathPrediction_1a7bccec7ac9341244d43cac64b79e9470" kindref="member">got_new_agent_paths_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>agent_path_vel<sp/>:<sp/>path_vels)<sp/>{</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;poses<sp/>=<sp/>agent_path_vel.path.poses;</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!poses.empty())<sp/>{</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>agent_path_prediction::PredictedPoses<sp/>predicted_poses;</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>predicted_poses.id<sp/>=<sp/>agent_path_vel.id;</highlight></codeline>
<codeline lineno="787"><highlight class="normal"></highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lin_vel<sp/>=<sp/>std::hypot(agent_path_vel.start_vel.twist.linear.x,<sp/>agent_path_vel.start_vel.twist.linear.y);</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>now<sp/>=<sp/>ros::Time::now();</highlight></codeline>
<codeline lineno="790"><highlight class="normal"></highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>predicted_poses.poses.resize(poses.size());</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>poses.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;pose<sp/>=<sp/>poses[i];</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>geometry_msgs::PoseWithCovarianceStamped<sp/>predicted_pose;</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>0<sp/>||<sp/>lin_vel<sp/>==<sp/>0.0)<sp/>{</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>predicted_pose.header.stamp<sp/>=<sp/>now;</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;last_pose<sp/>=<sp/>poses[i<sp/>-<sp/>1];</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>dist<sp/>=<sp/>std::hypot(pose.pose.position.x<sp/>-<sp/>last_pose.pose.position.x,<sp/>pose.pose.position.y<sp/>-<sp/>last_pose.pose.position.y);</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>predicted_pose.header.stamp<sp/>=<sp/>predicted_poses.poses[i<sp/>-<sp/>1].header.stamp<sp/>+<sp/>ros::Duration(dist<sp/>/<sp/>lin_vel);</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>predicted_pose.header.frame_id<sp/>=<sp/>pose.header.frame_id;</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>predicted_pose.pose.pose<sp/>=<sp/>pose.pose;</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>predicted_poses.poses[i]<sp/>=<sp/>predicted_pose;</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="806"><highlight class="normal"></highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/><ref refid="classagents_1_1AgentPathPrediction_1aa9b8199d496b852bf421fcb77ee5b10e" kindref="member">last_predicted_poses_</ref>.begin();<sp/>it<sp/>!=<sp/><ref refid="classagents_1_1AgentPathPrediction_1aa9b8199d496b852bf421fcb77ee5b10e" kindref="member">last_predicted_poses_</ref>.end();<sp/>++it)<sp/>{</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it-&gt;id<sp/>==<sp/>predicted_poses.id)<sp/>{</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classagents_1_1AgentPathPrediction_1aa9b8199d496b852bf421fcb77ee5b10e" kindref="member">last_predicted_poses_</ref>.erase(it);</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classagents_1_1AgentPathPrediction_1aa9b8199d496b852bf421fcb77ee5b10e" kindref="member">last_predicted_poses_</ref>.push_back(predicted_poses);</highlight></codeline>
<codeline lineno="814"><highlight class="normal"></highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classagents_1_1AgentPathPrediction_1ab01e01bbeef567abd29b7fc3cd6641d4" kindref="member">last_prune_indices_</ref>.erase(predicted_poses.id);</highlight></codeline>
<codeline lineno="816"><highlight class="normal"></highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>(auto<sp/>it<sp/>=<sp/>tracked_agents.agents.begin();<sp/>it<sp/>!=<sp/>tracked_agents.agents.end();<sp/>++it)<sp/>{<sp/><sp/>//<sp/>TODD:<sp/>Check<sp/>this,<sp/>remove<sp/>for<sp/>now</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>if<sp/>(it-&gt;track_id<sp/>==<sp/>predicted_poses.id)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>tracked_agents.agents.erase(it);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>break;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ROS_DEBUG_NAMED(<ref refid="agent__path__prediction_8h_1a8cc8d559acdd2f74085b20977182d5b7" kindref="member">NODE_NAME</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Processed<sp/>new<sp/>path<sp/>for<sp/>agent<sp/>%ld<sp/>with<sp/>%ld<sp/>poses<sp/>in<sp/>frame<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>agent_path_vel.id,<sp/>predicted_poses.poses.size(),</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>predicted_poses.poses.front().header.frame_id.c_str());</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><ref refid="classagents_1_1AgentPathPrediction_1a7bccec7ac9341244d43cac64b79e9470" kindref="member">got_new_agent_paths_</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="829"><highlight class="normal"></highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;poses<sp/>:<sp/><ref refid="classagents_1_1AgentPathPrediction_1aa9b8199d496b852bf421fcb77ee5b10e" kindref="member">last_predicted_poses_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!poses.poses.empty())<sp/>{</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>geometry_msgs::PoseStamped<sp/>start_pose;</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>geometry_msgs::TwistStamped<sp/>start_twist;</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classagents_1_1AgentPathPrediction_1a8dde9a77addc3ba73e40651678c8cc37" kindref="member">transformPoseTwist</ref>(tracked_agents,<sp/>poses.id,<sp/>poses.poses.front().header.frame_id,<sp/>start_pose,<sp/>start_twist))<sp/>{</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>last_prune_index_it<sp/>=<sp/><ref refid="classagents_1_1AgentPathPrediction_1ab01e01bbeef567abd29b7fc3cd6641d4" kindref="member">last_prune_indices_</ref>.find(poses.id);</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>begin_index<sp/>=<sp/>(last_prune_index_it<sp/>!=<sp/><ref refid="classagents_1_1AgentPathPrediction_1ab01e01bbeef567abd29b7fc3cd6641d4" kindref="member">last_prune_indices_</ref>.end())<sp/>?<sp/>last_prune_index_it-&gt;second<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>prune_index<sp/>=<sp/><ref refid="classagents_1_1AgentPathPrediction_1a4ac29e3076e672089a8eca878f59eaca" kindref="member">prunePath</ref>(begin_index,<sp/>start_pose.pose,<sp/>poses.poses);</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classagents_1_1AgentPathPrediction_1ab01e01bbeef567abd29b7fc3cd6641d4" kindref="member">last_prune_indices_</ref>[poses.id]<sp/>=<sp/>prune_index;</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(prune_index<sp/>&lt;<sp/>0<sp/>||<sp/>prune_index<sp/>&gt;<sp/>poses.poses.size())<sp/>{</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ROS_ERROR_NAMED(<ref refid="agent__path__prediction_8h_1a8cc8d559acdd2f74085b20977182d5b7" kindref="member">NODE_NAME</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Logical<sp/>error,<sp/>cannot<sp/>prune<sp/>path&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>geometry_msgs::PoseWithCovarianceStamped<sp/>start_pose_co;</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_pose_co.header.stamp<sp/>=<sp/>start_pose.header.stamp;</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_pose_co.header.frame_id<sp/>=<sp/>start_pose.header.frame_id;</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_pose_co.pose.pose<sp/>=<sp/>start_pose.pose;</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;geometry_msgs::PoseWithCovarianceStamped&gt;<sp/>pruned_path;</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pruned_path.push_back(start_pose_co);</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pruned_path.insert(pruned_path.end(),<sp/>poses.poses.begin()<sp/>+<sp/>prune_index,<sp/>poses.poses.end());</highlight></codeline>
<codeline lineno="850"><highlight class="normal"></highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pruned_path.empty())<sp/>{</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>update<sp/>time<sp/>stamps<sp/>for<sp/>the<sp/>predicted<sp/>path</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lin_vel<sp/>=<sp/>std::hypot(start_twist.twist.linear.x,<sp/>start_twist.twist.linear.y);</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>now<sp/>=<sp/>ros::Time::now();</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>pruned_path.size();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>0<sp/>||<sp/>lin_vel<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pruned_path[i].header.stamp<sp/>=<sp/>now;</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;pose<sp/>=<sp/>pruned_path[i].pose.pose;</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;last_pose<sp/>=<sp/>pruned_path[i<sp/>-<sp/>1].pose.pose;</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>dist<sp/>=<sp/>std::hypot(pose.position.x<sp/>-<sp/>last_pose.position.x,<sp/>pose.position.y<sp/>-<sp/>last_pose.position.y);</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pruned_path[i].header.stamp<sp/>=<sp/>pruned_path[i<sp/>-<sp/>1].header.stamp<sp/>+<sp/>ros::Duration(dist<sp/>/<sp/>lin_vel);</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="865"><highlight class="normal"></highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>agent_path_prediction::PredictedPoses<sp/>predicted_poses;</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>predicted_poses.id<sp/>=<sp/>poses.id;</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>predicted_poses.start_velocity<sp/>=<sp/>start_twist;</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>predicted_poses.poses<sp/>=<sp/>pruned_path;</highlight></codeline>
<codeline lineno="870"><highlight class="normal"></highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res.predicted_agents_poses.push_back(predicted_poses);</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ROS_INFO(&quot;Pushed<sp/>the<sp/>poses&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ROS_DEBUG_NAMED(<ref refid="agent__path__prediction_8h_1a8cc8d559acdd2f74085b20977182d5b7" kindref="member">NODE_NAME</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Giving<sp/>path<sp/>of<sp/>%ld<sp/>points<sp/>from<sp/>%ld<sp/>points<sp/>for<sp/>agent<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>predicted_poses.poses.size(),<sp/>poses.poses.size(),<sp/>poses.id);</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="878"><highlight class="normal"></highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="880"><highlight class="normal">}</highlight></codeline>
<codeline lineno="881"><highlight class="normal"></highlight></codeline>
<codeline lineno="882"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TODO:<sp/>Remove<sp/>this<sp/>and<sp/>make<sp/>it<sp/>a<sp/>subscriber</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="883"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classagents_1_1AgentPathPrediction_1a1902b77fbbb4508d97b7abdb9f678d44" kindref="member">AgentPathPrediction::setGoal</ref>(agent_path_prediction::AgentGoal::Request<sp/>&amp;req,<sp/>agent_path_prediction::AgentGoal::Response<sp/>&amp;res)<sp/>{</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/>ROS_DEBUG_NAMED(<ref refid="agent__path__prediction_8h_1a8cc8d559acdd2f74085b20977182d5b7" kindref="member">NODE_NAME</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Received<sp/>new<sp/>agent<sp/>goal&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><ref refid="classagents_1_1AgentPathPrediction_1a96786bf5f15d2267b3d2e0174726846d" kindref="member">got_external_goal_</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><ref refid="classagents_1_1AgentPathPrediction_1a0a552e1522d29105854cb7058bb3bd6e" kindref="member">external_goals_</ref>.clear();</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><ref refid="classagents_1_1AgentPathPrediction_1a00d24ac50f4b80361f95c43c2fb38b66" kindref="member">path_vels_</ref>.clear();</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;goal<sp/>:<sp/>req.goals)<sp/>{</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classagents_1_1AgentPathPrediction_1a0a552e1522d29105854cb7058bb3bd6e" kindref="member">external_goals_</ref>.push_back(goal);</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="891"><highlight class="normal"></highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/>res.success<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/>res.message<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Goal<sp/>has<sp/>been<sp/>set.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="895"><highlight class="normal">}</highlight></codeline>
<codeline lineno="896"><highlight class="normal"></highlight></codeline>
<codeline lineno="897"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classagents_1_1AgentPathPrediction_1aaecabcfff1c9e20f2630b2df29884ec7" kindref="member">AgentPathPrediction::resetPredictionSrvs</ref>(std_srvs::Empty::Request<sp/>&amp;<sp/></highlight><highlight class="comment">/*req*/</highlight><highlight class="normal">,<sp/>std_srvs::Empty::Response<sp/>&amp;<sp/></highlight><highlight class="comment">/*res*/</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><ref refid="classagents_1_1AgentPathPrediction_1a7bccec7ac9341244d43cac64b79e9470" kindref="member">got_new_agent_paths_</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><ref refid="classagents_1_1AgentPathPrediction_1a96786bf5f15d2267b3d2e0174726846d" kindref="member">got_external_goal_</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><ref refid="classagents_1_1AgentPathPrediction_1aa9b8199d496b852bf421fcb77ee5b10e" kindref="member">last_predicted_poses_</ref>.clear();</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><ref refid="classagents_1_1AgentPathPrediction_1a00d24ac50f4b80361f95c43c2fb38b66" kindref="member">path_vels_</ref>.clear();</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><ref refid="classagents_1_1AgentPathPrediction_1aa622c90bab0162345496d6fd2a0b940e" kindref="member">check_path_</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><ref refid="classagents_1_1AgentPathPrediction_1ab8cb8d125e5d3c2b2264fc5b7de778c3" kindref="member">behind_pose_</ref><sp/>=<sp/>geometry_msgs::Transform();</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="905"><highlight class="normal">}</highlight></codeline>
<codeline lineno="906"><highlight class="normal"></highlight></codeline>
<codeline lineno="907"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classagents_1_1AgentPathPrediction_1ad4ae8745f5bf29165f06c98c36d1ff60" kindref="member">AgentPathPrediction::setParams</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>velobs_mul,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>velobs_min_rad,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>velobs_max_rad,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>velobs_max_rad_time,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>velobs_use_ang)<sp/>{</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><ref refid="classagents_1_1AgentPathPrediction_1a8524832c3d92ccb2c06adb8bd32838cf" kindref="member">velobs_mul_</ref><sp/>=<sp/>velobs_mul;</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><ref refid="classagents_1_1AgentPathPrediction_1ab8bf79bf0ef7d70002a7ce3c8cbf84d7" kindref="member">velobs_min_rad_</ref><sp/>=<sp/>velobs_min_rad;</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><ref refid="classagents_1_1AgentPathPrediction_1a3291bcf9f3eb437156ec8681775f4e54" kindref="member">velobs_max_rad_</ref><sp/>=<sp/>velobs_max_rad;</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><ref refid="classagents_1_1AgentPathPrediction_1a6fd66ba5b372a473849f825ddfb05a57" kindref="member">velobs_max_rad_time_</ref><sp/>=<sp/>velobs_max_rad_time;</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><ref refid="classagents_1_1AgentPathPrediction_1a1c9ae4182a095c3fd8539b9a37940429" kindref="member">velobs_use_ang_</ref><sp/>=<sp/>velobs_use_ang;</highlight></codeline>
<codeline lineno="913"><highlight class="normal"></highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/>ROS_DEBUG_NAMED(<ref refid="agent__path__prediction_8h_1a8cc8d559acdd2f74085b20977182d5b7" kindref="member">NODE_NAME</ref>,<sp/></highlight><highlight class="stringliteral">&quot;parameters<sp/>set:<sp/>velobs-mul=%f,<sp/>velocity-obstacle:<sp/>min-radius:%f,<sp/>max-radius:%f,<sp/>max-radius-time=%f<sp/>use-ang=%d&quot;</highlight><highlight class="normal">,<sp/><ref refid="classagents_1_1AgentPathPrediction_1a8524832c3d92ccb2c06adb8bd32838cf" kindref="member">velobs_mul_</ref>,<sp/><ref refid="classagents_1_1AgentPathPrediction_1ab8bf79bf0ef7d70002a7ce3c8cbf84d7" kindref="member">velobs_min_rad_</ref>,<sp/><ref refid="classagents_1_1AgentPathPrediction_1a3291bcf9f3eb437156ec8681775f4e54" kindref="member">velobs_max_rad_</ref>,</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classagents_1_1AgentPathPrediction_1a6fd66ba5b372a473849f825ddfb05a57" kindref="member">velobs_max_rad_time_</ref>,<sp/><ref refid="classagents_1_1AgentPathPrediction_1a1c9ae4182a095c3fd8539b9a37940429" kindref="member">velobs_use_ang_</ref>);</highlight></codeline>
<codeline lineno="916"><highlight class="normal">}</highlight></codeline>
<codeline lineno="917"><highlight class="normal"></highlight></codeline>
<codeline lineno="918"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classagents_1_1AgentPathPrediction_1ac49360a95819b8945c5861f8b2fe3f1c" kindref="member">AgentPathPrediction::reconfigureCB</ref>(agent_path_prediction::AgentPathPredictionConfig<sp/>&amp;config,<sp/>uint32_t<sp/></highlight><highlight class="comment">/*level*/</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><ref refid="classagents_1_1AgentPathPrediction_1ad4ae8745f5bf29165f06c98c36d1ff60" kindref="member">setParams</ref>(config.velobs_mul,<sp/>config.velobs_min_rad,<sp/>config.velobs_max_rad,<sp/>config.velobs_max_rad_time,<sp/>config.velobs_use_ang);</highlight></codeline>
<codeline lineno="920"><highlight class="normal">}</highlight></codeline>
<codeline lineno="921"><highlight class="normal"></highlight></codeline>
<codeline lineno="922"><highlight class="normal">nav_msgs::Path<sp/><ref refid="classagents_1_1AgentPathPrediction_1acb6a7bcfe957c55140c73f98ed71005d" kindref="member">AgentPathPrediction::setFixedPath</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>geometry_msgs::PoseStamped<sp/>&amp;start_pose)<sp/>{</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/>nav_msgs::Path<sp/>path;</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/>path.header.frame_id<sp/>=<sp/>start_pose.header.frame_id;</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/>path.header.stamp<sp/>=<sp/>start_pose.header.stamp;</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/>path.poses.push_back(start_pose);</highlight></codeline>
<codeline lineno="927"><highlight class="normal"></highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Extract<sp/>yaw<sp/>from<sp/>quaternion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>roll;</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>pitch;</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>yaw;</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/>tf2::Quaternion<sp/>q_start;</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/>tf2::fromMsg(start_pose.pose.orientation,<sp/>q_start);</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/>tf2::Matrix3x3(q_start).getRPY(roll,<sp/>pitch,<sp/>yaw);</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>step_distance<sp/>=<sp/>0.1;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>meters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>total_distance<sp/>=<sp/>0.5;<sp/><sp/></highlight><highlight class="comment">//<sp/>meters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="937"><highlight class="normal"></highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dist<sp/>=<sp/>step_distance;<sp/>dist<sp/>&lt;=<sp/>total_distance;<sp/>dist<sp/>+=<sp/>step_distance)<sp/>{</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/>geometry_msgs::PoseStamped<sp/>new_pose<sp/>=<sp/>start_pose;</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/>new_pose.pose.position.x<sp/>+=<sp/>dist<sp/>*<sp/>cos(yaw);</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/>new_pose.pose.position.y<sp/>+=<sp/>dist<sp/>*<sp/>sin(yaw);</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/>path.poses.push_back(new_pose);</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>path;</highlight></codeline>
<codeline lineno="945"><highlight class="normal">}</highlight></codeline>
<codeline lineno="946"><highlight class="normal"></highlight></codeline>
<codeline lineno="947"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classagents_1_1AgentPathPrediction_1aca97abb045a6aca7039888300a4d0b02" kindref="member">AgentPathPrediction::loadRosParamFromNodeHandle</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ros::NodeHandle<sp/>&amp;private_nh)<sp/>{</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/>private_nh.param(</highlight><highlight class="stringliteral">&quot;ns&quot;</highlight><highlight class="normal">,<sp/><ref refid="classagents_1_1AgentPathPrediction_1a6d79011b10a83cf459f420c4dccc9970" kindref="member">ns_</ref>,<sp/>std::string(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/>private_nh.param(</highlight><highlight class="stringliteral">&quot;publish_markers&quot;</highlight><highlight class="normal">,<sp/><ref refid="classagents_1_1AgentPathPrediction_1a0e67a329d28183630b0ffe369f4b29d5" kindref="member">publish_markers_</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/>private_nh.param(</highlight><highlight class="stringliteral">&quot;robot_frame_id&quot;</highlight><highlight class="normal">,<sp/><ref refid="classagents_1_1AgentPathPrediction_1a6d5084936b596eeea8889a53b6d5e890" kindref="member">robot_frame_id_</ref>,<sp/>std::string(<ref refid="agent__path__prediction_8cpp_1ab68760c2385d64dcd75083f587cb32f2" kindref="member">ROBOT_FRAME_ID</ref>));</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/>private_nh.param(</highlight><highlight class="stringliteral">&quot;map_frame_id&quot;</highlight><highlight class="normal">,<sp/><ref refid="classagents_1_1AgentPathPrediction_1aea296f3d06cb663f04e8cadb52f4bc25" kindref="member">map_frame_id_</ref>,<sp/>std::string(<ref refid="agent__path__prediction_8cpp_1a3923a3ded552ac37bea50521f4c0e19f" kindref="member">MAP_FRAME_ID</ref>));</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/>private_nh.param(</highlight><highlight class="stringliteral">&quot;agent_dist_behind_robot&quot;</highlight><highlight class="normal">,<sp/><ref refid="classagents_1_1AgentPathPrediction_1a72819f6e0c25db8988e96a2918a24ec4" kindref="member">agent_dist_behind_robot_</ref>,<sp/><ref refid="agent__path__prediction_8cpp_1a0e63830df919f825d5d9ce05f5bac840" kindref="member">AGENT_DIST_BEHIND_ROBOT</ref>);</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/>private_nh.param(</highlight><highlight class="stringliteral">&quot;agent_angle_behind_robot&quot;</highlight><highlight class="normal">,<sp/><ref refid="classagents_1_1AgentPathPrediction_1a178ea0a5a7e658e2e81cf57ddef61b6a" kindref="member">agent_angle_behind_robot_</ref>,<sp/><ref refid="agent__path__prediction_8cpp_1af0e126bb83c684d0b97a1a66834d78c5" kindref="member">AGENT_ANGLE_BEHIND_ROBOT</ref>);</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/>private_nh.param(</highlight><highlight class="stringliteral">&quot;tracked_agents_sub_topic&quot;</highlight><highlight class="normal">,<sp/><ref refid="classagents_1_1AgentPathPrediction_1aed35715dd7ddc625f7b84fffbdaab39c" kindref="member">tracked_agents_sub_topic_</ref>,<sp/>std::string(<ref refid="agent__path__prediction_8cpp_1aa289a35d77148ac0299dea3bd75fc4d1" kindref="member">AGENTS_SUB_TOPIC</ref>));</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/>private_nh.param(</highlight><highlight class="stringliteral">&quot;external_paths_sub_topic&quot;</highlight><highlight class="normal">,<sp/><ref refid="classagents_1_1AgentPathPrediction_1aa744d899adca2e86cfde863baad35a22" kindref="member">external_paths_sub_topic_</ref>,<sp/>std::string(<ref refid="agent__path__prediction_8cpp_1a2783b6a2ea72933997aed59b59ae3f7f" kindref="member">EXTERNAL_PATHS_SUB_TOPIC</ref>));</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/>private_nh.param(</highlight><highlight class="stringliteral">&quot;predicted_goal_topic&quot;</highlight><highlight class="normal">,<sp/><ref refid="classagents_1_1AgentPathPrediction_1a813c7bacce62a89d7b6e10ea17482853" kindref="member">predicted_goal_topic_</ref>,<sp/>std::string(<ref refid="agent__path__prediction_8cpp_1ac9a459e1cc25dd40b2d3e50d421c4e9d" kindref="member">PREDICTED_GOAL_SUB_TOPIC</ref>));</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/>private_nh.param(</highlight><highlight class="stringliteral">&quot;get_plan_srv_name&quot;</highlight><highlight class="normal">,<sp/><ref refid="classagents_1_1AgentPathPrediction_1a9d10d00a04ab902e039a7e604ad4d081" kindref="member">get_plan_srv_name_</ref>,<sp/>std::string(<ref refid="agent__path__prediction_8cpp_1a28505835e5427c2308453f69c4bffa07" kindref="member">GET_PLAN_SRV_NAME</ref>));</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/>private_nh.param(</highlight><highlight class="stringliteral">&quot;default_agent_part&quot;</highlight><highlight class="normal">,<sp/><ref refid="classagents_1_1AgentPathPrediction_1a5568632bb235b095c5fd80552a66fee4" kindref="member">default_agent_part_</ref>,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="agent__path__prediction_8h_1a345d218c9cd83bb04fdb7749d8f5bca8" kindref="member">DEFAULT_AGENT_PART</ref>));</highlight></codeline>
<codeline lineno="959"><highlight class="normal">}</highlight></codeline>
<codeline lineno="960"><highlight class="normal"></highlight></codeline>
<codeline lineno="961"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classagents_1_1AgentPathPrediction_1a4ac29e3076e672089a8eca878f59eaca" kindref="member">AgentPathPrediction::prunePath</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>begin_index,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>geometry_msgs::Pose<sp/>&amp;pose,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;geometry_msgs::PoseWithCovarianceStamped&gt;<sp/>&amp;path)<sp/>{</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>prune_index<sp/>=<sp/>begin_index;</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x_diff;</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y_diff;</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sq_diff;</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>smallest_sq_diff<sp/>=<sp/>std::numeric_limits&lt;double&gt;::max();</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(begin_index<sp/>&lt;<sp/>path.size())<sp/>{</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/>x_diff<sp/>=<sp/>path[begin_index].pose.pose.position.x<sp/>-<sp/>pose.position.x;</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/>y_diff<sp/>=<sp/>path[begin_index].pose.pose.position.y<sp/>-<sp/>pose.position.y;</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/>sq_diff<sp/>=<sp/>x_diff<sp/>*<sp/>x_diff<sp/>+<sp/>y_diff<sp/>*<sp/>y_diff;</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sq_diff<sp/>&lt;<sp/>smallest_sq_diff)<sp/>{</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>prune_index<sp/>=<sp/>begin_index;</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>smallest_sq_diff<sp/>=<sp/>sq_diff;</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/>++begin_index;</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>prune_index;</highlight></codeline>
<codeline lineno="978"><highlight class="normal">}</highlight></codeline>
<codeline lineno="979"><highlight class="normal"></highlight></codeline>
<codeline lineno="980"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classagents_1_1AgentPathPrediction_1a8dde9a77addc3ba73e40651678c8cc37" kindref="member">AgentPathPrediction::transformPoseTwist</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cohan_msgs::TrackedAgents<sp/>&amp;tracked_agents,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>&amp;agent_id,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;to_frame,<sp/>geometry_msgs::PoseStamped<sp/>&amp;pose,</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>geometry_msgs::TwistStamped<sp/>&amp;twist)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;agent<sp/>:<sp/>tracked_agents.agents)<sp/>{</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(agent.track_id<sp/>==<sp/>agent_id)<sp/>{</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;segment<sp/>:<sp/>agent.segments)<sp/>{</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(segment.type<sp/>==<sp/><ref refid="classagents_1_1AgentPathPrediction_1a5568632bb235b095c5fd80552a66fee4" kindref="member">default_agent_part_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>geometry_msgs::PoseStamped<sp/>pose_ut;</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pose_ut.header.stamp<sp/>=<sp/>tracked_agents.header.stamp;</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pose_ut.header.frame_id<sp/>=<sp/>tracked_agents.header.frame_id;</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pose_ut.pose<sp/>=<sp/>segment.pose.pose;</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>twist.header.stamp<sp/>=<sp/>tracked_agents.header.stamp;</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>twist.header.frame_id<sp/>=<sp/>tracked_agents.header.frame_id;</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>twist.twist<sp/>=<sp/>segment.twist.twist;</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tf::Stamped&lt;tf::Pose&gt;<sp/>pose_tf;</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tf::poseStampedMsgToTF(pose_ut,<sp/>pose_tf);</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tf::StampedTransform<sp/>start_pose_to_plan_transform;</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(to_frame.empty()<sp/>||<sp/>pose_ut.header.frame_id.empty()<sp/>||<sp/>twist.header.frame_id.empty())<sp/>{</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classagents_1_1AgentPathPrediction_1adbd56e5ff1e91aec6775d519890955c4" kindref="member">tf_</ref>.waitForTransform(to_frame,<sp/>pose_ut.header.frame_id,<sp/>ros::Time(0),<sp/>ros::Duration(0.5));</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classagents_1_1AgentPathPrediction_1adbd56e5ff1e91aec6775d519890955c4" kindref="member">tf_</ref>.lookupTransform(to_frame,<sp/>pose_ut.header.frame_id,<sp/>ros::Time(0),<sp/>start_pose_to_plan_transform);</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pose_tf.setData(start_pose_to_plan_transform<sp/>*<sp/>pose_tf);</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pose_tf.frame_id_<sp/>=<sp/>to_frame;</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tf::poseStampedTFToMsg(pose_tf,<sp/>pose);</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"></highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>geometry_msgs::Twist<sp/>start_twist_to_plan_transform;</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classagents_1_1AgentPathPrediction_1adbd56e5ff1e91aec6775d519890955c4" kindref="member">tf_</ref>.lookupTwist(to_frame,<sp/>twist.header.frame_id,<sp/>ros::Time::now(),<sp/>ros::Duration(0.1),<sp/>start_twist_to_plan_transform);</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>twist.twist.linear.x<sp/>-=<sp/>start_twist_to_plan_transform.linear.x;</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>twist.twist.linear.y<sp/>-=<sp/>start_twist_to_plan_transform.linear.y;</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>twist.twist.angular.z<sp/>-=<sp/>start_twist_to_plan_transform.angular.z;</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>twist.header.frame_id<sp/>=<sp/>to_frame;</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(tf::LookupException<sp/>&amp;ex)<sp/>{</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ROS_ERROR_NAMED(<ref refid="agent__path__prediction_8h_1a8cc8d559acdd2f74085b20977182d5b7" kindref="member">NODE_NAME</ref>,<sp/></highlight><highlight class="stringliteral">&quot;No<sp/>Transform<sp/>available<sp/>Error:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>ex.what());</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(tf::ConnectivityException<sp/>&amp;ex)<sp/>{</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ROS_ERROR_NAMED(<ref refid="agent__path__prediction_8h_1a8cc8d559acdd2f74085b20977182d5b7" kindref="member">NODE_NAME</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Connectivity<sp/>Error:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>ex.what());</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(tf::ExtrapolationException<sp/>&amp;ex)<sp/>{</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ROS_ERROR_NAMED(<ref refid="agent__path__prediction_8h_1a8cc8d559acdd2f74085b20977182d5b7" kindref="member">NODE_NAME</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Extrapolation<sp/>Error:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>ex.what());</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1027"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"></highlight></codeline>
<codeline lineno="1029"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>agents</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1030"><highlight class="normal"></highlight></codeline>
<codeline lineno="1031"><highlight class="normal"></highlight><highlight class="comment">//<sp/>handler<sp/>for<sp/>something<sp/>to<sp/>do<sp/>before<sp/>killing<sp/>the<sp/>node</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1032"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="agent__path__prediction_8cpp_1a458379afdbad052bb3077d6b425d2fee" kindref="member">sigintHandler</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sig)<sp/>{</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/>ROS_DEBUG_NAMED(<ref refid="agent__path__prediction_8h_1a8cc8d559acdd2f74085b20977182d5b7" kindref="member">NODE_NAME</ref>,<sp/></highlight><highlight class="stringliteral">&quot;node<sp/>%s<sp/>will<sp/>now<sp/>shutdown&quot;</highlight><highlight class="normal">,<sp/><ref refid="agent__path__prediction_8h_1a8cc8d559acdd2f74085b20977182d5b7" kindref="member">NODE_NAME</ref>);</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"></highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>default<sp/>sigint<sp/>handler,<sp/>it<sp/>calls<sp/>shutdown()<sp/>on<sp/>node</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/>ros::shutdown();</highlight></codeline>
<codeline lineno="1037"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(DOXYGEN_SHOULD_SKIP_THIS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1039"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>main<sp/>method<sp/>starts<sp/>a<sp/>rosnode<sp/>and<sp/>initializes<sp/>the<sp/>optotrack_person<sp/>class</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1040"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>main(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**argv)<sp/>{</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>starting<sp/>the<sp/>optotrack_person<sp/>node</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/>ros::init(argc,<sp/>argv,<sp/><ref refid="agent__path__prediction_8h_1a8cc8d559acdd2f74085b20977182d5b7" kindref="member">NODE_NAME</ref>);</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/>ROS_DEBUG_NAMED(<ref refid="agent__path__prediction_8h_1a8cc8d559acdd2f74085b20977182d5b7" kindref="member">NODE_NAME</ref>,<sp/></highlight><highlight class="stringliteral">&quot;started<sp/>%s<sp/>node&quot;</highlight><highlight class="normal">,<sp/><ref refid="agent__path__prediction_8h_1a8cc8d559acdd2f74085b20977182d5b7" kindref="member">NODE_NAME</ref>);</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"></highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>initiazling<sp/>agent_path_prediction<sp/>class</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><ref refid="classagents_1_1AgentPathPrediction" kindref="compound">agents::AgentPathPrediction</ref><sp/>agent_path_prediction;</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/>agent_path_prediction.<ref refid="classagents_1_1AgentPathPrediction_1abf79deb87acd0d6ddc422cd41c8b1f12" kindref="member">initialize</ref>();</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"></highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><ref refid="classagents_1_1PredictGoalROS" kindref="compound">agents::PredictGoalROS</ref><sp/>predict_srv;</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"></highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>look<sp/>for<sp/>sigint<sp/>and<sp/>start<sp/>spinning<sp/>the<sp/>node</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/>signal(SIGINT,<sp/><ref refid="agent__path__prediction_8cpp_1a458379afdbad052bb3077d6b425d2fee" kindref="member">sigintHandler</ref>);</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/>ros::spin();</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"></highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1056"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/ptsingaman/ros_ws/CoHAN2.0/src/agent_path_prediction/src/agent_path_prediction.cpp"/>
  </compounddef>
</doxygen>
