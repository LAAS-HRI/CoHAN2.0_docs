<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="set__mode_8cpp" kind="file" language="C++">
    <compoundname>set_mode.cpp</compoundname>
    <includes refid="set__mode_8h" local="no">hateb_local_planner/behavior_tree/action/set_mode.h</includes>
    <incdepgraph>
      <node id="3">
        <label>hateb_local_planner/PlanningMode.h</label>
      </node>
      <node id="7">
        <label>tf2/utils.h</label>
      </node>
      <node id="1">
        <label>/home/ptsingaman/ros_ws/CoHAN2.0/src/hateb_local_planner/src/behavior_tree/action/set_mode.cpp</label>
        <link refid="set__mode_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>hateb_local_planner/behavior_tree/bt_core.h</label>
        <link refid="bt__core_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>hateb_local_planner/behavior_tree/action/set_mode.h</label>
        <link refid="set__mode_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>ros/ros.h</label>
      </node>
      <node id="6">
        <label>behaviortree_cpp/bt_factory.h</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacehateb__local__planner">hateb_local_planner</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;<ref refid="set__mode_8h" kindref="compound">hateb_local_planner/behavior_tree/action/set_mode.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacehateb__local__planner" kindref="compound">hateb_local_planner</ref><sp/>{</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"><ref refid="classhateb__local__planner_1_1SetMode_1a8b841a0464154c16d1054b8dac6840e1" kindref="member">SetMode::SetMode</ref>(ros::NodeHandle&amp;<sp/>nh,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BT::NodeConfig&amp;<sp/>config)<sp/>:<sp/>StatefulActionNodeROS(nh,<sp/>name,<sp/>config)<sp/>{</highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>the<sp/>name<sp/>of<sp/>the<sp/>node</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/>name_<sp/>=<sp/>name;</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>planning_mode_pub_<sp/>=<sp/>node_.advertise&lt;hateb_local_planner::PlanningMode&gt;(&quot;planning_mode&quot;,<sp/>10);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal">SetMode::~SetMode()<sp/>{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>ROS_INFO<sp/>while<sp/>shutting<sp/>down<sp/>the<sp/>node</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/>ROS_INFO(</highlight><highlight class="stringliteral">&quot;Shutting<sp/>down<sp/>the<sp/>setMode<sp/>BT<sp/>Node&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="14"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal">BT::NodeStatus<sp/>SetMode::onStart()<sp/>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/>getInput(</highlight><highlight class="stringliteral">&quot;plan_type&quot;</highlight><highlight class="normal">,<sp/>plan_type_);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/>getInput(</highlight><highlight class="stringliteral">&quot;predict_type&quot;</highlight><highlight class="normal">,<sp/>predict_type_);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>the<sp/>planning<sp/>mode<sp/>on<sp/>the<sp/>blackboard<sp/>based<sp/>on<sp/>the<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(plan_type_<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;single&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>p_msg_.plan<sp/>=<sp/><ref refid="namespacehateb__local__planner_1abf9d2429f0e193ae1b58a22309f8e7faa920a55168971579d99b33ecbc5a8818d" kindref="member">PLAN::SINGLE_BAND</ref>;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(plan_type_<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;dual&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>p_msg_.plan<sp/>=<sp/><ref refid="namespacehateb__local__planner_1abf9d2429f0e193ae1b58a22309f8e7faa2f42651e1382b441e241f275380248f8" kindref="member">PLAN::DUAL_BAND</ref>;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(plan_type_<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;velobs&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>p_msg_.plan<sp/>=<sp/><ref refid="namespacehateb__local__planner_1abf9d2429f0e193ae1b58a22309f8e7faaa6abe4839659313e448501949a814c22" kindref="member">PLAN::VELOBS</ref>;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(plan_type_<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;backoff&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>p_msg_.plan<sp/>=<sp/><ref refid="namespacehateb__local__planner_1abf9d2429f0e193ae1b58a22309f8e7faa0e7a6013dfd67753cefe0fbab4c82512" kindref="member">PLAN::BACKOFF</ref>;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(plan_type_<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;passthrough&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>p_msg_.plan<sp/>=<sp/><ref refid="namespacehateb__local__planner_1abf9d2429f0e193ae1b58a22309f8e7faaf2b794399c666f8c8779e958d7fe6179" kindref="member">PLAN::PASSTHROUGH</ref>;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(predict_type_<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;const_vel&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>p_msg_.predict<sp/>=<sp/><ref refid="namespacehateb__local__planner_1a9053a9eaf358ea63f7d8f3c651376a8aae084372d0f97f6da8cf1b9ef9fc4b28b" kindref="member">PREDICTION::CONST_VEL</ref>;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(predict_type_<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;behind&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>p_msg_.predict<sp/>=<sp/><ref refid="namespacehateb__local__planner_1a9053a9eaf358ea63f7d8f3c651376a8aa51415e167991087447c6a0bcaa8663c8" kindref="member">PREDICTION::BEHIND</ref>;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(predict_type_<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;predict&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>p_msg_.predict<sp/>=<sp/><ref refid="namespacehateb__local__planner_1a9053a9eaf358ea63f7d8f3c651376a8aa24daee122289cc15d963dffa694e7566" kindref="member">PREDICTION::PREDICT</ref>;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(predict_type_<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;external&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>p_msg_.predict<sp/>=<sp/><ref refid="namespacehateb__local__planner_1a9053a9eaf358ea63f7d8f3c651376a8aad6a95a52fdca114b7923c4a52cc38f72" kindref="member">PREDICTION::EXTERNAL</ref>;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Port<sp/>Remapping<sp/>has<sp/>to<sp/>be<sp/>called<sp/>before<sp/>using<sp/>setOutput<sp/>(notice<sp/>name<sp/>change)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>setOutput(</highlight><highlight class="stringliteral">&quot;mode&quot;</highlight><highlight class="normal">,<sp/>p_msg_);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><ref refid="bt__core_8h_1a25ae9fec95ea71254c494b5a594efeb9" kindref="member">BT_INFO</ref>(name_,<sp/></highlight><highlight class="stringliteral">&quot;onStart()&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>status<sp/>to<sp/>RUNNING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>return<sp/>BT::NodeStatus::RUNNING;</highlight></codeline>
<codeline lineno="63"><highlight class="normal">}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal">BT::NodeStatus<sp/>SetMode::onRunning()<sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Keep<sp/>Running<sp/>until<sp/>halt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><ref refid="bt__core_8h_1a25ae9fec95ea71254c494b5a594efeb9" kindref="member">BT_INFO</ref>(name_,<sp/></highlight><highlight class="stringliteral">&quot;onRunning()&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>return<sp/>BT::NodeStatus::RUNNING;</highlight></codeline>
<codeline lineno="69"><highlight class="normal">}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetMode::onHalted()<sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Just<sp/>update<sp/>the<sp/>info</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><ref refid="bt__core_8h_1a25ae9fec95ea71254c494b5a594efeb9" kindref="member">BT_INFO</ref>(name_,<sp/></highlight><highlight class="stringliteral">&quot;Node<sp/>is<sp/>interrupted<sp/>by<sp/>calling<sp/>onHalted()&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="74"><highlight class="normal">}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal">};<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>hateb_local_planner</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/ptsingaman/ros_ws/CoHAN2.0/src/hateb_local_planner/src/behavior_tree/action/set_mode.cpp"/>
  </compounddef>
</doxygen>
