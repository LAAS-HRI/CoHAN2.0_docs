<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="edge__kinematics_8h" kind="file" language="C++">
    <compoundname>edge_kinematics.h</compoundname>
    <includes refid="base__teb__edges_8h" local="no">hateb_local_planner/g2o_types/base_teb_edges.h</includes>
    <includes refid="penalties_8h" local="no">hateb_local_planner/g2o_types/penalties.h</includes>
    <includes refid="vertex__pose_8h" local="no">hateb_local_planner/g2o_types/vertex_pose.h</includes>
    <includes refid="hateb__config_8h" local="no">hateb_local_planner/hateb_config.h</includes>
    <includes local="no">cmath</includes>
    <includedby refid="optimal__planner_8h" local="no">/home/ptsingaman/ros_ws/CoHAN2.0/src/hateb_local_planner/include/hateb_local_planner/optimal_planner.h</includedby>
    <incdepgraph>
      <node id="23">
        <label>boost/pointer_cast.hpp</label>
      </node>
      <node id="24">
        <label>boost/shared_ptr.hpp</label>
      </node>
      <node id="1">
        <label>/home/ptsingaman/ros_ws/CoHAN2.0/src/hateb_local_planner/include/hateb_local_planner/g2o_types/edge_kinematics.h</label>
        <link refid="edge__kinematics_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>Eigen/Geometry</label>
      </node>
      <node id="35">
        <label>cmath</label>
      </node>
      <node id="39">
        <label>g2o/core/hyper_graph_action.h</label>
      </node>
      <node id="15">
        <label>Eigen/Core</label>
      </node>
      <node id="32">
        <label>ros/console.h</label>
      </node>
      <node id="4">
        <label>g2o/core/base_multi_edge.h</label>
      </node>
      <node id="9">
        <label>hateb_local_planner/obstacles.h</label>
        <link refid="obstacles_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>tf/tf.h</label>
      </node>
      <node id="38">
        <label>g2o/core/base_vertex.h</label>
      </node>
      <node id="37">
        <label>g2o/config.h</label>
      </node>
      <node id="22">
        <label>Eigen/StdVector</label>
      </node>
      <node id="31">
        <label>visualization_msgs/Marker.h</label>
      </node>
      <node id="2">
        <label>hateb_local_planner/g2o_types/base_teb_edges.h</label>
        <link refid="base__teb__edges_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>hateb_local_planner/HATebLocalPlannerReconfigureConfig.h</label>
      </node>
      <node id="30">
        <label>tf/transform_datatypes.h</label>
      </node>
      <node id="8">
        <label>hateb_local_planner/footprint_model.h</label>
        <link refid="footprint__model_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>hateb_local_planner/g2o_types/penalties.h</label>
        <link refid="penalties_8h"/>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>geometry_msgs/QuaternionStamped.h</label>
      </node>
      <node id="18">
        <label>vector</label>
      </node>
      <node id="10">
        <label>geometry_msgs/Polygon.h</label>
      </node>
      <node id="26">
        <label>utility</label>
      </node>
      <node id="3">
        <label>g2o/core/base_binary_edge.h</label>
      </node>
      <node id="5">
        <label>g2o/core/base_unary_edge.h</label>
      </node>
      <node id="17">
        <label>boost/utility.hpp</label>
      </node>
      <node id="29">
        <label>geometry_msgs/Pose.h</label>
      </node>
      <node id="33">
        <label>ros/ros.h</label>
      </node>
      <node id="6">
        <label>hateb_local_planner/hateb_config.h</label>
        <link refid="hateb__config_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>hateb_local_planner/distance_calculations.h</label>
        <link refid="distance__calculations_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>geometry_msgs/TwistWithCovariance.h</label>
      </node>
      <node id="28">
        <label>g2o/stuff/misc.h</label>
      </node>
      <node id="36">
        <label>hateb_local_planner/g2o_types/vertex_pose.h</label>
        <link refid="vertex__pose_8h"/>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>hateb_local_planner/pose_se2.h</label>
        <link refid="pose__se2_8h"/>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>hateb_local_planner/misc.h</label>
        <link refid="misc_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>complex</label>
      </node>
      <node id="19">
        <label>algorithm</label>
      </node>
      <node id="16">
        <label>boost/type_traits.hpp</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="5">
        <label>/home/ptsingaman/ros_ws/CoHAN2.0/src/hateb_local_planner/src/optimal_planner.cpp</label>
        <link refid="optimal__planner_8cpp"/>
      </node>
      <node id="1">
        <label>/home/ptsingaman/ros_ws/CoHAN2.0/src/hateb_local_planner/include/hateb_local_planner/g2o_types/edge_kinematics.h</label>
        <link refid="edge__kinematics_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>/home/ptsingaman/ros_ws/CoHAN2.0/src/hateb_local_planner/include/hateb_local_planner/optimal_planner.h</label>
        <link refid="optimal__planner_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>/home/ptsingaman/ros_ws/CoHAN2.0/src/hateb_local_planner/src/visualization.cpp</label>
        <link refid="visualization_8cpp"/>
      </node>
      <node id="4">
        <label>/home/ptsingaman/ros_ws/CoHAN2.0/src/hateb_local_planner/src/hateb_local_planner_ros.cpp</label>
        <link refid="hateb__local__planner__ros_8cpp"/>
      </node>
      <node id="3">
        <label>/home/ptsingaman/ros_ws/CoHAN2.0/src/hateb_local_planner/include/hateb_local_planner/hateb_local_planner_ros.h</label>
        <link refid="hateb__local__planner__ros_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classhateb__local__planner_1_1EdgeKinematicsDiffDrive" prot="public">hateb_local_planner::EdgeKinematicsDiffDrive</innerclass>
    <innerclass refid="classhateb__local__planner_1_1EdgeKinematicsCarlike" prot="public">hateb_local_planner::EdgeKinematicsCarlike</innerclass>
    <innernamespace refid="namespacehateb__local__planner">hateb_local_planner</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*********************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Software<sp/>License<sp/>Agreement<sp/>(BSD<sp/>License)</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/><sp/>Copyright<sp/>(c)<sp/>2016,</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/><sp/>TU<sp/>Dortmund<sp/>-<sp/>Institute<sp/>of<sp/>Control<sp/>Theory<sp/>and<sp/>Systems<sp/>Engineering.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/><sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/><sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/><sp/>*<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/><sp/>*<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>copyright<sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>disclaimer<sp/>in<sp/>the<sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/><sp/><sp/>*<sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>the<sp/>institute<sp/>nor<sp/>the<sp/>names<sp/>of<sp/>its</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>from<sp/>this<sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/><sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/><sp/>&quot;AS<sp/>IS&quot;<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/><sp/>LIMITED<sp/>TO,<sp/>THE<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/><sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/><sp/>COPYRIGHT<sp/>OWNER<sp/>OR<sp/>CONTRIBUTORS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/><sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/><sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/><sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/><sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/><sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING<sp/>IN</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*<sp/><sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/><sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*<sp/>Notes:</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*<sp/>The<sp/>following<sp/>class<sp/>is<sp/>derived<sp/>from<sp/>a<sp/>class<sp/>defined<sp/>by<sp/>the</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*<sp/>g2o-framework.<sp/>g2o<sp/>is<sp/>licensed<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>BSD<sp/>License.</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*<sp/>Refer<sp/>to<sp/>the<sp/>base<sp/>class<sp/>source<sp/>for<sp/>detailed<sp/>licensing<sp/>information.</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/>*<sp/>Author:<sp/>Christoph<sp/>Rösmann</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/>*********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_EDGE_KINEMATICS_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_EDGE_KINEMATICS_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="base__teb__edges_8h" kindref="compound">hateb_local_planner/g2o_types/base_teb_edges.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="penalties_8h" kindref="compound">hateb_local_planner/g2o_types/penalties.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="vertex__pose_8h" kindref="compound">hateb_local_planner/g2o_types/vertex_pose.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="hateb__config_8h" kindref="compound">hateb_local_planner/hateb_config.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cmath&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacehateb__local__planner" kindref="compound">hateb_local_planner</ref><sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="classhateb__local__planner_1_1EdgeKinematicsDiffDrive" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classhateb__local__planner_1_1EdgeKinematicsDiffDrive" kindref="compound">EdgeKinematicsDiffDrive</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classhateb__local__planner_1_1BaseTebBinaryEdge" kindref="compound">BaseTebBinaryEdge</ref>&lt;2,<sp/>double,<sp/>VertexPose,<sp/>VertexPose&gt;<sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="77" refid="classhateb__local__planner_1_1EdgeKinematicsDiffDrive_1abde47d9274d2c3e0e3244f484fb2c18e" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classhateb__local__planner_1_1EdgeKinematicsDiffDrive_1abde47d9274d2c3e0e3244f484fb2c18e" kindref="member">EdgeKinematicsDiffDrive</ref>()<sp/>{<sp/>this-&gt;setMeasurement(0.);<sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="classhateb__local__planner_1_1EdgeKinematicsDiffDrive_1a4ee5a8e0e3146c3e4d2c4361f6d361c4" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classhateb__local__planner_1_1EdgeKinematicsDiffDrive_1a4ee5a8e0e3146c3e4d2c4361f6d361c4" kindref="member">computeError</ref>()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>ROS_ASSERT_MSG(<ref refid="classhateb__local__planner_1_1BaseTebBinaryEdge_1af5ba7be337a1f51e8f000255ffd40e71" kindref="member">cfg_</ref>,<sp/></highlight><highlight class="stringliteral">&quot;You<sp/>must<sp/>call<sp/>setHATebConfig<sp/>on<sp/>EdgeKinematicsDiffDrive()&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">*<sp/>conf1<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal"><ref refid="classhateb__local__planner_1_1VertexPose" kindref="compound">VertexPose</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(_vertices[0]);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">*<sp/>conf2<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal"><ref refid="classhateb__local__planner_1_1VertexPose" kindref="compound">VertexPose</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(_vertices[1]);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector2d<sp/>delta_s<sp/>=<sp/>conf2-&gt;<ref refid="classhateb__local__planner_1_1VertexPose_1a2a7cd5148c462bb89fe82f56cef2d174" kindref="member">position</ref>()<sp/>-<sp/>conf1-&gt;position();</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>non<sp/>holonomic<sp/>constraint</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>_error[0]<sp/>=<sp/>fabs(((cos(conf1-&gt;theta())<sp/>+<sp/>cos(conf2-&gt;theta()))<sp/>*<sp/>delta_s[1])<sp/>-<sp/>((sin(conf1-&gt;theta())<sp/>+<sp/>sin(conf2-&gt;theta()))<sp/>*<sp/>delta_s[0]));</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>positive-drive-direction<sp/>constraint</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector2d<sp/>angle_vec(cos(conf1-&gt;theta()),<sp/>sin(conf1-&gt;theta()));</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>_error[1]<sp/>=<sp/><ref refid="namespacehateb__local__planner_1ab0d8f17ad8f685bedc4aaf2ea24a47f1" kindref="member">penaltyBoundFromBelow</ref>(delta_s.dot(angle_vec),<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>epsilon=0,<sp/>otherwise<sp/>it<sp/>pushes<sp/>the<sp/>first<sp/>bandpoints<sp/>away<sp/>from<sp/>start</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>ROS_ASSERT_MSG(std::isfinite(_error[0])<sp/>&amp;&amp;<sp/>std::isfinite(_error[1]),<sp/></highlight><highlight class="stringliteral">&quot;EdgeKinematicsDiffDrive::computeError()<sp/>_error[0]=%f<sp/>_error[1]=%f\n&quot;</highlight><highlight class="normal">,<sp/>_error[0],<sp/>_error[1]);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USE_ANALYTIC_JACOBI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>linearizeOplus()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>ROS_ASSERT_MSG(<ref refid="classhateb__local__planner_1_1BaseTebBinaryEdge_1af5ba7be337a1f51e8f000255ffd40e71" kindref="member">cfg_</ref>,<sp/></highlight><highlight class="stringliteral">&quot;You<sp/>must<sp/>call<sp/>setHATebConfig<sp/>on<sp/>EdgeKinematicsDiffDrive()&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">*<sp/>conf1<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal"><ref refid="classhateb__local__planner_1_1VertexPose" kindref="compound">VertexPose</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(_vertices[0]);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">*<sp/>conf2<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal"><ref refid="classhateb__local__planner_1_1VertexPose" kindref="compound">VertexPose</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(_vertices[1]);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector2d<sp/>delta_s<sp/>=<sp/>conf2-&gt;<ref refid="classhateb__local__planner_1_1VertexPose_1a2a7cd5148c462bb89fe82f56cef2d174" kindref="member">position</ref>()<sp/>-<sp/>conf1-&gt;position();</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>cos1<sp/>=<sp/>cos(conf1-&gt;theta());</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>cos2<sp/>=<sp/>cos(conf2-&gt;theta());</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sin1<sp/>=<sp/>sin(conf1-&gt;theta());</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sin2<sp/>=<sp/>sin(conf2-&gt;theta());</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>aux1<sp/>=<sp/>sin1<sp/>+<sp/>sin2;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>aux2<sp/>=<sp/>cos1<sp/>+<sp/>cos2;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dd_error_1<sp/>=<sp/>delta_s[0]<sp/>*<sp/>cos1;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dd_error_2<sp/>=<sp/>delta_s[1]<sp/>*<sp/>sin1;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dd_dev<sp/>=<sp/><ref refid="namespacehateb__local__planner_1a0bba69036c01261cfb3a0a0a4901ff5c" kindref="member">penaltyBoundFromBelowDerivative</ref>(dd_error_1<sp/>+<sp/>dd_error_2,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dev_nh_abs<sp/>=<sp/>g2o::sign(((cos(conf1-&gt;theta())<sp/>+<sp/>cos(conf2-&gt;theta()))<sp/>*<sp/>delta_s[1])<sp/>-<sp/>((sin(conf1-&gt;theta())<sp/>+<sp/>sin(conf2-&gt;theta()))<sp/>*<sp/>delta_s[0]));</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>conf1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>_jacobianOplusXi(0,<sp/>0)<sp/>=<sp/>aux1<sp/>*<sp/>dev_nh_abs;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>nh<sp/>x1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>_jacobianOplusXi(0,<sp/>1)<sp/>=<sp/>-aux2<sp/>*<sp/>dev_nh_abs;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>nh<sp/>y1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>_jacobianOplusXi(1,<sp/>0)<sp/>=<sp/>-cos1<sp/>*<sp/>dd_dev;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>drive-dir<sp/>x1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>_jacobianOplusXi(1,<sp/>1)<sp/>=<sp/>-sin1<sp/>*<sp/>dd_dev;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>drive-dir<sp/>y1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>_jacobianOplusXi(0,<sp/>2)<sp/>=<sp/>(-dd_error_2<sp/>-<sp/>dd_error_1)<sp/>*<sp/>dev_nh_abs;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>nh<sp/>angle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>_jacobianOplusXi(1,<sp/>2)<sp/>=<sp/>(-sin1<sp/>*<sp/>delta_s[0]<sp/>+<sp/>cos1<sp/>*<sp/>delta_s[1])<sp/>*<sp/>dd_dev;<sp/><sp/></highlight><highlight class="comment">//<sp/>drive-dir<sp/>angle1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>conf2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>_jacobianOplusXj(0,<sp/>0)<sp/>=<sp/>-aux1<sp/>*<sp/>dev_nh_abs;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>nh<sp/>x2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>_jacobianOplusXj(0,<sp/>1)<sp/>=<sp/>aux2<sp/>*<sp/>dev_nh_abs;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>nh<sp/>y2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>_jacobianOplusXj(1,<sp/>0)<sp/>=<sp/>cos1<sp/>*<sp/>dd_dev;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>drive-dir<sp/>x2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>_jacobianOplusXj(1,<sp/>1)<sp/>=<sp/>sin1<sp/>*<sp/>dd_dev;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>drive-dir<sp/>y2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>_jacobianOplusXj(0,<sp/>2)<sp/>=<sp/>(-sin2<sp/>*<sp/>delta_s[1]<sp/>-<sp/>cos2<sp/>*<sp/>delta_s[0])<sp/>*<sp/>dev_nh_abs;<sp/><sp/></highlight><highlight class="comment">//<sp/>nh<sp/>angle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>_jacobianOplusXj(1,<sp/>2)<sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>drive-dir<sp/>angle1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/>EIGEN_MAKE_ALIGNED_OPERATOR_NEW</highlight></codeline>
<codeline lineno="146"><highlight class="normal">};</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="170" refid="classhateb__local__planner_1_1EdgeKinematicsCarlike" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classhateb__local__planner_1_1EdgeKinematicsCarlike" kindref="compound">EdgeKinematicsCarlike</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classhateb__local__planner_1_1BaseTebBinaryEdge" kindref="compound">BaseTebBinaryEdge</ref>&lt;2,<sp/>double,<sp/>VertexPose,<sp/>VertexPose&gt;<sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="175" refid="classhateb__local__planner_1_1EdgeKinematicsCarlike_1a4c154dffb647b56daaa44be6960503e4" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classhateb__local__planner_1_1EdgeKinematicsCarlike_1a4c154dffb647b56daaa44be6960503e4" kindref="member">EdgeKinematicsCarlike</ref>()<sp/>{<sp/>this-&gt;setMeasurement(0.);<sp/>}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="180" refid="classhateb__local__planner_1_1EdgeKinematicsCarlike_1abbffb31ef8aafbc2c1f82a1ab37789b2" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classhateb__local__planner_1_1EdgeKinematicsCarlike_1abbffb31ef8aafbc2c1f82a1ab37789b2" kindref="member">computeError</ref>()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>ROS_ASSERT_MSG(<ref refid="classhateb__local__planner_1_1BaseTebBinaryEdge_1af5ba7be337a1f51e8f000255ffd40e71" kindref="member">cfg_</ref>,<sp/></highlight><highlight class="stringliteral">&quot;You<sp/>must<sp/>call<sp/>setHATebConfig<sp/>on<sp/>EdgeKinematicsCarlike()&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">*<sp/>conf1<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal"><ref refid="classhateb__local__planner_1_1VertexPose" kindref="compound">VertexPose</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(_vertices[0]);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">*<sp/>conf2<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal"><ref refid="classhateb__local__planner_1_1VertexPose" kindref="compound">VertexPose</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(_vertices[1]);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector2d<sp/>delta_s<sp/>=<sp/>conf2-&gt;<ref refid="classhateb__local__planner_1_1VertexPose_1a2a7cd5148c462bb89fe82f56cef2d174" kindref="member">position</ref>()<sp/>-<sp/>conf1-&gt;position();</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>non<sp/>holonomic<sp/>constraint</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>_error[0]<sp/>=<sp/>fabs(((cos(conf1-&gt;theta())<sp/>+<sp/>cos(conf2-&gt;theta()))<sp/>*<sp/>delta_s[1])<sp/>-<sp/>((sin(conf1-&gt;theta())<sp/>+<sp/>sin(conf2-&gt;theta()))<sp/>*<sp/>delta_s[0]));</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>limit<sp/>minimum<sp/>turning<sp/>radius</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>angle_diff<sp/>=<sp/>g2o::normalize_theta(conf2-&gt;theta()<sp/>-<sp/>conf1-&gt;theta());</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(angle_diff<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_error[1]<sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>straight<sp/>line<sp/>motion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classhateb__local__planner_1_1BaseTebBinaryEdge_1af5ba7be337a1f51e8f000255ffd40e71" kindref="member">cfg_</ref>-&gt;<ref refid="classhateb__local__planner_1_1HATebConfig_1a66f7d8f18503575290b9e27dc81c9fd1" kindref="member">trajectory</ref>.<ref refid="structhateb__local__planner_1_1HATebConfig_1_1Trajectory_1ae16c696f6153f59fd62d32b9f814f3da" kindref="member">exact_arc_length</ref>)<sp/><sp/></highlight><highlight class="comment">//<sp/>use<sp/>exact<sp/>computation<sp/>of<sp/>the<sp/>radius</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_error[1]<sp/>=<sp/><ref refid="namespacehateb__local__planner_1ab0d8f17ad8f685bedc4aaf2ea24a47f1" kindref="member">penaltyBoundFromBelow</ref>(fabs(delta_s.norm()<sp/>/<sp/>(2<sp/>*<sp/>sin(angle_diff<sp/>/<sp/>2))),<sp/><ref refid="classhateb__local__planner_1_1BaseTebBinaryEdge_1af5ba7be337a1f51e8f000255ffd40e71" kindref="member">cfg_</ref>-&gt;<ref refid="classhateb__local__planner_1_1HATebConfig_1a7453a4721bc6ae407a6a8354c0bada97" kindref="member">robot</ref>.<ref refid="structhateb__local__planner_1_1HATebConfig_1_1Robot_1ad4d9e23303241c150806adc0a6880994" kindref="member">min_turning_radius</ref>,<sp/>0.0);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_error[1]<sp/>=<sp/><ref refid="namespacehateb__local__planner_1ab0d8f17ad8f685bedc4aaf2ea24a47f1" kindref="member">penaltyBoundFromBelow</ref>(delta_s.norm()<sp/>/<sp/>fabs(angle_diff),<sp/><ref refid="classhateb__local__planner_1_1BaseTebBinaryEdge_1af5ba7be337a1f51e8f000255ffd40e71" kindref="member">cfg_</ref>-&gt;<ref refid="classhateb__local__planner_1_1HATebConfig_1a7453a4721bc6ae407a6a8354c0bada97" kindref="member">robot</ref>.<ref refid="structhateb__local__planner_1_1HATebConfig_1_1Robot_1ad4d9e23303241c150806adc0a6880994" kindref="member">min_turning_radius</ref>,<sp/>0.0);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>edge<sp/>is<sp/>not<sp/>affected<sp/>by<sp/>the<sp/>epsilon<sp/>parameter,<sp/>the<sp/>user<sp/>might<sp/>add<sp/>an<sp/>exra<sp/>margin<sp/>to<sp/>the<sp/>min_turning_radius<sp/>parameter.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>ROS_ASSERT_MSG(std::isfinite(_error[0])<sp/>&amp;&amp;<sp/>std::isfinite(_error[1]),<sp/></highlight><highlight class="stringliteral">&quot;EdgeKinematicsCarlike::computeError()<sp/>_error[0]=%f<sp/>_error[1]=%f\n&quot;</highlight><highlight class="normal">,<sp/>_error[0],<sp/>_error[1]);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/>EIGEN_MAKE_ALIGNED_OPERATOR_NEW</highlight></codeline>
<codeline lineno="205"><highlight class="normal">};</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>hateb_local_planner</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/ptsingaman/ros_ws/CoHAN2.0/src/hateb_local_planner/include/hateb_local_planner/g2o_types/edge_kinematics.h"/>
  </compounddef>
</doxygen>
