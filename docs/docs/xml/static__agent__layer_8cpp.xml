<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="static__agent__layer_8cpp" kind="file" language="C++">
    <compoundname>static_agent_layer.cpp</compoundname>
    <includes local="no">angles/angles.h</includes>
    <includes refid="static__agent__layer_8h" local="no">cohan_layers/static_agent_layer.h</includes>
    <includes local="no">pluginlib/class_list_macros.h</includes>
    <includes local="no">tf2_eigen/tf2_eigen.h</includes>
    <incdepgraph>
      <node id="11">
        <label>costmap_2d/layered_costmap.h</label>
      </node>
      <node id="9">
        <label>cohan_msgs/TrackedSegmentType.h</label>
      </node>
      <node id="4">
        <label>cohan_layers/AgentStaticLayerConfig.h</label>
      </node>
      <node id="8">
        <label>cohan_msgs/TrackedAgents.h</label>
      </node>
      <node id="17">
        <label>boost/thread.hpp</label>
      </node>
      <node id="15">
        <label>tf2/utils.h</label>
      </node>
      <node id="10">
        <label>costmap_2d/layer.h</label>
      </node>
      <node id="2">
        <label>angles/angles.h</label>
      </node>
      <node id="16">
        <label>tf2_geometry_msgs/tf2_geometry_msgs.h</label>
      </node>
      <node id="12">
        <label>dynamic_reconfigure/server.h</label>
      </node>
      <node id="19">
        <label>tf2_eigen/tf2_eigen.h</label>
      </node>
      <node id="3">
        <label>cohan_layers/static_agent_layer.h</label>
        <link refid="static__agent__layer_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>std_srvs/SetBool.h</label>
      </node>
      <node id="13">
        <label>ros/ros.h</label>
      </node>
      <node id="6">
        <label>agent_path_prediction/AgentsInfo.h</label>
      </node>
      <node id="1">
        <label>/home/ptsingaman/ros_ws/CoHAN2.0/src/cohan_layers/src/static_agent_layer.cpp</label>
        <link refid="static__agent__layer_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>cohan_msgs/StateArray.h</label>
      </node>
      <node id="18">
        <label>pluginlib/class_list_macros.h</label>
      </node>
      <node id="5">
        <label>cohan_layers/agent_layer.h</label>
        <link refid="agent__layer_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacecohan__layers">cohan_layers</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*********************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Software<sp/>License<sp/>Agreement<sp/>(BSD<sp/>License)</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2025<sp/>LAAS/CNRS</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/><sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/><sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/><sp/><sp/>*<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/>*<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>copyright<sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>disclaimer<sp/>in<sp/>the<sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/><sp/>*<sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>the<sp/>institute<sp/>nor<sp/>the<sp/>names<sp/>of<sp/>its</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>from<sp/>this<sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/><sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/><sp/>&quot;AS<sp/>IS&quot;<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/><sp/>LIMITED<sp/>TO,<sp/>THE<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/><sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/><sp/>COPYRIGHT<sp/>OWNER<sp/>OR<sp/>CONTRIBUTORS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/><sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/><sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/><sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/><sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/><sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING<sp/>IN</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/><sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*<sp/><sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*<sp/>Author:<sp/>Phani<sp/>Teja<sp/>Singamaneni<sp/>(email:ptsingaman@laas.fr)</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;angles/angles.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="static__agent__layer_8h" kindref="compound">cohan_layers/static_agent_layer.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;pluginlib/class_list_macros.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;tf2_eigen/tf2_eigen.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal">PLUGINLIB_EXPORT_CLASS(<ref refid="classcohan__layers_1_1StaticAgentLayer" kindref="compound">cohan_layers::StaticAgentLayer</ref>,<sp/>costmap_2d::Layer)</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacecohan__layers" kindref="compound">cohan_layers</ref><sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcohan__layers_1_1StaticAgentLayer_1af3ffd7c9d2053b34272da876409e748c" kindref="member">StaticAgentLayer::onInitialize</ref>()<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><ref refid="classcohan__layers_1_1AgentLayer_1a1af29e63306b94ae450c66916c2d364c" kindref="member">AgentLayer::onInitialize</ref>();</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>ros::NodeHandle<sp/>private_nh(</highlight><highlight class="stringliteral">&quot;~/&quot;</highlight><highlight class="normal"><sp/>+<sp/>name_);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><ref refid="classcohan__layers_1_1StaticAgentLayer_1a5cfaf76ae12bcec76afe637ba4fa387b" kindref="member">loadRosParamFromNodeHandle</ref>(private_nh);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><ref refid="classcohan__layers_1_1StaticAgentLayer_1a16f1bc41f392dcf5a0be73cc5518af7b" kindref="member">server_</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>dynamic_reconfigure::Server&lt;AgentStaticLayerConfig&gt;(private_nh);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><ref refid="classcohan__layers_1_1StaticAgentLayer_1a24ed421aedb609bb6f5c603089d2bea9" kindref="member">f_</ref><sp/>=<sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">](</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;&amp;<sp/>PH1,<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;&amp;<sp/>PH2)<sp/>{<sp/><ref refid="classcohan__layers_1_1StaticAgentLayer_1a35b04cbec065f9653a82efe83fab28f4" kindref="member">configure</ref>(std::forward&lt;decltype(PH1)&gt;(PH1),<sp/>std::forward&lt;decltype(PH2)&gt;(PH2));<sp/>};</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><ref refid="classcohan__layers_1_1StaticAgentLayer_1a16f1bc41f392dcf5a0be73cc5518af7b" kindref="member">server_</ref>-&gt;setCallback(<ref refid="classcohan__layers_1_1StaticAgentLayer_1a24ed421aedb609bb6f5c603089d2bea9" kindref="member">f_</ref>);</highlight></codeline>
<codeline lineno="53"><highlight class="normal">}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcohan__layers_1_1StaticAgentLayer_1a123392f39c7d8ef6054a330b949c558c" kindref="member">StaticAgentLayer::updateBoundsFromAgents</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>min_x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>min_y,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>max_x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>max_y)<sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>agent<sp/>:<sp/><ref refid="classcohan__layers_1_1AgentLayer_1a1b9df0ba8009c991432124692fbf37ed" kindref="member">transformed_agents_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>*min_x<sp/>=<sp/>std::min(*min_x,<sp/>agent.pose.position.x<sp/>-<sp/><ref refid="classcohan__layers_1_1AgentLayer_1a8838ac8e005d47f70003b51745d77065" kindref="member">radius_</ref>);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>*min_y<sp/>=<sp/>std::min(*min_y,<sp/>agent.pose.position.y<sp/>-<sp/><ref refid="classcohan__layers_1_1AgentLayer_1a8838ac8e005d47f70003b51745d77065" kindref="member">radius_</ref>);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>*max_x<sp/>=<sp/>std::max(*max_x,<sp/>agent.pose.position.x<sp/>+<sp/><ref refid="classcohan__layers_1_1AgentLayer_1a8838ac8e005d47f70003b51745d77065" kindref="member">radius_</ref>);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>*max_y<sp/>=<sp/>std::max(*max_y,<sp/>agent.pose.position.y<sp/>+<sp/><ref refid="classcohan__layers_1_1AgentLayer_1a8838ac8e005d47f70003b51745d77065" kindref="member">radius_</ref>);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal">}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcohan__layers_1_1StaticAgentLayer_1a5cfaf76ae12bcec76afe637ba4fa387b" kindref="member">StaticAgentLayer::loadRosParamFromNodeHandle</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ros::NodeHandle&amp;<sp/>private_nh)<sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>private_nh.param(</highlight><highlight class="stringliteral">&quot;robot_radius&quot;</highlight><highlight class="normal">,<sp/><ref refid="classcohan__layers_1_1AgentLayer_1a477bdf069b1d186f3d5fc1fcfae7757b" kindref="member">robot_radius_</ref>,<sp/>0.47);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>private_nh.param(</highlight><highlight class="stringliteral">&quot;agent_radius&quot;</highlight><highlight class="normal">,<sp/><ref refid="classcohan__layers_1_1AgentLayer_1a23e098bc72c0c79470d4493fe59f1572" kindref="member">agent_radius_</ref>,<sp/>0.30);</highlight></codeline>
<codeline lineno="67"><highlight class="normal">}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcohan__layers_1_1StaticAgentLayer_1ae1ea995690ae8e08c60f61a8123115e3" kindref="member">StaticAgentLayer::updateCosts</ref>(costmap_2d::Costmap2D&amp;<sp/></highlight><highlight class="comment">/*master_grid*/</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>min_i,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>min_j,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_i,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_j)<sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>boost::recursive_mutex::scoped_lock<sp/>lock(<ref refid="classcohan__layers_1_1AgentLayer_1a32383038b520594beb56f9bbad4c8082" kindref="member">lock_</ref>);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!enabled_)<sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classcohan__layers_1_1AgentLayer_1abbc559fdf12e15242c7c0852b8d269f8" kindref="member">agents_</ref>.agents.size()<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>costmap_2d::Costmap2D*<sp/>costmap<sp/>=<sp/>layered_costmap_-&gt;getCostmap();</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>res<sp/>=<sp/>costmap-&gt;getResolution();</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="classcohan__layers_1_1AgentLayer_1a1b9df0ba8009c991432124692fbf37ed" kindref="member">transformed_agents_</ref>.size();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>agent<sp/>=<sp/><ref refid="classcohan__layers_1_1AgentLayer_1a1b9df0ba8009c991432124692fbf37ed" kindref="member">transformed_agents_</ref>[i];</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>state<sp/>=<sp/><ref refid="classcohan__layers_1_1AgentLayer_1a1b9df0ba8009c991432124692fbf37ed" kindref="member">transformed_agents_</ref>[i].state;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>type<sp/>=<sp/><ref refid="classcohan__layers_1_1AgentLayer_1a1b9df0ba8009c991432124692fbf37ed" kindref="member">transformed_agents_</ref>[i].type;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>the<sp/>condition<sp/>to<sp/>switch<sp/>the<sp/>radius</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_human_still<sp/>=<sp/><ref refid="classcohan__layers_1_1AgentLayer_1a9277b94d9450bf969edaf84c8beb408c" kindref="member">states_</ref>.empty()<sp/>?<sp/>(type<sp/>==<sp/>1)<sp/>:<sp/>((state<sp/>&lt;<sp/>2)<sp/>&amp;&amp;<sp/>(type<sp/>==<sp/>1));</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width<sp/>=<sp/>std::max(1,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">((2<sp/>*<sp/><ref refid="classcohan__layers_1_1AgentLayer_1a8838ac8e005d47f70003b51745d77065" kindref="member">radius_</ref>)<sp/>/<sp/>res));</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height<sp/>=<sp/>std::max(1,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">((2<sp/>*<sp/><ref refid="classcohan__layers_1_1AgentLayer_1a8838ac8e005d47f70003b51745d77065" kindref="member">radius_</ref>)<sp/>/<sp/>res));</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>cx<sp/>=<sp/>agent.pose.position.x;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>cy<sp/>=<sp/>agent.pose.position.y;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ox<sp/>=<sp/>cx<sp/>-<sp/><ref refid="classcohan__layers_1_1AgentLayer_1a8838ac8e005d47f70003b51745d77065" kindref="member">radius_</ref>;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>oy<sp/>=<sp/>cy<sp/>-<sp/><ref refid="classcohan__layers_1_1AgentLayer_1a8838ac8e005d47f70003b51745d77065" kindref="member">radius_</ref>;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mx;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>my;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>costmap-&gt;worldToMapNoBounds(ox,<sp/>oy,<sp/>mx,<sp/>my);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>start_x<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>start_y<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>end_x<sp/>=<sp/>width;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>end_y<sp/>=<sp/>height;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mx<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>start_x<sp/>=<sp/>-mx;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mx<sp/>+<sp/>width<sp/>&gt;<sp/>costmap-&gt;getSizeInCellsX())<sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>end_x<sp/>=<sp/>std::max(0,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(costmap-&gt;getSizeInCellsX())<sp/>-<sp/>mx);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((start_x<sp/>+<sp/>mx)<sp/>&lt;<sp/>min_i)<sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>start_x<sp/>=<sp/>min_i<sp/>-<sp/>mx;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((end_x<sp/>+<sp/>mx)<sp/>&gt;<sp/>max_i)<sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>end_x<sp/>=<sp/>max_i<sp/>-<sp/>mx;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(my<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>start_y<sp/>=<sp/>-my;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(my<sp/>+<sp/>height<sp/>&gt;<sp/>costmap-&gt;getSizeInCellsY())<sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>end_y<sp/>=<sp/>std::max(0,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(costmap-&gt;getSizeInCellsY())<sp/>-<sp/>my);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((start_y<sp/>+<sp/>my)<sp/>&lt;<sp/>min_j)<sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>start_y<sp/>=<sp/>min_j<sp/>-<sp/>my;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((end_y<sp/>+<sp/>my)<sp/>&gt;<sp/>max_j)<sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>end_y<sp/>=<sp/>max_j<sp/>-<sp/>my;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>bx<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>by<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>var<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rad<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_human_still)<sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bx<sp/>=<sp/>ox<sp/>+<sp/>(res<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>by<sp/>=<sp/>oy<sp/>+<sp/>(res<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>=<sp/><ref refid="classcohan__layers_1_1AgentLayer_1a8838ac8e005d47f70003b51745d77065" kindref="member">radius_</ref>;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rad<sp/>=<sp/><ref refid="classcohan__layers_1_1AgentLayer_1a23e098bc72c0c79470d4493fe59f1572" kindref="member">agent_radius_</ref>;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rad<sp/>=<sp/><ref refid="classcohan__layers_1_1AgentLayer_1a477bdf069b1d186f3d5fc1fcfae7757b" kindref="member">robot_radius_</ref>;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>start_x;<sp/>i<sp/>&lt;<sp/>end_x;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>start_y;<sp/>j<sp/>&lt;<sp/>end_y;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>old_cost<sp/>=<sp/>costmap-&gt;getCost(i<sp/>+<sp/>mx,<sp/>j<sp/>+<sp/>my);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(old_cost<sp/>==<sp/>costmap_2d::NO_INFORMATION)<sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_human_still)<sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>bx<sp/>+<sp/>(i<sp/>*<sp/>res);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>by<sp/>+<sp/>(j<sp/>*<sp/>res);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>val;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/>=<sp/><ref refid="classcohan__layers_1_1AgentLayer_1af272dd866db7d3befefccdbd5e39a0dd" kindref="member">Gaussian2D</ref>(x,<sp/>y,<sp/>cx,<sp/>cy,<sp/><ref refid="classcohan__layers_1_1AgentLayer_1a5fc416e8a57ea57f34927756eb6c74c2" kindref="member">amplitude_</ref>,<sp/>var,<sp/>var);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rad<sp/>=<sp/>sqrt(-2<sp/>*<sp/>var<sp/>*<sp/>log(val<sp/>/<sp/><ref refid="classcohan__layers_1_1AgentLayer_1a5fc416e8a57ea57f34927756eb6c74c2" kindref="member">amplitude_</ref>));</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rad<sp/>&gt;<sp/><ref refid="classcohan__layers_1_1AgentLayer_1a8838ac8e005d47f70003b51745d77065" kindref="member">radius_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>cvalue<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(val);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>costmap-&gt;setCost(i<sp/>+<sp/>mx,<sp/>j<sp/>+<sp/>my,<sp/>std::max(cvalue,<sp/>old_cost));</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>costmap-&gt;mapToWorld(i<sp/>+<sp/>mx,<sp/>j<sp/>+<sp/>my,<sp/>x,<sp/>y);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>x<sp/>-<sp/>cx,<sp/>y<sp/>=<sp/>y<sp/>-<sp/>cy;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>inrad<sp/>=<sp/>sqrt((x<sp/>*<sp/>x)<sp/>+<sp/>(y<sp/>*<sp/>y));</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(inrad<sp/>&gt;<sp/>rad)<sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>cvalue<sp/>=<sp/>costmap_2d::LETHAL_OBSTACLE;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>costmap-&gt;setCost(i<sp/>+<sp/>mx,<sp/>j<sp/>+<sp/>my,<sp/>std::max(cvalue,<sp/>old_cost));</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="190"><highlight class="normal">}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcohan__layers_1_1StaticAgentLayer_1a35b04cbec065f9653a82efe83fab28f4" kindref="member">StaticAgentLayer::configure</ref>(AgentStaticLayerConfig&amp;<sp/>config,<sp/>uint32_t<sp/></highlight><highlight class="comment">/*level*/</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><ref refid="classcohan__layers_1_1AgentLayer_1a5fc416e8a57ea57f34927756eb6c74c2" kindref="member">amplitude_</ref><sp/>=<sp/>config.amplitude;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><ref refid="classcohan__layers_1_1AgentLayer_1a8838ac8e005d47f70003b51745d77065" kindref="member">radius_</ref><sp/>=<sp/>config.radius;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/>enabled_<sp/>=<sp/>config.enabled;</highlight></codeline>
<codeline lineno="196"><highlight class="normal">}</highlight></codeline>
<codeline lineno="197"><highlight class="normal">};<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>cohan_layers</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/ptsingaman/ros_ws/CoHAN2.0/src/cohan_layers/src/static_agent_layer.cpp"/>
  </compounddef>
</doxygen>
